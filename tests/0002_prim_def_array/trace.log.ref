# ---  trace  ---
IP: #217:0x0, type 5, 1[7]
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x8, type 9, 9[3]
GC: ++#217.1.1.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0xc (0x8), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0xc, type 8, 13[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0xe (0xc), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #13.1.2.num.prim <2 (0x2)>
  [1] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0xe, type 1, 10 (0xa)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x10 (0xe), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #221.1.1.num.int <10 (0xa)>
  [1] #13.1.2.num.prim <2 (0x2)>
  [2] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0x10, type 1, 20 (0x14)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x12 (0x10), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.1.num.int <20 (0x14)>
  [1] #221.1.1.num.int <10 (0xa)>
  [2] #13.1.2.num.prim <2 (0x2)>
  [3] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0x12, type 1, 30 (0x1e)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x14 (0x12), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #223.1.1.num.int <30 (0x1e)>
  [1] #222.1.1.num.int <20 (0x14)>
  [2] #221.1.1.num.int <10 (0xa)>
  [3] #13.1.2.num.prim <2 (0x2)>
  [4] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0x14, type 1, 40 (0x28)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x16 (0x14), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #224.1.1.num.int <40 (0x28)>
  [1] #223.1.1.num.int <30 (0x1e)>
  [2] #222.1.1.num.int <20 (0x14)>
  [3] #221.1.1.num.int <10 (0xa)>
  [4] #13.1.2.num.prim <2 (0x2)>
  [5] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0x16, type 1, 50 (0x32)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x18 (0x16), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.1.num.int <50 (0x32)>
  [1] #224.1.1.num.int <40 (0x28)>
  [2] #223.1.1.num.int <30 (0x1e)>
  [3] #222.1.1.num.int <20 (0x14)>
  [4] #221.1.1.num.int <10 (0xa)>
  [5] #13.1.2.num.prim <2 (0x2)>
  [6] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0x18, type 8, 25[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x1a (0x18), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #226.1.1.array <size 5, max 5>
  [1] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0x1a, type 8, 27[3]
GC: ++#220.1.1.mem.ref.ro
GC: ++#226.1.1.array
GC: --#226.1.2.array
GC: --#220.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x1e (0x1a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x1e, type 8, 31[3]
GC: ++#226.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x22 (0x1e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #226.1.2.array <size 5, max 5>
