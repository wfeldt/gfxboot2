# ---  trace  ---
IP: #188:0x0, type 5, 1[7]
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
IP: #188:0x8, type 9, 9[3]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0xc (0x8), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #191.1.1.mem.ref.ro <#188.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0xc, type 8, 13[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0xe (0xc), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #191.1.1.mem.ref.ro <#188.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0xe, type 7, 15[6]
GC: ++#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x15 (0xe), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #192.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0xf, size 6, "bar_01">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #191.1.1.mem.ref.ro <#188.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x15, type 1, 100 (0x64)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x17 (0x15), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #193.1.1.num.int <100 (0x64)>
  [1] #192.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0xf, size 6, "bar_01">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #191.1.1.mem.ref.ro <#188.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x17, type 7, 24[6]
GC: ++#188.1.3.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.4.mem.ro, ip 0x1e (0x17), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #194.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x18, size 6, "bar_02">
  [1] #193.1.1.num.int <100 (0x64)>
  [2] #192.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0xf, size 6, "bar_01">
  [3] #13.1.2.num.prim <4 (0x4)>
  [4] #191.1.1.mem.ref.ro <#188.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x1e, type 1, 200 (0xc8)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.4.mem.ro, ip 0x21 (0x1e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #195.1.1.num.int <200 (0xc8)>
  [1] #194.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x18, size 6, "bar_02">
  [2] #193.1.1.num.int <100 (0x64)>
  [3] #192.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0xf, size 6, "bar_01">
  [4] #13.1.2.num.prim <4 (0x4)>
  [5] #191.1.1.mem.ref.ro <#188.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x21, type 7, 34[6]
GC: ++#188.1.4.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x28 (0x21), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #196.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0x22, size 6, "bar_03">
  [1] #195.1.1.num.int <200 (0xc8)>
  [2] #194.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0x18, size 6, "bar_02">
  [3] #193.1.1.num.int <100 (0x64)>
  [4] #192.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0xf, size 6, "bar_01">
  [5] #13.1.2.num.prim <4 (0x4)>
  [6] #191.1.1.mem.ref.ro <#188.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x28, type 1, 300 (0x12c)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x2b (0x28), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #197.1.1.num.int <300 (0x12c)>
  [1] #196.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0x22, size 6, "bar_03">
  [2] #195.1.1.num.int <200 (0xc8)>
  [3] #194.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0x18, size 6, "bar_02">
  [4] #193.1.1.num.int <100 (0x64)>
  [5] #192.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0xf, size 6, "bar_01">
  [6] #13.1.2.num.prim <4 (0x4)>
  [7] #191.1.1.mem.ref.ro <#188.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x2b, type 8, 44[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x2d (0x2b), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.1.hash <size 3, max 3>
  [1] #191.1.1.mem.ref.ro <#188.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x2d, type 8, 46[3]
GC: ++#191.1.1.mem.ref.ro
GC: ++#198.1.1.hash
GC: --#198.1.2.hash
GC: --#191.1.2.mem.ref.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x31 (0x2d), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
IP: #188:0x31, type 8, 50[3]
GC: ++#198.1.1.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x35 (0x31), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.2.hash <size 3, max 3>
