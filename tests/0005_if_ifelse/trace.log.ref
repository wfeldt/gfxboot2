# ---  trace  ---
IP: #203:0x0, type 5, 1[7]
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x8, type 2, 1 (0x1)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x9 (0x8), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #206.1.1.num.bool <1 (0x1)>
IP: #203:0x9, type 6, 10[4]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xe (0x9), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #207.1.1.mem.code.ro <#203.1.2.mem.ro, ofs 0xa, size 4>
  [1] #206.1.1.num.bool <1 (0x1)>
IP: #203:0xe, type 8, 15[2]
GC: ++#207.1.1.mem.code.ro
GC: --#207.1.2.mem.code.ro
GC: --#206.1.1.num.bool
== backtrace ==
  [0] #208.1.1.ctx.block <code #207.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x11 (0xe), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #207:0x0, type 1, 1001 (0x3e9)
== backtrace ==
  [0] #208.1.1.ctx.block <code #207.1.1.mem.code.ro, ip 0x3 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x11 (0xe), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #210.1.1.num.int <1001 (0x3e9)>
IP: #207:0x3, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#208.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#207.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x11 (0xe), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x11, type 2, 0 (0x0)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x12 (0x11), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #211.1.1.num.bool <0 (0x0)>
  [1] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x12, type 6, 19[4]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x17 (0x12), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #212.1.1.mem.code.ro <#203.1.2.mem.ro, ofs 0x13, size 4>
  [1] #211.1.1.num.bool <0 (0x0)>
  [2] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x17, type 8, 24[2]
GC: --#212.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
GC: --#211.1.1.num.bool
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x1a (0x17), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x1a, type 0, 0 (0x0)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x1b (0x1a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x1b, type 6, 28[4]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x20 (0x1b), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #213.1.1.mem.code.ro <#203.1.2.mem.ro, ofs 0x1c, size 4>
  [1] #0.0.nil <nil>
  [2] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x20, type 8, 33[2]
GC: --#213.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x23 (0x20), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x23, type 2, 1 (0x1)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x24 (0x23), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #214.1.1.num.bool <1 (0x1)>
  [1] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x24, type 6, 37[4]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x29 (0x24), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #215.1.1.mem.code.ro <#203.1.2.mem.ro, ofs 0x25, size 4>
  [1] #214.1.1.num.bool <1 (0x1)>
  [2] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x29, type 6, 42[4]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x2e (0x29), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #216.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x2a, size 4>
  [1] #215.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x25, size 4>
  [2] #214.1.1.num.bool <1 (0x1)>
  [3] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x2e, type 8, 47[6]
GC: ++#215.1.1.mem.code.ro
GC: --#216.1.1.mem.code.ro
GC: --#203.1.3.mem.ro
GC: --#215.1.2.mem.code.ro
GC: --#214.1.1.num.bool
== backtrace ==
  [0] #217.1.1.ctx.block <code #215.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x35 (0x2e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #210.1.1.num.int <1001 (0x3e9)>
IP: #215:0x0, type 1, 10041 (0x2739)
== backtrace ==
  [0] #217.1.1.ctx.block <code #215.1.1.mem.code.ro, ip 0x3 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x35 (0x2e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #218.1.1.num.int <10041 (0x2739)>
  [1] #210.1.1.num.int <1001 (0x3e9)>
IP: #215:0x3, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#217.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#215.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x35 (0x2e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #218.1.1.num.int <10041 (0x2739)>
  [1] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x35, type 2, 0 (0x0)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x36 (0x35), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #219.1.1.num.bool <0 (0x0)>
  [1] #218.1.1.num.int <10041 (0x2739)>
  [2] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x36, type 6, 55[4]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x3b (0x36), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #220.1.1.mem.code.ro <#203.1.2.mem.ro, ofs 0x37, size 4>
  [1] #219.1.1.num.bool <0 (0x0)>
  [2] #218.1.1.num.int <10041 (0x2739)>
  [3] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x3b, type 6, 60[4]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x40 (0x3b), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #221.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x3c, size 4>
  [1] #220.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x37, size 4>
  [2] #219.1.1.num.bool <0 (0x0)>
  [3] #218.1.1.num.int <10041 (0x2739)>
  [4] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x40, type 8, 65[6]
GC: ++#221.1.1.mem.code.ro
GC: --#221.1.2.mem.code.ro
GC: --#220.1.1.mem.code.ro
GC: --#203.1.3.mem.ro
GC: --#219.1.1.num.bool
== backtrace ==
  [0] #222.1.1.ctx.block <code #221.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x47 (0x40), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #218.1.1.num.int <10041 (0x2739)>
  [1] #210.1.1.num.int <1001 (0x3e9)>
IP: #221:0x0, type 1, 10052 (0x2744)
== backtrace ==
  [0] #222.1.1.ctx.block <code #221.1.1.mem.code.ro, ip 0x3 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x47 (0x40), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #223.1.1.num.int <10052 (0x2744)>
  [1] #218.1.1.num.int <10041 (0x2739)>
  [2] #210.1.1.num.int <1001 (0x3e9)>
IP: #221:0x3, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#222.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#221.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x47 (0x40), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #223.1.1.num.int <10052 (0x2744)>
  [1] #218.1.1.num.int <10041 (0x2739)>
  [2] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x47, type 0, 0 (0x0)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x48 (0x47), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #223.1.1.num.int <10052 (0x2744)>
  [2] #218.1.1.num.int <10041 (0x2739)>
  [3] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x48, type 6, 73[4]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x4d (0x48), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #224.1.1.mem.code.ro <#203.1.2.mem.ro, ofs 0x49, size 4>
  [1] #0.0.nil <nil>
  [2] #223.1.1.num.int <10052 (0x2744)>
  [3] #218.1.1.num.int <10041 (0x2739)>
  [4] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x4d, type 6, 78[4]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x52 (0x4d), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #225.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x4e, size 4>
  [1] #224.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x49, size 4>
  [2] #0.0.nil <nil>
  [3] #223.1.1.num.int <10052 (0x2744)>
  [4] #218.1.1.num.int <10041 (0x2739)>
  [5] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x52, type 8, 83[6]
GC: ++#225.1.1.mem.code.ro
GC: --#225.1.2.mem.code.ro
GC: --#224.1.1.mem.code.ro
GC: --#203.1.3.mem.ro
== backtrace ==
  [0] #226.1.1.ctx.block <code #225.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x59 (0x52), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #223.1.1.num.int <10052 (0x2744)>
  [1] #218.1.1.num.int <10041 (0x2739)>
  [2] #210.1.1.num.int <1001 (0x3e9)>
IP: #225:0x0, type 1, 10062 (0x274e)
== backtrace ==
  [0] #226.1.1.ctx.block <code #225.1.1.mem.code.ro, ip 0x3 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x59 (0x52), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #227.1.1.num.int <10062 (0x274e)>
  [1] #223.1.1.num.int <10052 (0x2744)>
  [2] #218.1.1.num.int <10041 (0x2739)>
  [3] #210.1.1.num.int <1001 (0x3e9)>
IP: #225:0x3, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#226.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#225.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x59 (0x52), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #227.1.1.num.int <10062 (0x274e)>
  [1] #223.1.1.num.int <10052 (0x2744)>
  [2] #218.1.1.num.int <10041 (0x2739)>
  [3] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x59, type 7, 90[0]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x5a (0x59), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #228.1.1.mem.str.ro <#203.1.2.mem.ro, ofs 0x5a, size 0, "">
  [1] #227.1.1.num.int <10062 (0x274e)>
  [2] #223.1.1.num.int <10052 (0x2744)>
  [3] #218.1.1.num.int <10041 (0x2739)>
  [4] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x5a, type 6, 91[4]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x5f (0x5a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #229.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x5b, size 4>
  [1] #228.1.1.mem.str.ro <#203.1.3.mem.ro, ofs 0x5a, size 0, "">
  [2] #227.1.1.num.int <10062 (0x274e)>
  [3] #223.1.1.num.int <10052 (0x2744)>
  [4] #218.1.1.num.int <10041 (0x2739)>
  [5] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x5f, type 6, 96[4]
GC: ++#203.1.3.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.4.mem.ro, ip 0x64 (0x5f), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #230.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0x60, size 4>
  [1] #229.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0x5b, size 4>
  [2] #228.1.1.mem.str.ro <#203.1.4.mem.ro, ofs 0x5a, size 0, "">
  [3] #227.1.1.num.int <10062 (0x274e)>
  [4] #223.1.1.num.int <10052 (0x2744)>
  [5] #218.1.1.num.int <10041 (0x2739)>
  [6] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x64, type 8, 101[6]
GC: ++#229.1.1.mem.code.ro
GC: --#230.1.1.mem.code.ro
GC: --#203.1.4.mem.ro
GC: --#229.1.2.mem.code.ro
GC: --#228.1.1.mem.str.ro
GC: --#203.1.3.mem.ro
== backtrace ==
  [0] #231.1.1.ctx.block <code #229.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x6b (0x64), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #227.1.1.num.int <10062 (0x274e)>
  [1] #223.1.1.num.int <10052 (0x2744)>
  [2] #218.1.1.num.int <10041 (0x2739)>
  [3] #210.1.1.num.int <1001 (0x3e9)>
IP: #229:0x0, type 1, 10071 (0x2757)
== backtrace ==
  [0] #231.1.1.ctx.block <code #229.1.1.mem.code.ro, ip 0x3 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x6b (0x64), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #232.1.1.num.int <10071 (0x2757)>
  [1] #227.1.1.num.int <10062 (0x274e)>
  [2] #223.1.1.num.int <10052 (0x2744)>
  [3] #218.1.1.num.int <10041 (0x2739)>
  [4] #210.1.1.num.int <1001 (0x3e9)>
IP: #229:0x3, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#231.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#229.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x6b (0x64), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #232.1.1.num.int <10071 (0x2757)>
  [1] #227.1.1.num.int <10062 (0x274e)>
  [2] #223.1.1.num.int <10052 (0x2744)>
  [3] #218.1.1.num.int <10041 (0x2739)>
  [4] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x6b, type 8, 108[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x6d (0x6b), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #13.1.2.num.prim <2 (0x2)>
  [1] #232.1.1.num.int <10071 (0x2757)>
  [2] #227.1.1.num.int <10062 (0x274e)>
  [3] #223.1.1.num.int <10052 (0x2744)>
  [4] #218.1.1.num.int <10041 (0x2739)>
  [5] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x6d, type 1, 1 (0x1)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x6e (0x6d), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #233.1.1.num.int <1 (0x1)>
  [1] #13.1.2.num.prim <2 (0x2)>
  [2] #232.1.1.num.int <10071 (0x2757)>
  [3] #227.1.1.num.int <10062 (0x274e)>
  [4] #223.1.1.num.int <10052 (0x2744)>
  [5] #218.1.1.num.int <10041 (0x2739)>
  [6] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x6e, type 8, 111[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x70 (0x6e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #234.1.1.array <size 1, max 1>
  [1] #232.1.1.num.int <10071 (0x2757)>
  [2] #227.1.1.num.int <10062 (0x274e)>
  [3] #223.1.1.num.int <10052 (0x2744)>
  [4] #218.1.1.num.int <10041 (0x2739)>
  [5] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x70, type 6, 113[4]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x75 (0x70), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #235.1.1.mem.code.ro <#203.1.2.mem.ro, ofs 0x71, size 4>
  [1] #234.1.1.array <size 1, max 1>
  [2] #232.1.1.num.int <10071 (0x2757)>
  [3] #227.1.1.num.int <10062 (0x274e)>
  [4] #223.1.1.num.int <10052 (0x2744)>
  [5] #218.1.1.num.int <10041 (0x2739)>
  [6] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x75, type 6, 118[4]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x7a (0x75), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #236.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x76, size 4>
  [1] #235.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x71, size 4>
  [2] #234.1.1.array <size 1, max 1>
  [3] #232.1.1.num.int <10071 (0x2757)>
  [4] #227.1.1.num.int <10062 (0x274e)>
  [5] #223.1.1.num.int <10052 (0x2744)>
  [6] #218.1.1.num.int <10041 (0x2739)>
  [7] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x7a, type 8, 123[6]
GC: ++#235.1.1.mem.code.ro
GC: --#236.1.1.mem.code.ro
GC: --#203.1.3.mem.ro
GC: --#235.1.2.mem.code.ro
GC: --#234.1.1.array
GC: --#233.1.1.num.int
== backtrace ==
  [0] #237.1.1.ctx.block <code #235.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x81 (0x7a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #232.1.1.num.int <10071 (0x2757)>
  [1] #227.1.1.num.int <10062 (0x274e)>
  [2] #223.1.1.num.int <10052 (0x2744)>
  [3] #218.1.1.num.int <10041 (0x2739)>
  [4] #210.1.1.num.int <1001 (0x3e9)>
IP: #235:0x0, type 1, 10081 (0x2761)
== backtrace ==
  [0] #237.1.1.ctx.block <code #235.1.1.mem.code.ro, ip 0x3 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x81 (0x7a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #238.1.1.num.int <10081 (0x2761)>
  [1] #232.1.1.num.int <10071 (0x2757)>
  [2] #227.1.1.num.int <10062 (0x274e)>
  [3] #223.1.1.num.int <10052 (0x2744)>
  [4] #218.1.1.num.int <10041 (0x2739)>
  [5] #210.1.1.num.int <1001 (0x3e9)>
IP: #235:0x3, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#237.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#235.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x81 (0x7a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #238.1.1.num.int <10081 (0x2761)>
  [1] #232.1.1.num.int <10071 (0x2757)>
  [2] #227.1.1.num.int <10062 (0x274e)>
  [3] #223.1.1.num.int <10052 (0x2744)>
  [4] #218.1.1.num.int <10041 (0x2739)>
  [5] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x81, type 8, 130[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x83 (0x81), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #238.1.1.num.int <10081 (0x2761)>
  [2] #232.1.1.num.int <10071 (0x2757)>
  [3] #227.1.1.num.int <10062 (0x274e)>
  [4] #223.1.1.num.int <10052 (0x2744)>
  [5] #218.1.1.num.int <10041 (0x2739)>
  [6] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x83, type 7, 132[1]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x85 (0x83), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #239.1.1.mem.str.ro <#203.1.2.mem.ro, ofs 0x84, size 1, "a">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #238.1.1.num.int <10081 (0x2761)>
  [3] #232.1.1.num.int <10071 (0x2757)>
  [4] #227.1.1.num.int <10062 (0x274e)>
  [5] #223.1.1.num.int <10052 (0x2744)>
  [6] #218.1.1.num.int <10041 (0x2739)>
  [7] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x85, type 1, 2 (0x2)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x86 (0x85), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #240.1.1.num.int <2 (0x2)>
  [1] #239.1.1.mem.str.ro <#203.1.2.mem.ro, ofs 0x84, size 1, "a">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #238.1.1.num.int <10081 (0x2761)>
  [4] #232.1.1.num.int <10071 (0x2757)>
  [5] #227.1.1.num.int <10062 (0x274e)>
  [6] #223.1.1.num.int <10052 (0x2744)>
  [7] #218.1.1.num.int <10041 (0x2739)>
  [8] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x86, type 8, 135[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x88 (0x86), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #241.1.1.hash <size 1, max 1>
  [1] #238.1.1.num.int <10081 (0x2761)>
  [2] #232.1.1.num.int <10071 (0x2757)>
  [3] #227.1.1.num.int <10062 (0x274e)>
  [4] #223.1.1.num.int <10052 (0x2744)>
  [5] #218.1.1.num.int <10041 (0x2739)>
  [6] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x88, type 6, 137[4]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x8d (0x88), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #242.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x89, size 4>
  [1] #241.1.1.hash <size 1, max 1>
  [2] #238.1.1.num.int <10081 (0x2761)>
  [3] #232.1.1.num.int <10071 (0x2757)>
  [4] #227.1.1.num.int <10062 (0x274e)>
  [5] #223.1.1.num.int <10052 (0x2744)>
  [6] #218.1.1.num.int <10041 (0x2739)>
  [7] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x8d, type 6, 142[4]
GC: ++#203.1.3.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.4.mem.ro, ip 0x92 (0x8d), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #243.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0x8e, size 4>
  [1] #242.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0x89, size 4>
  [2] #241.1.1.hash <size 1, max 1>
  [3] #238.1.1.num.int <10081 (0x2761)>
  [4] #232.1.1.num.int <10071 (0x2757)>
  [5] #227.1.1.num.int <10062 (0x274e)>
  [6] #223.1.1.num.int <10052 (0x2744)>
  [7] #218.1.1.num.int <10041 (0x2739)>
  [8] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x92, type 8, 147[6]
GC: ++#242.1.1.mem.code.ro
GC: --#243.1.1.mem.code.ro
GC: --#203.1.4.mem.ro
GC: --#242.1.2.mem.code.ro
GC: --#241.1.1.hash
GC: --#239.1.1.mem.str.ro
GC: --#240.1.1.num.int
GC: --#203.1.3.mem.ro
== backtrace ==
  [0] #244.1.1.ctx.block <code #242.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x99 (0x92), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #238.1.1.num.int <10081 (0x2761)>
  [1] #232.1.1.num.int <10071 (0x2757)>
  [2] #227.1.1.num.int <10062 (0x274e)>
  [3] #223.1.1.num.int <10052 (0x2744)>
  [4] #218.1.1.num.int <10041 (0x2739)>
  [5] #210.1.1.num.int <1001 (0x3e9)>
IP: #242:0x0, type 1, 10091 (0x276b)
== backtrace ==
  [0] #244.1.1.ctx.block <code #242.1.1.mem.code.ro, ip 0x3 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x99 (0x92), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #245.1.1.num.int <10091 (0x276b)>
  [1] #238.1.1.num.int <10081 (0x2761)>
  [2] #232.1.1.num.int <10071 (0x2757)>
  [3] #227.1.1.num.int <10062 (0x274e)>
  [4] #223.1.1.num.int <10052 (0x2744)>
  [5] #218.1.1.num.int <10041 (0x2739)>
  [6] #210.1.1.num.int <1001 (0x3e9)>
IP: #242:0x3, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#244.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#242.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x99 (0x92), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #245.1.1.num.int <10091 (0x276b)>
  [1] #238.1.1.num.int <10081 (0x2761)>
  [2] #232.1.1.num.int <10071 (0x2757)>
  [3] #227.1.1.num.int <10062 (0x274e)>
  [4] #223.1.1.num.int <10052 (0x2744)>
  [5] #218.1.1.num.int <10041 (0x2739)>
  [6] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x99, type 6, 154[2]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0x9c (0x99), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #246.1.1.mem.code.ro <#203.1.2.mem.ro, ofs 0x9a, size 2>
  [1] #245.1.1.num.int <10091 (0x276b)>
  [2] #238.1.1.num.int <10081 (0x2761)>
  [3] #232.1.1.num.int <10071 (0x2757)>
  [4] #227.1.1.num.int <10062 (0x274e)>
  [5] #223.1.1.num.int <10052 (0x2744)>
  [6] #218.1.1.num.int <10041 (0x2739)>
  [7] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0x9c, type 6, 157[5]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0xa2 (0x9c), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #247.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x9d, size 5>
  [1] #246.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0x9a, size 2>
  [2] #245.1.1.num.int <10091 (0x276b)>
  [3] #238.1.1.num.int <10081 (0x2761)>
  [4] #232.1.1.num.int <10071 (0x2757)>
  [5] #227.1.1.num.int <10062 (0x274e)>
  [6] #223.1.1.num.int <10052 (0x2744)>
  [7] #218.1.1.num.int <10041 (0x2739)>
  [8] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0xa2, type 6, 163[5]
GC: ++#203.1.3.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.4.mem.ro, ip 0xa8 (0xa2), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #248.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0xa3, size 5>
  [1] #247.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0x9d, size 5>
  [2] #246.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0x9a, size 2>
  [3] #245.1.1.num.int <10091 (0x276b)>
  [4] #238.1.1.num.int <10081 (0x2761)>
  [5] #232.1.1.num.int <10071 (0x2757)>
  [6] #227.1.1.num.int <10062 (0x274e)>
  [7] #223.1.1.num.int <10052 (0x2744)>
  [8] #218.1.1.num.int <10041 (0x2739)>
  [9] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0xa8, type 8, 169[6]
GC: ++#247.1.1.mem.code.ro
GC: --#248.1.1.mem.code.ro
GC: --#203.1.4.mem.ro
GC: --#247.1.2.mem.code.ro
GC: --#246.1.1.mem.code.ro
GC: --#203.1.3.mem.ro
== backtrace ==
  [0] #249.1.1.ctx.block <code #247.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xaf (0xa8), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #245.1.1.num.int <10091 (0x276b)>
  [1] #238.1.1.num.int <10081 (0x2761)>
  [2] #232.1.1.num.int <10071 (0x2757)>
  [3] #227.1.1.num.int <10062 (0x274e)>
  [4] #223.1.1.num.int <10052 (0x2744)>
  [5] #218.1.1.num.int <10041 (0x2739)>
  [6] #210.1.1.num.int <1001 (0x3e9)>
IP: #247:0x0, type 1, 100101 (0x18705)
== backtrace ==
  [0] #249.1.1.ctx.block <code #247.1.1.mem.code.ro, ip 0x4 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xaf (0xa8), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #250.1.1.num.int <100101 (0x18705)>
  [1] #245.1.1.num.int <10091 (0x276b)>
  [2] #238.1.1.num.int <10081 (0x2761)>
  [3] #232.1.1.num.int <10071 (0x2757)>
  [4] #227.1.1.num.int <10062 (0x274e)>
  [5] #223.1.1.num.int <10052 (0x2744)>
  [6] #218.1.1.num.int <10041 (0x2739)>
  [7] #210.1.1.num.int <1001 (0x3e9)>
IP: #247:0x4, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#249.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#247.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0xaf (0xa8), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #250.1.1.num.int <100101 (0x18705)>
  [1] #245.1.1.num.int <10091 (0x276b)>
  [2] #238.1.1.num.int <10081 (0x2761)>
  [3] #232.1.1.num.int <10071 (0x2757)>
  [4] #227.1.1.num.int <10062 (0x274e)>
  [5] #223.1.1.num.int <10052 (0x2744)>
  [6] #218.1.1.num.int <10041 (0x2739)>
  [7] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0xaf, type 9, 176[3]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xb3 (0xaf), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #251.1.1.mem.ref.ro <#203.1.2.mem.ro, ofs 0xb0, size 3, "foo">
  [1] #250.1.1.num.int <100101 (0x18705)>
  [2] #245.1.1.num.int <10091 (0x276b)>
  [3] #238.1.1.num.int <10081 (0x2761)>
  [4] #232.1.1.num.int <10071 (0x2757)>
  [5] #227.1.1.num.int <10062 (0x274e)>
  [6] #223.1.1.num.int <10052 (0x2744)>
  [7] #218.1.1.num.int <10041 (0x2739)>
  [8] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0xb3, type 6, 180[5]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0xb9 (0xb3), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #252.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0xb4, size 5>
  [1] #251.1.1.mem.ref.ro <#203.1.3.mem.ro, ofs 0xb0, size 3, "foo">
  [2] #250.1.1.num.int <100101 (0x18705)>
  [3] #245.1.1.num.int <10091 (0x276b)>
  [4] #238.1.1.num.int <10081 (0x2761)>
  [5] #232.1.1.num.int <10071 (0x2757)>
  [6] #227.1.1.num.int <10062 (0x274e)>
  [7] #223.1.1.num.int <10052 (0x2744)>
  [8] #218.1.1.num.int <10041 (0x2739)>
  [9] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0xb9, type 6, 186[5]
GC: ++#203.1.3.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.4.mem.ro, ip 0xbf (0xb9), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #253.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0xba, size 5>
  [1] #252.1.1.mem.code.ro <#203.1.4.mem.ro, ofs 0xb4, size 5>
  [2] #251.1.1.mem.ref.ro <#203.1.4.mem.ro, ofs 0xb0, size 3, "foo">
  [3] #250.1.1.num.int <100101 (0x18705)>
  [4] #245.1.1.num.int <10091 (0x276b)>
  [5] #238.1.1.num.int <10081 (0x2761)>
  [6] #232.1.1.num.int <10071 (0x2757)>
  [7] #227.1.1.num.int <10062 (0x274e)>
  [8] #223.1.1.num.int <10052 (0x2744)>
  [9] #218.1.1.num.int <10041 (0x2739)>
  [10] #210.1.1.num.int <1001 (0x3e9)>
IP: #203:0xbf, type 8, 192[6]
GC: ++#252.1.1.mem.code.ro
GC: --#253.1.1.mem.code.ro
GC: --#203.1.4.mem.ro
GC: --#252.1.2.mem.code.ro
GC: --#251.1.1.mem.ref.ro
GC: --#203.1.3.mem.ro
== backtrace ==
  [0] #254.1.1.ctx.block <code #252.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xc6 (0xbf), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #250.1.1.num.int <100101 (0x18705)>
  [1] #245.1.1.num.int <10091 (0x276b)>
  [2] #238.1.1.num.int <10081 (0x2761)>
  [3] #232.1.1.num.int <10071 (0x2757)>
  [4] #227.1.1.num.int <10062 (0x274e)>
  [5] #223.1.1.num.int <10052 (0x2744)>
  [6] #218.1.1.num.int <10041 (0x2739)>
  [7] #210.1.1.num.int <1001 (0x3e9)>
IP: #252:0x0, type 1, 100111 (0x1870f)
== backtrace ==
  [0] #254.1.1.ctx.block <code #252.1.1.mem.code.ro, ip 0x4 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xc6 (0xbf), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #255.1.1.num.int <100111 (0x1870f)>
  [1] #250.1.1.num.int <100101 (0x18705)>
  [2] #245.1.1.num.int <10091 (0x276b)>
  [3] #238.1.1.num.int <10081 (0x2761)>
  [4] #232.1.1.num.int <10071 (0x2757)>
  [5] #227.1.1.num.int <10062 (0x274e)>
  [6] #223.1.1.num.int <10052 (0x2744)>
  [7] #218.1.1.num.int <10041 (0x2739)>
  [8] #210.1.1.num.int <1001 (0x3e9)>
IP: #252:0x4, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#254.1.1.ctx.block
GC: --#205.1.2.ctx.func
GC: --#252.1.1.mem.code.ro
GC: --#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0xc6 (0xbf), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #255.1.1.num.int <100111 (0x1870f)>
  [1] #250.1.1.num.int <100101 (0x18705)>
  [2] #245.1.1.num.int <10091 (0x276b)>
  [3] #238.1.1.num.int <10081 (0x2761)>
  [4] #232.1.1.num.int <10071 (0x2757)>
  [5] #227.1.1.num.int <10062 (0x274e)>
  [6] #223.1.1.num.int <10052 (0x2744)>
  [7] #218.1.1.num.int <10041 (0x2739)>
  [8] #210.1.1.num.int <1001 (0x3e9)>
