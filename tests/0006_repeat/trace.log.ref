# ---  trace  ---
IP: #186:0x0, type 5, 1[7]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x8, type 1, 1 (0x1)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x9 (0x8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #189.1.1.num.int <1 (0x1)>
IP: #186:0x9, type 6, 10[3]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xd (0x9), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.mem.code.ro <#186.1.2.mem.ro, ofs 0xa, size 3>
  [1] #189.1.1.num.int <1 (0x1)>
IP: #186:0xd, type 8, 14[6]
GC: ++#190.1.1.mem.code.ro
GC: --#190.1.2.mem.code.ro
GC: --#189.1.1.num.int
== backtrace ==
  [0] #191.1.1.ctx.repeat <code #190.1.1.mem.code.ro, ip 0x0 (0x0), index 1>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x14 (0xd), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #190:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #191.1.1.ctx.repeat <code #190.1.1.mem.code.ro, ip 0x2 (0x0), index 1>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x14 (0xd), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <10 (0xa)>
IP: #190:0x2, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#191.1.1.ctx.repeat
GC: --#188.1.2.ctx.func
GC: --#190.1.1.mem.code.ro
GC: --#186.1.2.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x14 (0xd), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <10 (0xa)>
IP: #186:0x14, type 1, 0 (0x0)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x15 (0x14), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.1.num.int <0 (0x0)>
  [1] #193.1.1.num.int <10 (0xa)>
IP: #186:0x15, type 6, 22[3]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x19 (0x15), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.1.mem.code.ro <#186.1.2.mem.ro, ofs 0x16, size 3>
  [1] #194.1.1.num.int <0 (0x0)>
  [2] #193.1.1.num.int <10 (0xa)>
IP: #186:0x19, type 8, 26[6]
GC: --#195.1.1.mem.code.ro
GC: --#186.1.2.mem.ro
GC: --#194.1.1.num.int
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x20 (0x19), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <10 (0xa)>
IP: #186:0x20, type 1, -10 (0xfffffffffffffff6)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x22 (0x20), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #196.1.1.num.int <-10 (0xfffffffffffffff6)>
  [1] #193.1.1.num.int <10 (0xa)>
IP: #186:0x22, type 6, 35[3]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x26 (0x22), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #197.1.1.mem.code.ro <#186.1.2.mem.ro, ofs 0x23, size 3>
  [1] #196.1.1.num.int <-10 (0xfffffffffffffff6)>
  [2] #193.1.1.num.int <10 (0xa)>
IP: #186:0x26, type 8, 39[6]
GC: --#197.1.1.mem.code.ro
GC: --#186.1.2.mem.ro
GC: --#196.1.1.num.int
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x2d (0x26), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <10 (0xa)>
IP: #186:0x2d, type 1, 4 (0x4)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x2e (0x2d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.num.int <4 (0x4)>
  [1] #193.1.1.num.int <10 (0xa)>
IP: #186:0x2e, type 6, 47[3]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x32 (0x2e), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #199.1.1.mem.code.ro <#186.1.2.mem.ro, ofs 0x2f, size 3>
  [1] #198.1.1.num.int <4 (0x4)>
  [2] #193.1.1.num.int <10 (0xa)>
IP: #186:0x32, type 8, 51[6]
GC: ++#199.1.1.mem.code.ro
GC: --#199.1.2.mem.code.ro
GC: --#198.1.1.num.int
== backtrace ==
  [0] #200.1.1.ctx.repeat <code #199.1.1.mem.code.ro, ip 0x0 (0x0), index 4>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <10 (0xa)>
IP: #199:0x0, type 1, 40 (0x28)
== backtrace ==
  [0] #200.1.1.ctx.repeat <code #199.1.1.mem.code.ro, ip 0x2 (0x0), index 4>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #201.1.1.num.int <40 (0x28)>
  [1] #193.1.1.num.int <10 (0xa)>
IP: #199:0x2, type 3, 1 (0x1)
== backtrace ==
  [0] #200.1.1.ctx.repeat <code #199.1.1.mem.code.ro, ip 0x0 (0x2), index 3>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #201.1.1.num.int <40 (0x28)>
  [1] #193.1.1.num.int <10 (0xa)>
IP: #199:0x0, type 1, 40 (0x28)
== backtrace ==
  [0] #200.1.1.ctx.repeat <code #199.1.1.mem.code.ro, ip 0x2 (0x0), index 3>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #202.1.1.num.int <40 (0x28)>
  [1] #201.1.1.num.int <40 (0x28)>
  [2] #193.1.1.num.int <10 (0xa)>
IP: #199:0x2, type 3, 1 (0x1)
== backtrace ==
  [0] #200.1.1.ctx.repeat <code #199.1.1.mem.code.ro, ip 0x0 (0x2), index 2>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #202.1.1.num.int <40 (0x28)>
  [1] #201.1.1.num.int <40 (0x28)>
  [2] #193.1.1.num.int <10 (0xa)>
IP: #199:0x0, type 1, 40 (0x28)
== backtrace ==
  [0] #200.1.1.ctx.repeat <code #199.1.1.mem.code.ro, ip 0x2 (0x0), index 2>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #203.1.1.num.int <40 (0x28)>
  [1] #202.1.1.num.int <40 (0x28)>
  [2] #201.1.1.num.int <40 (0x28)>
  [3] #193.1.1.num.int <10 (0xa)>
IP: #199:0x2, type 3, 1 (0x1)
== backtrace ==
  [0] #200.1.1.ctx.repeat <code #199.1.1.mem.code.ro, ip 0x0 (0x2), index 1>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #203.1.1.num.int <40 (0x28)>
  [1] #202.1.1.num.int <40 (0x28)>
  [2] #201.1.1.num.int <40 (0x28)>
  [3] #193.1.1.num.int <10 (0xa)>
IP: #199:0x0, type 1, 40 (0x28)
== backtrace ==
  [0] #200.1.1.ctx.repeat <code #199.1.1.mem.code.ro, ip 0x2 (0x0), index 1>
  [1] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #204.1.1.num.int <40 (0x28)>
  [1] #203.1.1.num.int <40 (0x28)>
  [2] #202.1.1.num.int <40 (0x28)>
  [3] #201.1.1.num.int <40 (0x28)>
  [4] #193.1.1.num.int <10 (0xa)>
IP: #199:0x2, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#200.1.1.ctx.repeat
GC: --#188.1.2.ctx.func
GC: --#199.1.1.mem.code.ro
GC: --#186.1.2.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #204.1.1.num.int <40 (0x28)>
  [1] #203.1.1.num.int <40 (0x28)>
  [2] #202.1.1.num.int <40 (0x28)>
  [3] #201.1.1.num.int <40 (0x28)>
  [4] #193.1.1.num.int <10 (0xa)>
