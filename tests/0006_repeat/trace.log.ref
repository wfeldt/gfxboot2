# ---  trace  ---
IP: #207:0x0, type 5, 1[7]
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
IP: #207:0x8, type 1, 1 (0x1)
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x9 (0x8), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #210.1.1.num.int <1 (0x1)>
IP: #207:0x9, type 6, 10[3]
GC: ++#207.1.1.mem.ro
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0xd (0x9), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #211.1.1.mem.code.ro <#207.1.2.mem.ro, ofs 0xa, size 3>
  [1] #210.1.1.num.int <1 (0x1)>
IP: #207:0xd, type 8, 14[6]
GC: ++#211.1.1.mem.code.ro
GC: --#211.1.2.mem.code.ro
GC: --#210.1.1.num.int
== backtrace ==
  [0] #212.1.1.ctx.repeat <code #211.1.1.mem.code.ro, ip 0x0 (0x0), index 1>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x14 (0xd), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
IP: #211:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #212.1.1.ctx.repeat <code #211.1.1.mem.code.ro, ip 0x2 (0x0), index 1>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x14 (0xd), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #214.1.1.num.int <10 (0xa)>
IP: #211:0x2, type 3, 1 (0x1)
GC: ++#209.1.1.ctx.func
GC: --#212.1.1.ctx.repeat
GC: --#209.1.2.ctx.func
GC: --#211.1.1.mem.code.ro
GC: --#207.1.2.mem.ro
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x14 (0xd), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #214.1.1.num.int <10 (0xa)>
IP: #207:0x14, type 1, 0 (0x0)
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x15 (0x14), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #215.1.1.num.int <0 (0x0)>
  [1] #214.1.1.num.int <10 (0xa)>
IP: #207:0x15, type 6, 22[3]
GC: ++#207.1.1.mem.ro
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x19 (0x15), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #216.1.1.mem.code.ro <#207.1.2.mem.ro, ofs 0x16, size 3>
  [1] #215.1.1.num.int <0 (0x0)>
  [2] #214.1.1.num.int <10 (0xa)>
IP: #207:0x19, type 8, 26[6]
GC: --#216.1.1.mem.code.ro
GC: --#207.1.2.mem.ro
GC: --#215.1.1.num.int
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x20 (0x19), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #214.1.1.num.int <10 (0xa)>
IP: #207:0x20, type 1, -10 (0xfffffffffffffff6)
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x22 (0x20), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #217.1.1.num.int <-10 (0xfffffffffffffff6)>
  [1] #214.1.1.num.int <10 (0xa)>
IP: #207:0x22, type 6, 35[3]
GC: ++#207.1.1.mem.ro
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x26 (0x22), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #218.1.1.mem.code.ro <#207.1.2.mem.ro, ofs 0x23, size 3>
  [1] #217.1.1.num.int <-10 (0xfffffffffffffff6)>
  [2] #214.1.1.num.int <10 (0xa)>
IP: #207:0x26, type 8, 39[6]
GC: --#218.1.1.mem.code.ro
GC: --#207.1.2.mem.ro
GC: --#217.1.1.num.int
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x2d (0x26), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #214.1.1.num.int <10 (0xa)>
IP: #207:0x2d, type 1, 4 (0x4)
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x2e (0x2d), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #219.1.1.num.int <4 (0x4)>
  [1] #214.1.1.num.int <10 (0xa)>
IP: #207:0x2e, type 6, 47[3]
GC: ++#207.1.1.mem.ro
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x32 (0x2e), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #220.1.1.mem.code.ro <#207.1.2.mem.ro, ofs 0x2f, size 3>
  [1] #219.1.1.num.int <4 (0x4)>
  [2] #214.1.1.num.int <10 (0xa)>
IP: #207:0x32, type 8, 51[6]
GC: ++#220.1.1.mem.code.ro
GC: --#220.1.2.mem.code.ro
GC: --#219.1.1.num.int
== backtrace ==
  [0] #221.1.1.ctx.repeat <code #220.1.1.mem.code.ro, ip 0x0 (0x0), index 4>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #214.1.1.num.int <10 (0xa)>
IP: #220:0x0, type 1, 40 (0x28)
== backtrace ==
  [0] #221.1.1.ctx.repeat <code #220.1.1.mem.code.ro, ip 0x2 (0x0), index 4>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #222.1.1.num.int <40 (0x28)>
  [1] #214.1.1.num.int <10 (0xa)>
IP: #220:0x2, type 3, 1 (0x1)
== backtrace ==
  [0] #221.1.1.ctx.repeat <code #220.1.1.mem.code.ro, ip 0x0 (0x2), index 3>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #222.1.1.num.int <40 (0x28)>
  [1] #214.1.1.num.int <10 (0xa)>
IP: #220:0x0, type 1, 40 (0x28)
== backtrace ==
  [0] #221.1.1.ctx.repeat <code #220.1.1.mem.code.ro, ip 0x2 (0x0), index 3>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #223.1.1.num.int <40 (0x28)>
  [1] #222.1.1.num.int <40 (0x28)>
  [2] #214.1.1.num.int <10 (0xa)>
IP: #220:0x2, type 3, 1 (0x1)
== backtrace ==
  [0] #221.1.1.ctx.repeat <code #220.1.1.mem.code.ro, ip 0x0 (0x2), index 2>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #223.1.1.num.int <40 (0x28)>
  [1] #222.1.1.num.int <40 (0x28)>
  [2] #214.1.1.num.int <10 (0xa)>
IP: #220:0x0, type 1, 40 (0x28)
== backtrace ==
  [0] #221.1.1.ctx.repeat <code #220.1.1.mem.code.ro, ip 0x2 (0x0), index 2>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #224.1.1.num.int <40 (0x28)>
  [1] #223.1.1.num.int <40 (0x28)>
  [2] #222.1.1.num.int <40 (0x28)>
  [3] #214.1.1.num.int <10 (0xa)>
IP: #220:0x2, type 3, 1 (0x1)
== backtrace ==
  [0] #221.1.1.ctx.repeat <code #220.1.1.mem.code.ro, ip 0x0 (0x2), index 1>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #224.1.1.num.int <40 (0x28)>
  [1] #223.1.1.num.int <40 (0x28)>
  [2] #222.1.1.num.int <40 (0x28)>
  [3] #214.1.1.num.int <10 (0xa)>
IP: #220:0x0, type 1, 40 (0x28)
== backtrace ==
  [0] #221.1.1.ctx.repeat <code #220.1.1.mem.code.ro, ip 0x2 (0x0), index 1>
  [1] #209.1.1.ctx.func <code #207.1.2.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #225.1.1.num.int <40 (0x28)>
  [1] #224.1.1.num.int <40 (0x28)>
  [2] #223.1.1.num.int <40 (0x28)>
  [3] #222.1.1.num.int <40 (0x28)>
  [4] #214.1.1.num.int <10 (0xa)>
IP: #220:0x2, type 3, 1 (0x1)
GC: ++#209.1.1.ctx.func
GC: --#221.1.1.ctx.repeat
GC: --#209.1.2.ctx.func
GC: --#220.1.1.mem.code.ro
GC: --#207.1.2.mem.ro
== backtrace ==
  [0] #209.1.1.ctx.func <code #207.1.1.mem.ro, ip 0x39 (0x32), dict #8.1.2.hash>
== stack (#208.1.1.array) ==
  [0] #225.1.1.num.int <40 (0x28)>
  [1] #224.1.1.num.int <40 (0x28)>
  [2] #223.1.1.num.int <40 (0x28)>
  [3] #222.1.1.num.int <40 (0x28)>
  [4] #214.1.1.num.int <10 (0xa)>
