# ---  trace  ---
IP: #188:0x0, type 5, 1[7]
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
IP: #188:0x8, type 1, 10 (0xa)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0xa (0x8), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #191.1.1.num.int <10 (0xa)>
IP: #188:0xa, type 1, 2 (0x2)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0xb (0xa), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #192.1.1.num.int <2 (0x2)>
  [1] #191.1.1.num.int <10 (0xa)>
IP: #188:0xb, type 1, 20 (0x14)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0xd (0xb), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #193.1.1.num.int <20 (0x14)>
  [1] #192.1.1.num.int <2 (0x2)>
  [2] #191.1.1.num.int <10 (0xa)>
IP: #188:0xd, type 6, 14[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0xf (0xd), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #194.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0xe, size 1>
  [1] #193.1.1.num.int <20 (0x14)>
  [2] #192.1.1.num.int <2 (0x2)>
  [3] #191.1.1.num.int <10 (0xa)>
IP: #188:0xf, type 8, 16[3]
GC: ++#194.1.1.mem.code.ro
GC: --#194.1.2.mem.code.ro
GC: --#193.1.1.num.int
GC: --#192.1.1.num.int
== backtrace ==
  [0] #195.1.1.ctx.for <code #194.1.1.mem.code.ro, ip 0x0 (0x0), index 10, inc 2, max 20>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x13 (0xf), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #191.1.1.num.int <10 (0xa)>
IP: #194:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #195.1.1.ctx.for <code #194.1.1.mem.code.ro, ip 0x0 (0x0), index 12, inc 2, max 20>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x13 (0xf), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #197.1.1.num.int <12 (0xc)>
  [1] #191.1.1.num.int <10 (0xa)>
IP: #194:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #195.1.1.ctx.for <code #194.1.1.mem.code.ro, ip 0x0 (0x0), index 14, inc 2, max 20>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x13 (0xf), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.1.num.int <14 (0xe)>
  [1] #197.1.1.num.int <12 (0xc)>
  [2] #191.1.1.num.int <10 (0xa)>
IP: #194:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #195.1.1.ctx.for <code #194.1.1.mem.code.ro, ip 0x0 (0x0), index 16, inc 2, max 20>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x13 (0xf), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #199.1.1.num.int <16 (0x10)>
  [1] #198.1.1.num.int <14 (0xe)>
  [2] #197.1.1.num.int <12 (0xc)>
  [3] #191.1.1.num.int <10 (0xa)>
IP: #194:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #195.1.1.ctx.for <code #194.1.1.mem.code.ro, ip 0x0 (0x0), index 18, inc 2, max 20>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x13 (0xf), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #200.1.1.num.int <18 (0x12)>
  [1] #199.1.1.num.int <16 (0x10)>
  [2] #198.1.1.num.int <14 (0xe)>
  [3] #197.1.1.num.int <12 (0xc)>
  [4] #191.1.1.num.int <10 (0xa)>
IP: #194:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #195.1.1.ctx.for <code #194.1.1.mem.code.ro, ip 0x0 (0x0), index 20, inc 2, max 20>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x13 (0xf), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #201.1.1.num.int <20 (0x14)>
  [1] #200.1.1.num.int <18 (0x12)>
  [2] #199.1.1.num.int <16 (0x10)>
  [3] #198.1.1.num.int <14 (0xe)>
  [4] #197.1.1.num.int <12 (0xc)>
  [5] #191.1.1.num.int <10 (0xa)>
IP: #194:0x0, type 3, 1 (0x1)
GC: ++#190.1.1.ctx.func
GC: --#195.1.1.ctx.for
GC: --#190.1.2.ctx.func
GC: --#194.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x13 (0xf), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #201.1.1.num.int <20 (0x14)>
  [1] #200.1.1.num.int <18 (0x12)>
  [2] #199.1.1.num.int <16 (0x10)>
  [3] #198.1.1.num.int <14 (0xe)>
  [4] #197.1.1.num.int <12 (0xc)>
  [5] #191.1.1.num.int <10 (0xa)>
IP: #188:0x13, type 1, 100 (0x64)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x15 (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #202.1.1.num.int <100 (0x64)>
  [1] #201.1.1.num.int <20 (0x14)>
  [2] #200.1.1.num.int <18 (0x12)>
  [3] #199.1.1.num.int <16 (0x10)>
  [4] #198.1.1.num.int <14 (0xe)>
  [5] #197.1.1.num.int <12 (0xc)>
  [6] #191.1.1.num.int <10 (0xa)>
IP: #188:0x15, type 1, 2 (0x2)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x16 (0x15), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #203.1.1.num.int <2 (0x2)>
  [1] #202.1.1.num.int <100 (0x64)>
  [2] #201.1.1.num.int <20 (0x14)>
  [3] #200.1.1.num.int <18 (0x12)>
  [4] #199.1.1.num.int <16 (0x10)>
  [5] #198.1.1.num.int <14 (0xe)>
  [6] #197.1.1.num.int <12 (0xc)>
  [7] #191.1.1.num.int <10 (0xa)>
IP: #188:0x16, type 1, 107 (0x6b)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x18 (0x16), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #204.1.1.num.int <107 (0x6b)>
  [1] #203.1.1.num.int <2 (0x2)>
  [2] #202.1.1.num.int <100 (0x64)>
  [3] #201.1.1.num.int <20 (0x14)>
  [4] #200.1.1.num.int <18 (0x12)>
  [5] #199.1.1.num.int <16 (0x10)>
  [6] #198.1.1.num.int <14 (0xe)>
  [7] #197.1.1.num.int <12 (0xc)>
  [8] #191.1.1.num.int <10 (0xa)>
IP: #188:0x18, type 6, 25[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x1a (0x18), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #205.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x19, size 1>
  [1] #204.1.1.num.int <107 (0x6b)>
  [2] #203.1.1.num.int <2 (0x2)>
  [3] #202.1.1.num.int <100 (0x64)>
  [4] #201.1.1.num.int <20 (0x14)>
  [5] #200.1.1.num.int <18 (0x12)>
  [6] #199.1.1.num.int <16 (0x10)>
  [7] #198.1.1.num.int <14 (0xe)>
  [8] #197.1.1.num.int <12 (0xc)>
  [9] #191.1.1.num.int <10 (0xa)>
IP: #188:0x1a, type 8, 27[3]
GC: ++#205.1.1.mem.code.ro
GC: --#205.1.2.mem.code.ro
GC: --#204.1.1.num.int
GC: --#203.1.1.num.int
== backtrace ==
  [0] #206.1.1.ctx.for <code #205.1.1.mem.code.ro, ip 0x0 (0x0), index 100, inc 2, max 107>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x1e (0x1a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #202.1.1.num.int <100 (0x64)>
  [1] #201.1.1.num.int <20 (0x14)>
  [2] #200.1.1.num.int <18 (0x12)>
  [3] #199.1.1.num.int <16 (0x10)>
  [4] #198.1.1.num.int <14 (0xe)>
  [5] #197.1.1.num.int <12 (0xc)>
  [6] #191.1.1.num.int <10 (0xa)>
IP: #205:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #206.1.1.ctx.for <code #205.1.1.mem.code.ro, ip 0x0 (0x0), index 102, inc 2, max 107>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x1e (0x1a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #207.1.1.num.int <102 (0x66)>
  [1] #202.1.1.num.int <100 (0x64)>
  [2] #201.1.1.num.int <20 (0x14)>
  [3] #200.1.1.num.int <18 (0x12)>
  [4] #199.1.1.num.int <16 (0x10)>
  [5] #198.1.1.num.int <14 (0xe)>
  [6] #197.1.1.num.int <12 (0xc)>
  [7] #191.1.1.num.int <10 (0xa)>
IP: #205:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #206.1.1.ctx.for <code #205.1.1.mem.code.ro, ip 0x0 (0x0), index 104, inc 2, max 107>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x1e (0x1a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #208.1.1.num.int <104 (0x68)>
  [1] #207.1.1.num.int <102 (0x66)>
  [2] #202.1.1.num.int <100 (0x64)>
  [3] #201.1.1.num.int <20 (0x14)>
  [4] #200.1.1.num.int <18 (0x12)>
  [5] #199.1.1.num.int <16 (0x10)>
  [6] #198.1.1.num.int <14 (0xe)>
  [7] #197.1.1.num.int <12 (0xc)>
  [8] #191.1.1.num.int <10 (0xa)>
IP: #205:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #206.1.1.ctx.for <code #205.1.1.mem.code.ro, ip 0x0 (0x0), index 106, inc 2, max 107>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x1e (0x1a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #209.1.1.num.int <106 (0x6a)>
  [1] #208.1.1.num.int <104 (0x68)>
  [2] #207.1.1.num.int <102 (0x66)>
  [3] #202.1.1.num.int <100 (0x64)>
  [4] #201.1.1.num.int <20 (0x14)>
  [5] #200.1.1.num.int <18 (0x12)>
  [6] #199.1.1.num.int <16 (0x10)>
  [7] #198.1.1.num.int <14 (0xe)>
  [8] #197.1.1.num.int <12 (0xc)>
  [9] #191.1.1.num.int <10 (0xa)>
IP: #205:0x0, type 3, 1 (0x1)
GC: ++#190.1.1.ctx.func
GC: --#206.1.1.ctx.for
GC: --#190.1.2.ctx.func
GC: --#205.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x1e (0x1a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #209.1.1.num.int <106 (0x6a)>
  [1] #208.1.1.num.int <104 (0x68)>
  [2] #207.1.1.num.int <102 (0x66)>
  [3] #202.1.1.num.int <100 (0x64)>
  [4] #201.1.1.num.int <20 (0x14)>
  [5] #200.1.1.num.int <18 (0x12)>
  [6] #199.1.1.num.int <16 (0x10)>
  [7] #198.1.1.num.int <14 (0xe)>
  [8] #197.1.1.num.int <12 (0xc)>
  [9] #191.1.1.num.int <10 (0xa)>
IP: #188:0x1e, type 1, 1100 (0x44c)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x21 (0x1e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #210.1.1.num.int <1100 (0x44c)>
  [1] #209.1.1.num.int <106 (0x6a)>
  [2] #208.1.1.num.int <104 (0x68)>
  [3] #207.1.1.num.int <102 (0x66)>
  [4] #202.1.1.num.int <100 (0x64)>
  [5] #201.1.1.num.int <20 (0x14)>
  [6] #200.1.1.num.int <18 (0x12)>
  [7] #199.1.1.num.int <16 (0x10)>
  [8] #198.1.1.num.int <14 (0xe)>
  [9] #197.1.1.num.int <12 (0xc)>
  [10] #191.1.1.num.int <10 (0xa)>
IP: #188:0x21, type 1, -2 (0xfffffffffffffffe)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x23 (0x21), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #211.1.1.num.int <-2 (0xfffffffffffffffe)>
  [1] #210.1.1.num.int <1100 (0x44c)>
  [2] #209.1.1.num.int <106 (0x6a)>
  [3] #208.1.1.num.int <104 (0x68)>
  [4] #207.1.1.num.int <102 (0x66)>
  [5] #202.1.1.num.int <100 (0x64)>
  [6] #201.1.1.num.int <20 (0x14)>
  [7] #200.1.1.num.int <18 (0x12)>
  [8] #199.1.1.num.int <16 (0x10)>
  [9] #198.1.1.num.int <14 (0xe)>
  [10] #197.1.1.num.int <12 (0xc)>
  [11] #191.1.1.num.int <10 (0xa)>
IP: #188:0x23, type 1, 1090 (0x442)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x26 (0x23), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #212.1.1.num.int <1090 (0x442)>
  [1] #211.1.1.num.int <-2 (0xfffffffffffffffe)>
  [2] #210.1.1.num.int <1100 (0x44c)>
  [3] #209.1.1.num.int <106 (0x6a)>
  [4] #208.1.1.num.int <104 (0x68)>
  [5] #207.1.1.num.int <102 (0x66)>
  [6] #202.1.1.num.int <100 (0x64)>
  [7] #201.1.1.num.int <20 (0x14)>
  [8] #200.1.1.num.int <18 (0x12)>
  [9] #199.1.1.num.int <16 (0x10)>
  [10] #198.1.1.num.int <14 (0xe)>
  [11] #197.1.1.num.int <12 (0xc)>
  [12] #191.1.1.num.int <10 (0xa)>
IP: #188:0x26, type 6, 39[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x28 (0x26), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #213.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x27, size 1>
  [1] #212.1.1.num.int <1090 (0x442)>
  [2] #211.1.1.num.int <-2 (0xfffffffffffffffe)>
  [3] #210.1.1.num.int <1100 (0x44c)>
  [4] #209.1.1.num.int <106 (0x6a)>
  [5] #208.1.1.num.int <104 (0x68)>
  [6] #207.1.1.num.int <102 (0x66)>
  [7] #202.1.1.num.int <100 (0x64)>
  [8] #201.1.1.num.int <20 (0x14)>
  [9] #200.1.1.num.int <18 (0x12)>
  [10] #199.1.1.num.int <16 (0x10)>
  [11] #198.1.1.num.int <14 (0xe)>
  [12] #197.1.1.num.int <12 (0xc)>
  [13] #191.1.1.num.int <10 (0xa)>
IP: #188:0x28, type 8, 41[3]
GC: ++#213.1.1.mem.code.ro
GC: --#213.1.2.mem.code.ro
GC: --#212.1.1.num.int
GC: --#211.1.1.num.int
== backtrace ==
  [0] #214.1.1.ctx.for <code #213.1.1.mem.code.ro, ip 0x0 (0x0), index 1100, inc -2, max 1090>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x2c (0x28), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #210.1.1.num.int <1100 (0x44c)>
  [1] #209.1.1.num.int <106 (0x6a)>
  [2] #208.1.1.num.int <104 (0x68)>
  [3] #207.1.1.num.int <102 (0x66)>
  [4] #202.1.1.num.int <100 (0x64)>
  [5] #201.1.1.num.int <20 (0x14)>
  [6] #200.1.1.num.int <18 (0x12)>
  [7] #199.1.1.num.int <16 (0x10)>
  [8] #198.1.1.num.int <14 (0xe)>
  [9] #197.1.1.num.int <12 (0xc)>
  [10] #191.1.1.num.int <10 (0xa)>
IP: #213:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #214.1.1.ctx.for <code #213.1.1.mem.code.ro, ip 0x0 (0x0), index 1098, inc -2, max 1090>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x2c (0x28), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #215.1.1.num.int <1098 (0x44a)>
  [1] #210.1.1.num.int <1100 (0x44c)>
  [2] #209.1.1.num.int <106 (0x6a)>
  [3] #208.1.1.num.int <104 (0x68)>
  [4] #207.1.1.num.int <102 (0x66)>
  [5] #202.1.1.num.int <100 (0x64)>
  [6] #201.1.1.num.int <20 (0x14)>
  [7] #200.1.1.num.int <18 (0x12)>
  [8] #199.1.1.num.int <16 (0x10)>
  [9] #198.1.1.num.int <14 (0xe)>
  [10] #197.1.1.num.int <12 (0xc)>
  [11] #191.1.1.num.int <10 (0xa)>
IP: #213:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #214.1.1.ctx.for <code #213.1.1.mem.code.ro, ip 0x0 (0x0), index 1096, inc -2, max 1090>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x2c (0x28), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #216.1.1.num.int <1096 (0x448)>
  [1] #215.1.1.num.int <1098 (0x44a)>
  [2] #210.1.1.num.int <1100 (0x44c)>
  [3] #209.1.1.num.int <106 (0x6a)>
  [4] #208.1.1.num.int <104 (0x68)>
  [5] #207.1.1.num.int <102 (0x66)>
  [6] #202.1.1.num.int <100 (0x64)>
  [7] #201.1.1.num.int <20 (0x14)>
  [8] #200.1.1.num.int <18 (0x12)>
  [9] #199.1.1.num.int <16 (0x10)>
  [10] #198.1.1.num.int <14 (0xe)>
  [11] #197.1.1.num.int <12 (0xc)>
  [12] #191.1.1.num.int <10 (0xa)>
IP: #213:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #214.1.1.ctx.for <code #213.1.1.mem.code.ro, ip 0x0 (0x0), index 1094, inc -2, max 1090>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x2c (0x28), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #217.1.1.num.int <1094 (0x446)>
  [1] #216.1.1.num.int <1096 (0x448)>
  [2] #215.1.1.num.int <1098 (0x44a)>
  [3] #210.1.1.num.int <1100 (0x44c)>
  [4] #209.1.1.num.int <106 (0x6a)>
  [5] #208.1.1.num.int <104 (0x68)>
  [6] #207.1.1.num.int <102 (0x66)>
  [7] #202.1.1.num.int <100 (0x64)>
  [8] #201.1.1.num.int <20 (0x14)>
  [9] #200.1.1.num.int <18 (0x12)>
  [10] #199.1.1.num.int <16 (0x10)>
  [11] #198.1.1.num.int <14 (0xe)>
  [12] #197.1.1.num.int <12 (0xc)>
  [13] #191.1.1.num.int <10 (0xa)>
IP: #213:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #214.1.1.ctx.for <code #213.1.1.mem.code.ro, ip 0x0 (0x0), index 1092, inc -2, max 1090>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x2c (0x28), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #218.1.1.num.int <1092 (0x444)>
  [1] #217.1.1.num.int <1094 (0x446)>
  [2] #216.1.1.num.int <1096 (0x448)>
  [3] #215.1.1.num.int <1098 (0x44a)>
  [4] #210.1.1.num.int <1100 (0x44c)>
  [5] #209.1.1.num.int <106 (0x6a)>
  [6] #208.1.1.num.int <104 (0x68)>
  [7] #207.1.1.num.int <102 (0x66)>
  [8] #202.1.1.num.int <100 (0x64)>
  [9] #201.1.1.num.int <20 (0x14)>
  [10] #200.1.1.num.int <18 (0x12)>
  [11] #199.1.1.num.int <16 (0x10)>
  [12] #198.1.1.num.int <14 (0xe)>
  [13] #197.1.1.num.int <12 (0xc)>
  [14] #191.1.1.num.int <10 (0xa)>
IP: #213:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #214.1.1.ctx.for <code #213.1.1.mem.code.ro, ip 0x0 (0x0), index 1090, inc -2, max 1090>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x2c (0x28), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #219.1.1.num.int <1090 (0x442)>
  [1] #218.1.1.num.int <1092 (0x444)>
  [2] #217.1.1.num.int <1094 (0x446)>
  [3] #216.1.1.num.int <1096 (0x448)>
  [4] #215.1.1.num.int <1098 (0x44a)>
  [5] #210.1.1.num.int <1100 (0x44c)>
  [6] #209.1.1.num.int <106 (0x6a)>
  [7] #208.1.1.num.int <104 (0x68)>
  [8] #207.1.1.num.int <102 (0x66)>
  [9] #202.1.1.num.int <100 (0x64)>
  [10] #201.1.1.num.int <20 (0x14)>
  [11] #200.1.1.num.int <18 (0x12)>
  [12] #199.1.1.num.int <16 (0x10)>
  [13] #198.1.1.num.int <14 (0xe)>
  [14] #197.1.1.num.int <12 (0xc)>
  [15] #191.1.1.num.int <10 (0xa)>
IP: #213:0x0, type 3, 1 (0x1)
GC: ++#190.1.1.ctx.func
GC: --#214.1.1.ctx.for
GC: --#190.1.2.ctx.func
GC: --#213.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x2c (0x28), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #219.1.1.num.int <1090 (0x442)>
  [1] #218.1.1.num.int <1092 (0x444)>
  [2] #217.1.1.num.int <1094 (0x446)>
  [3] #216.1.1.num.int <1096 (0x448)>
  [4] #215.1.1.num.int <1098 (0x44a)>
  [5] #210.1.1.num.int <1100 (0x44c)>
  [6] #209.1.1.num.int <106 (0x6a)>
  [7] #208.1.1.num.int <104 (0x68)>
  [8] #207.1.1.num.int <102 (0x66)>
  [9] #202.1.1.num.int <100 (0x64)>
  [10] #201.1.1.num.int <20 (0x14)>
  [11] #200.1.1.num.int <18 (0x12)>
  [12] #199.1.1.num.int <16 (0x10)>
  [13] #198.1.1.num.int <14 (0xe)>
  [14] #197.1.1.num.int <12 (0xc)>
  [15] #191.1.1.num.int <10 (0xa)>
IP: #188:0x2c, type 1, 11000 (0x2af8)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x2f (0x2c), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #220.1.1.num.int <11000 (0x2af8)>
  [1] #219.1.1.num.int <1090 (0x442)>
  [2] #218.1.1.num.int <1092 (0x444)>
  [3] #217.1.1.num.int <1094 (0x446)>
  [4] #216.1.1.num.int <1096 (0x448)>
  [5] #215.1.1.num.int <1098 (0x44a)>
  [6] #210.1.1.num.int <1100 (0x44c)>
  [7] #209.1.1.num.int <106 (0x6a)>
  [8] #208.1.1.num.int <104 (0x68)>
  [9] #207.1.1.num.int <102 (0x66)>
  [10] #202.1.1.num.int <100 (0x64)>
  [11] #201.1.1.num.int <20 (0x14)>
  [12] #200.1.1.num.int <18 (0x12)>
  [13] #199.1.1.num.int <16 (0x10)>
  [14] #198.1.1.num.int <14 (0xe)>
  [15] #197.1.1.num.int <12 (0xc)>
  [16] #191.1.1.num.int <10 (0xa)>
IP: #188:0x2f, type 1, -2 (0xfffffffffffffffe)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x31 (0x2f), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #221.1.1.num.int <-2 (0xfffffffffffffffe)>
  [1] #220.1.1.num.int <11000 (0x2af8)>
  [2] #219.1.1.num.int <1090 (0x442)>
  [3] #218.1.1.num.int <1092 (0x444)>
  [4] #217.1.1.num.int <1094 (0x446)>
  [5] #216.1.1.num.int <1096 (0x448)>
  [6] #215.1.1.num.int <1098 (0x44a)>
  [7] #210.1.1.num.int <1100 (0x44c)>
  [8] #209.1.1.num.int <106 (0x6a)>
  [9] #208.1.1.num.int <104 (0x68)>
  [10] #207.1.1.num.int <102 (0x66)>
  [11] #202.1.1.num.int <100 (0x64)>
  [12] #201.1.1.num.int <20 (0x14)>
  [13] #200.1.1.num.int <18 (0x12)>
  [14] #199.1.1.num.int <16 (0x10)>
  [15] #198.1.1.num.int <14 (0xe)>
  [16] #197.1.1.num.int <12 (0xc)>
  [17] #191.1.1.num.int <10 (0xa)>
IP: #188:0x31, type 1, 10993 (0x2af1)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x34 (0x31), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #222.1.1.num.int <10993 (0x2af1)>
  [1] #221.1.1.num.int <-2 (0xfffffffffffffffe)>
  [2] #220.1.1.num.int <11000 (0x2af8)>
  [3] #219.1.1.num.int <1090 (0x442)>
  [4] #218.1.1.num.int <1092 (0x444)>
  [5] #217.1.1.num.int <1094 (0x446)>
  [6] #216.1.1.num.int <1096 (0x448)>
  [7] #215.1.1.num.int <1098 (0x44a)>
  [8] #210.1.1.num.int <1100 (0x44c)>
  [9] #209.1.1.num.int <106 (0x6a)>
  [10] #208.1.1.num.int <104 (0x68)>
  [11] #207.1.1.num.int <102 (0x66)>
  [12] #202.1.1.num.int <100 (0x64)>
  [13] #201.1.1.num.int <20 (0x14)>
  [14] #200.1.1.num.int <18 (0x12)>
  [15] #199.1.1.num.int <16 (0x10)>
  [16] #198.1.1.num.int <14 (0xe)>
  [17] #197.1.1.num.int <12 (0xc)>
  [18] #191.1.1.num.int <10 (0xa)>
IP: #188:0x34, type 6, 53[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x36 (0x34), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #223.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x35, size 1>
  [1] #222.1.1.num.int <10993 (0x2af1)>
  [2] #221.1.1.num.int <-2 (0xfffffffffffffffe)>
  [3] #220.1.1.num.int <11000 (0x2af8)>
  [4] #219.1.1.num.int <1090 (0x442)>
  [5] #218.1.1.num.int <1092 (0x444)>
  [6] #217.1.1.num.int <1094 (0x446)>
  [7] #216.1.1.num.int <1096 (0x448)>
  [8] #215.1.1.num.int <1098 (0x44a)>
  [9] #210.1.1.num.int <1100 (0x44c)>
  [10] #209.1.1.num.int <106 (0x6a)>
  [11] #208.1.1.num.int <104 (0x68)>
  [12] #207.1.1.num.int <102 (0x66)>
  [13] #202.1.1.num.int <100 (0x64)>
  [14] #201.1.1.num.int <20 (0x14)>
  [15] #200.1.1.num.int <18 (0x12)>
  [16] #199.1.1.num.int <16 (0x10)>
  [17] #198.1.1.num.int <14 (0xe)>
  [18] #197.1.1.num.int <12 (0xc)>
  [19] #191.1.1.num.int <10 (0xa)>
IP: #188:0x36, type 8, 55[3]
GC: ++#223.1.1.mem.code.ro
GC: --#223.1.2.mem.code.ro
GC: --#222.1.1.num.int
GC: --#221.1.1.num.int
== backtrace ==
  [0] #224.1.1.ctx.for <code #223.1.1.mem.code.ro, ip 0x0 (0x0), index 11000, inc -2, max 10993>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x3a (0x36), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #220.1.1.num.int <11000 (0x2af8)>
  [1] #219.1.1.num.int <1090 (0x442)>
  [2] #218.1.1.num.int <1092 (0x444)>
  [3] #217.1.1.num.int <1094 (0x446)>
  [4] #216.1.1.num.int <1096 (0x448)>
  [5] #215.1.1.num.int <1098 (0x44a)>
  [6] #210.1.1.num.int <1100 (0x44c)>
  [7] #209.1.1.num.int <106 (0x6a)>
  [8] #208.1.1.num.int <104 (0x68)>
  [9] #207.1.1.num.int <102 (0x66)>
  [10] #202.1.1.num.int <100 (0x64)>
  [11] #201.1.1.num.int <20 (0x14)>
  [12] #200.1.1.num.int <18 (0x12)>
  [13] #199.1.1.num.int <16 (0x10)>
  [14] #198.1.1.num.int <14 (0xe)>
  [15] #197.1.1.num.int <12 (0xc)>
  [16] #191.1.1.num.int <10 (0xa)>
IP: #223:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #224.1.1.ctx.for <code #223.1.1.mem.code.ro, ip 0x0 (0x0), index 10998, inc -2, max 10993>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x3a (0x36), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #225.1.1.num.int <10998 (0x2af6)>
  [1] #220.1.1.num.int <11000 (0x2af8)>
  [2] #219.1.1.num.int <1090 (0x442)>
  [3] #218.1.1.num.int <1092 (0x444)>
  [4] #217.1.1.num.int <1094 (0x446)>
  [5] #216.1.1.num.int <1096 (0x448)>
  [6] #215.1.1.num.int <1098 (0x44a)>
  [7] #210.1.1.num.int <1100 (0x44c)>
  [8] #209.1.1.num.int <106 (0x6a)>
  [9] #208.1.1.num.int <104 (0x68)>
  [10] #207.1.1.num.int <102 (0x66)>
  [11] #202.1.1.num.int <100 (0x64)>
  [12] #201.1.1.num.int <20 (0x14)>
  [13] #200.1.1.num.int <18 (0x12)>
  [14] #199.1.1.num.int <16 (0x10)>
  [15] #198.1.1.num.int <14 (0xe)>
  [16] #197.1.1.num.int <12 (0xc)>
  [17] #191.1.1.num.int <10 (0xa)>
IP: #223:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #224.1.1.ctx.for <code #223.1.1.mem.code.ro, ip 0x0 (0x0), index 10996, inc -2, max 10993>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x3a (0x36), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #226.1.1.num.int <10996 (0x2af4)>
  [1] #225.1.1.num.int <10998 (0x2af6)>
  [2] #220.1.1.num.int <11000 (0x2af8)>
  [3] #219.1.1.num.int <1090 (0x442)>
  [4] #218.1.1.num.int <1092 (0x444)>
  [5] #217.1.1.num.int <1094 (0x446)>
  [6] #216.1.1.num.int <1096 (0x448)>
  [7] #215.1.1.num.int <1098 (0x44a)>
  [8] #210.1.1.num.int <1100 (0x44c)>
  [9] #209.1.1.num.int <106 (0x6a)>
  [10] #208.1.1.num.int <104 (0x68)>
  [11] #207.1.1.num.int <102 (0x66)>
  [12] #202.1.1.num.int <100 (0x64)>
  [13] #201.1.1.num.int <20 (0x14)>
  [14] #200.1.1.num.int <18 (0x12)>
  [15] #199.1.1.num.int <16 (0x10)>
  [16] #198.1.1.num.int <14 (0xe)>
  [17] #197.1.1.num.int <12 (0xc)>
  [18] #191.1.1.num.int <10 (0xa)>
IP: #223:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #224.1.1.ctx.for <code #223.1.1.mem.code.ro, ip 0x0 (0x0), index 10994, inc -2, max 10993>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x3a (0x36), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #227.1.1.num.int <10994 (0x2af2)>
  [1] #226.1.1.num.int <10996 (0x2af4)>
  [2] #225.1.1.num.int <10998 (0x2af6)>
  [3] #220.1.1.num.int <11000 (0x2af8)>
  [4] #219.1.1.num.int <1090 (0x442)>
  [5] #218.1.1.num.int <1092 (0x444)>
  [6] #217.1.1.num.int <1094 (0x446)>
  [7] #216.1.1.num.int <1096 (0x448)>
  [8] #215.1.1.num.int <1098 (0x44a)>
  [9] #210.1.1.num.int <1100 (0x44c)>
  [10] #209.1.1.num.int <106 (0x6a)>
  [11] #208.1.1.num.int <104 (0x68)>
  [12] #207.1.1.num.int <102 (0x66)>
  [13] #202.1.1.num.int <100 (0x64)>
  [14] #201.1.1.num.int <20 (0x14)>
  [15] #200.1.1.num.int <18 (0x12)>
  [16] #199.1.1.num.int <16 (0x10)>
  [17] #198.1.1.num.int <14 (0xe)>
  [18] #197.1.1.num.int <12 (0xc)>
  [19] #191.1.1.num.int <10 (0xa)>
IP: #223:0x0, type 3, 1 (0x1)
GC: ++#190.1.1.ctx.func
GC: --#224.1.1.ctx.for
GC: --#190.1.2.ctx.func
GC: --#223.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x3a (0x36), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #227.1.1.num.int <10994 (0x2af2)>
  [1] #226.1.1.num.int <10996 (0x2af4)>
  [2] #225.1.1.num.int <10998 (0x2af6)>
  [3] #220.1.1.num.int <11000 (0x2af8)>
  [4] #219.1.1.num.int <1090 (0x442)>
  [5] #218.1.1.num.int <1092 (0x444)>
  [6] #217.1.1.num.int <1094 (0x446)>
  [7] #216.1.1.num.int <1096 (0x448)>
  [8] #215.1.1.num.int <1098 (0x44a)>
  [9] #210.1.1.num.int <1100 (0x44c)>
  [10] #209.1.1.num.int <106 (0x6a)>
  [11] #208.1.1.num.int <104 (0x68)>
  [12] #207.1.1.num.int <102 (0x66)>
  [13] #202.1.1.num.int <100 (0x64)>
  [14] #201.1.1.num.int <20 (0x14)>
  [15] #200.1.1.num.int <18 (0x12)>
  [16] #199.1.1.num.int <16 (0x10)>
  [17] #198.1.1.num.int <14 (0xe)>
  [18] #197.1.1.num.int <12 (0xc)>
  [19] #191.1.1.num.int <10 (0xa)>
IP: #188:0x3a, type 1, 200 (0xc8)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x3d (0x3a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #228.1.1.num.int <200 (0xc8)>
  [1] #227.1.1.num.int <10994 (0x2af2)>
  [2] #226.1.1.num.int <10996 (0x2af4)>
  [3] #225.1.1.num.int <10998 (0x2af6)>
  [4] #220.1.1.num.int <11000 (0x2af8)>
  [5] #219.1.1.num.int <1090 (0x442)>
  [6] #218.1.1.num.int <1092 (0x444)>
  [7] #217.1.1.num.int <1094 (0x446)>
  [8] #216.1.1.num.int <1096 (0x448)>
  [9] #215.1.1.num.int <1098 (0x44a)>
  [10] #210.1.1.num.int <1100 (0x44c)>
  [11] #209.1.1.num.int <106 (0x6a)>
  [12] #208.1.1.num.int <104 (0x68)>
  [13] #207.1.1.num.int <102 (0x66)>
  [14] #202.1.1.num.int <100 (0x64)>
  [15] #201.1.1.num.int <20 (0x14)>
  [16] #200.1.1.num.int <18 (0x12)>
  [17] #199.1.1.num.int <16 (0x10)>
  [18] #198.1.1.num.int <14 (0xe)>
  [19] #197.1.1.num.int <12 (0xc)>
  [20] #191.1.1.num.int <10 (0xa)>
IP: #188:0x3d, type 1, 1 (0x1)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x3e (0x3d), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #229.1.1.num.int <1 (0x1)>
  [1] #228.1.1.num.int <200 (0xc8)>
  [2] #227.1.1.num.int <10994 (0x2af2)>
  [3] #226.1.1.num.int <10996 (0x2af4)>
  [4] #225.1.1.num.int <10998 (0x2af6)>
  [5] #220.1.1.num.int <11000 (0x2af8)>
  [6] #219.1.1.num.int <1090 (0x442)>
  [7] #218.1.1.num.int <1092 (0x444)>
  [8] #217.1.1.num.int <1094 (0x446)>
  [9] #216.1.1.num.int <1096 (0x448)>
  [10] #215.1.1.num.int <1098 (0x44a)>
  [11] #210.1.1.num.int <1100 (0x44c)>
  [12] #209.1.1.num.int <106 (0x6a)>
  [13] #208.1.1.num.int <104 (0x68)>
  [14] #207.1.1.num.int <102 (0x66)>
  [15] #202.1.1.num.int <100 (0x64)>
  [16] #201.1.1.num.int <20 (0x14)>
  [17] #200.1.1.num.int <18 (0x12)>
  [18] #199.1.1.num.int <16 (0x10)>
  [19] #198.1.1.num.int <14 (0xe)>
  [20] #197.1.1.num.int <12 (0xc)>
  [21] #191.1.1.num.int <10 (0xa)>
IP: #188:0x3e, type 1, 190 (0xbe)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x41 (0x3e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #230.1.1.num.int <190 (0xbe)>
  [1] #229.1.1.num.int <1 (0x1)>
  [2] #228.1.1.num.int <200 (0xc8)>
  [3] #227.1.1.num.int <10994 (0x2af2)>
  [4] #226.1.1.num.int <10996 (0x2af4)>
  [5] #225.1.1.num.int <10998 (0x2af6)>
  [6] #220.1.1.num.int <11000 (0x2af8)>
  [7] #219.1.1.num.int <1090 (0x442)>
  [8] #218.1.1.num.int <1092 (0x444)>
  [9] #217.1.1.num.int <1094 (0x446)>
  [10] #216.1.1.num.int <1096 (0x448)>
  [11] #215.1.1.num.int <1098 (0x44a)>
  [12] #210.1.1.num.int <1100 (0x44c)>
  [13] #209.1.1.num.int <106 (0x6a)>
  [14] #208.1.1.num.int <104 (0x68)>
  [15] #207.1.1.num.int <102 (0x66)>
  [16] #202.1.1.num.int <100 (0x64)>
  [17] #201.1.1.num.int <20 (0x14)>
  [18] #200.1.1.num.int <18 (0x12)>
  [19] #199.1.1.num.int <16 (0x10)>
  [20] #198.1.1.num.int <14 (0xe)>
  [21] #197.1.1.num.int <12 (0xc)>
  [22] #191.1.1.num.int <10 (0xa)>
IP: #188:0x41, type 6, 66[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x43 (0x41), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #231.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x42, size 1>
  [1] #230.1.1.num.int <190 (0xbe)>
  [2] #229.1.1.num.int <1 (0x1)>
  [3] #228.1.1.num.int <200 (0xc8)>
  [4] #227.1.1.num.int <10994 (0x2af2)>
  [5] #226.1.1.num.int <10996 (0x2af4)>
  [6] #225.1.1.num.int <10998 (0x2af6)>
  [7] #220.1.1.num.int <11000 (0x2af8)>
  [8] #219.1.1.num.int <1090 (0x442)>
  [9] #218.1.1.num.int <1092 (0x444)>
  [10] #217.1.1.num.int <1094 (0x446)>
  [11] #216.1.1.num.int <1096 (0x448)>
  [12] #215.1.1.num.int <1098 (0x44a)>
  [13] #210.1.1.num.int <1100 (0x44c)>
  [14] #209.1.1.num.int <106 (0x6a)>
  [15] #208.1.1.num.int <104 (0x68)>
  [16] #207.1.1.num.int <102 (0x66)>
  [17] #202.1.1.num.int <100 (0x64)>
  [18] #201.1.1.num.int <20 (0x14)>
  [19] #200.1.1.num.int <18 (0x12)>
  [20] #199.1.1.num.int <16 (0x10)>
  [21] #198.1.1.num.int <14 (0xe)>
  [22] #197.1.1.num.int <12 (0xc)>
  [23] #191.1.1.num.int <10 (0xa)>
IP: #188:0x43, type 8, 68[3]
GC: --#231.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
GC: --#230.1.1.num.int
GC: --#229.1.1.num.int
GC: --#228.1.1.num.int
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x47 (0x43), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #227.1.1.num.int <10994 (0x2af2)>
  [1] #226.1.1.num.int <10996 (0x2af4)>
  [2] #225.1.1.num.int <10998 (0x2af6)>
  [3] #220.1.1.num.int <11000 (0x2af8)>
  [4] #219.1.1.num.int <1090 (0x442)>
  [5] #218.1.1.num.int <1092 (0x444)>
  [6] #217.1.1.num.int <1094 (0x446)>
  [7] #216.1.1.num.int <1096 (0x448)>
  [8] #215.1.1.num.int <1098 (0x44a)>
  [9] #210.1.1.num.int <1100 (0x44c)>
  [10] #209.1.1.num.int <106 (0x6a)>
  [11] #208.1.1.num.int <104 (0x68)>
  [12] #207.1.1.num.int <102 (0x66)>
  [13] #202.1.1.num.int <100 (0x64)>
  [14] #201.1.1.num.int <20 (0x14)>
  [15] #200.1.1.num.int <18 (0x12)>
  [16] #199.1.1.num.int <16 (0x10)>
  [17] #198.1.1.num.int <14 (0xe)>
  [18] #197.1.1.num.int <12 (0xc)>
  [19] #191.1.1.num.int <10 (0xa)>
IP: #188:0x47, type 1, 200 (0xc8)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x4a (0x47), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #232.1.1.num.int <200 (0xc8)>
  [1] #227.1.1.num.int <10994 (0x2af2)>
  [2] #226.1.1.num.int <10996 (0x2af4)>
  [3] #225.1.1.num.int <10998 (0x2af6)>
  [4] #220.1.1.num.int <11000 (0x2af8)>
  [5] #219.1.1.num.int <1090 (0x442)>
  [6] #218.1.1.num.int <1092 (0x444)>
  [7] #217.1.1.num.int <1094 (0x446)>
  [8] #216.1.1.num.int <1096 (0x448)>
  [9] #215.1.1.num.int <1098 (0x44a)>
  [10] #210.1.1.num.int <1100 (0x44c)>
  [11] #209.1.1.num.int <106 (0x6a)>
  [12] #208.1.1.num.int <104 (0x68)>
  [13] #207.1.1.num.int <102 (0x66)>
  [14] #202.1.1.num.int <100 (0x64)>
  [15] #201.1.1.num.int <20 (0x14)>
  [16] #200.1.1.num.int <18 (0x12)>
  [17] #199.1.1.num.int <16 (0x10)>
  [18] #198.1.1.num.int <14 (0xe)>
  [19] #197.1.1.num.int <12 (0xc)>
  [20] #191.1.1.num.int <10 (0xa)>
IP: #188:0x4a, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x4c (0x4a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #233.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #232.1.1.num.int <200 (0xc8)>
  [2] #227.1.1.num.int <10994 (0x2af2)>
  [3] #226.1.1.num.int <10996 (0x2af4)>
  [4] #225.1.1.num.int <10998 (0x2af6)>
  [5] #220.1.1.num.int <11000 (0x2af8)>
  [6] #219.1.1.num.int <1090 (0x442)>
  [7] #218.1.1.num.int <1092 (0x444)>
  [8] #217.1.1.num.int <1094 (0x446)>
  [9] #216.1.1.num.int <1096 (0x448)>
  [10] #215.1.1.num.int <1098 (0x44a)>
  [11] #210.1.1.num.int <1100 (0x44c)>
  [12] #209.1.1.num.int <106 (0x6a)>
  [13] #208.1.1.num.int <104 (0x68)>
  [14] #207.1.1.num.int <102 (0x66)>
  [15] #202.1.1.num.int <100 (0x64)>
  [16] #201.1.1.num.int <20 (0x14)>
  [17] #200.1.1.num.int <18 (0x12)>
  [18] #199.1.1.num.int <16 (0x10)>
  [19] #198.1.1.num.int <14 (0xe)>
  [20] #197.1.1.num.int <12 (0xc)>
  [21] #191.1.1.num.int <10 (0xa)>
IP: #188:0x4c, type 1, 210 (0xd2)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x4f (0x4c), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #234.1.1.num.int <210 (0xd2)>
  [1] #233.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #232.1.1.num.int <200 (0xc8)>
  [3] #227.1.1.num.int <10994 (0x2af2)>
  [4] #226.1.1.num.int <10996 (0x2af4)>
  [5] #225.1.1.num.int <10998 (0x2af6)>
  [6] #220.1.1.num.int <11000 (0x2af8)>
  [7] #219.1.1.num.int <1090 (0x442)>
  [8] #218.1.1.num.int <1092 (0x444)>
  [9] #217.1.1.num.int <1094 (0x446)>
  [10] #216.1.1.num.int <1096 (0x448)>
  [11] #215.1.1.num.int <1098 (0x44a)>
  [12] #210.1.1.num.int <1100 (0x44c)>
  [13] #209.1.1.num.int <106 (0x6a)>
  [14] #208.1.1.num.int <104 (0x68)>
  [15] #207.1.1.num.int <102 (0x66)>
  [16] #202.1.1.num.int <100 (0x64)>
  [17] #201.1.1.num.int <20 (0x14)>
  [18] #200.1.1.num.int <18 (0x12)>
  [19] #199.1.1.num.int <16 (0x10)>
  [20] #198.1.1.num.int <14 (0xe)>
  [21] #197.1.1.num.int <12 (0xc)>
  [22] #191.1.1.num.int <10 (0xa)>
IP: #188:0x4f, type 6, 80[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x51 (0x4f), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #235.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x50, size 1>
  [1] #234.1.1.num.int <210 (0xd2)>
  [2] #233.1.1.num.int <-1 (0xffffffffffffffff)>
  [3] #232.1.1.num.int <200 (0xc8)>
  [4] #227.1.1.num.int <10994 (0x2af2)>
  [5] #226.1.1.num.int <10996 (0x2af4)>
  [6] #225.1.1.num.int <10998 (0x2af6)>
  [7] #220.1.1.num.int <11000 (0x2af8)>
  [8] #219.1.1.num.int <1090 (0x442)>
  [9] #218.1.1.num.int <1092 (0x444)>
  [10] #217.1.1.num.int <1094 (0x446)>
  [11] #216.1.1.num.int <1096 (0x448)>
  [12] #215.1.1.num.int <1098 (0x44a)>
  [13] #210.1.1.num.int <1100 (0x44c)>
  [14] #209.1.1.num.int <106 (0x6a)>
  [15] #208.1.1.num.int <104 (0x68)>
  [16] #207.1.1.num.int <102 (0x66)>
  [17] #202.1.1.num.int <100 (0x64)>
  [18] #201.1.1.num.int <20 (0x14)>
  [19] #200.1.1.num.int <18 (0x12)>
  [20] #199.1.1.num.int <16 (0x10)>
  [21] #198.1.1.num.int <14 (0xe)>
  [22] #197.1.1.num.int <12 (0xc)>
  [23] #191.1.1.num.int <10 (0xa)>
IP: #188:0x51, type 8, 82[3]
GC: --#235.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
GC: --#234.1.1.num.int
GC: --#233.1.1.num.int
GC: --#232.1.1.num.int
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x55 (0x51), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #227.1.1.num.int <10994 (0x2af2)>
  [1] #226.1.1.num.int <10996 (0x2af4)>
  [2] #225.1.1.num.int <10998 (0x2af6)>
  [3] #220.1.1.num.int <11000 (0x2af8)>
  [4] #219.1.1.num.int <1090 (0x442)>
  [5] #218.1.1.num.int <1092 (0x444)>
  [6] #217.1.1.num.int <1094 (0x446)>
  [7] #216.1.1.num.int <1096 (0x448)>
  [8] #215.1.1.num.int <1098 (0x44a)>
  [9] #210.1.1.num.int <1100 (0x44c)>
  [10] #209.1.1.num.int <106 (0x6a)>
  [11] #208.1.1.num.int <104 (0x68)>
  [12] #207.1.1.num.int <102 (0x66)>
  [13] #202.1.1.num.int <100 (0x64)>
  [14] #201.1.1.num.int <20 (0x14)>
  [15] #200.1.1.num.int <18 (0x12)>
  [16] #199.1.1.num.int <16 (0x10)>
  [17] #198.1.1.num.int <14 (0xe)>
  [18] #197.1.1.num.int <12 (0xc)>
  [19] #191.1.1.num.int <10 (0xa)>
IP: #188:0x55, type 1, 0 (0x0)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x56 (0x55), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #236.1.1.num.int <0 (0x0)>
  [1] #227.1.1.num.int <10994 (0x2af2)>
  [2] #226.1.1.num.int <10996 (0x2af4)>
  [3] #225.1.1.num.int <10998 (0x2af6)>
  [4] #220.1.1.num.int <11000 (0x2af8)>
  [5] #219.1.1.num.int <1090 (0x442)>
  [6] #218.1.1.num.int <1092 (0x444)>
  [7] #217.1.1.num.int <1094 (0x446)>
  [8] #216.1.1.num.int <1096 (0x448)>
  [9] #215.1.1.num.int <1098 (0x44a)>
  [10] #210.1.1.num.int <1100 (0x44c)>
  [11] #209.1.1.num.int <106 (0x6a)>
  [12] #208.1.1.num.int <104 (0x68)>
  [13] #207.1.1.num.int <102 (0x66)>
  [14] #202.1.1.num.int <100 (0x64)>
  [15] #201.1.1.num.int <20 (0x14)>
  [16] #200.1.1.num.int <18 (0x12)>
  [17] #199.1.1.num.int <16 (0x10)>
  [18] #198.1.1.num.int <14 (0xe)>
  [19] #197.1.1.num.int <12 (0xc)>
  [20] #191.1.1.num.int <10 (0xa)>
IP: #188:0x56, type 1, 0 (0x0)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x57 (0x56), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #237.1.1.num.int <0 (0x0)>
  [1] #236.1.1.num.int <0 (0x0)>
  [2] #227.1.1.num.int <10994 (0x2af2)>
  [3] #226.1.1.num.int <10996 (0x2af4)>
  [4] #225.1.1.num.int <10998 (0x2af6)>
  [5] #220.1.1.num.int <11000 (0x2af8)>
  [6] #219.1.1.num.int <1090 (0x442)>
  [7] #218.1.1.num.int <1092 (0x444)>
  [8] #217.1.1.num.int <1094 (0x446)>
  [9] #216.1.1.num.int <1096 (0x448)>
  [10] #215.1.1.num.int <1098 (0x44a)>
  [11] #210.1.1.num.int <1100 (0x44c)>
  [12] #209.1.1.num.int <106 (0x6a)>
  [13] #208.1.1.num.int <104 (0x68)>
  [14] #207.1.1.num.int <102 (0x66)>
  [15] #202.1.1.num.int <100 (0x64)>
  [16] #201.1.1.num.int <20 (0x14)>
  [17] #200.1.1.num.int <18 (0x12)>
  [18] #199.1.1.num.int <16 (0x10)>
  [19] #198.1.1.num.int <14 (0xe)>
  [20] #197.1.1.num.int <12 (0xc)>
  [21] #191.1.1.num.int <10 (0xa)>
IP: #188:0x57, type 1, 100 (0x64)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x59 (0x57), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #238.1.1.num.int <100 (0x64)>
  [1] #237.1.1.num.int <0 (0x0)>
  [2] #236.1.1.num.int <0 (0x0)>
  [3] #227.1.1.num.int <10994 (0x2af2)>
  [4] #226.1.1.num.int <10996 (0x2af4)>
  [5] #225.1.1.num.int <10998 (0x2af6)>
  [6] #220.1.1.num.int <11000 (0x2af8)>
  [7] #219.1.1.num.int <1090 (0x442)>
  [8] #218.1.1.num.int <1092 (0x444)>
  [9] #217.1.1.num.int <1094 (0x446)>
  [10] #216.1.1.num.int <1096 (0x448)>
  [11] #215.1.1.num.int <1098 (0x44a)>
  [12] #210.1.1.num.int <1100 (0x44c)>
  [13] #209.1.1.num.int <106 (0x6a)>
  [14] #208.1.1.num.int <104 (0x68)>
  [15] #207.1.1.num.int <102 (0x66)>
  [16] #202.1.1.num.int <100 (0x64)>
  [17] #201.1.1.num.int <20 (0x14)>
  [18] #200.1.1.num.int <18 (0x12)>
  [19] #199.1.1.num.int <16 (0x10)>
  [20] #198.1.1.num.int <14 (0xe)>
  [21] #197.1.1.num.int <12 (0xc)>
  [22] #191.1.1.num.int <10 (0xa)>
IP: #188:0x59, type 6, 90[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x5b (0x59), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #239.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x5a, size 1>
  [1] #238.1.1.num.int <100 (0x64)>
  [2] #237.1.1.num.int <0 (0x0)>
  [3] #236.1.1.num.int <0 (0x0)>
  [4] #227.1.1.num.int <10994 (0x2af2)>
  [5] #226.1.1.num.int <10996 (0x2af4)>
  [6] #225.1.1.num.int <10998 (0x2af6)>
  [7] #220.1.1.num.int <11000 (0x2af8)>
  [8] #219.1.1.num.int <1090 (0x442)>
  [9] #218.1.1.num.int <1092 (0x444)>
  [10] #217.1.1.num.int <1094 (0x446)>
  [11] #216.1.1.num.int <1096 (0x448)>
  [12] #215.1.1.num.int <1098 (0x44a)>
  [13] #210.1.1.num.int <1100 (0x44c)>
  [14] #209.1.1.num.int <106 (0x6a)>
  [15] #208.1.1.num.int <104 (0x68)>
  [16] #207.1.1.num.int <102 (0x66)>
  [17] #202.1.1.num.int <100 (0x64)>
  [18] #201.1.1.num.int <20 (0x14)>
  [19] #200.1.1.num.int <18 (0x12)>
  [20] #199.1.1.num.int <16 (0x10)>
  [21] #198.1.1.num.int <14 (0xe)>
  [22] #197.1.1.num.int <12 (0xc)>
  [23] #191.1.1.num.int <10 (0xa)>
IP: #188:0x5b, type 8, 92[3]
GC: --#239.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
GC: --#238.1.1.num.int
GC: --#237.1.1.num.int
GC: --#236.1.1.num.int
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x5f (0x5b), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #227.1.1.num.int <10994 (0x2af2)>
  [1] #226.1.1.num.int <10996 (0x2af4)>
  [2] #225.1.1.num.int <10998 (0x2af6)>
  [3] #220.1.1.num.int <11000 (0x2af8)>
  [4] #219.1.1.num.int <1090 (0x442)>
  [5] #218.1.1.num.int <1092 (0x444)>
  [6] #217.1.1.num.int <1094 (0x446)>
  [7] #216.1.1.num.int <1096 (0x448)>
  [8] #215.1.1.num.int <1098 (0x44a)>
  [9] #210.1.1.num.int <1100 (0x44c)>
  [10] #209.1.1.num.int <106 (0x6a)>
  [11] #208.1.1.num.int <104 (0x68)>
  [12] #207.1.1.num.int <102 (0x66)>
  [13] #202.1.1.num.int <100 (0x64)>
  [14] #201.1.1.num.int <20 (0x14)>
  [15] #200.1.1.num.int <18 (0x12)>
  [16] #199.1.1.num.int <16 (0x10)>
  [17] #198.1.1.num.int <14 (0xe)>
  [18] #197.1.1.num.int <12 (0xc)>
  [19] #191.1.1.num.int <10 (0xa)>
