# ---  trace  ---
IP: #221:0x0, type 5, 1[7]
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
IP: #221:0x8, type 7, 9[8]
GC: ++#221.1.1.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x11 (0x8), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #224.1.1.mem.str.ro <#221.1.2.mem.ro, ofs 0x9, size 8, "€ AB23">
IP: #221:0x11, type 6, 18[1]
GC: ++#221.1.2.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x13 (0x11), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #225.1.1.mem.code.ro <#221.1.3.mem.ro, ofs 0x12, size 1>
  [1] #224.1.1.mem.str.ro <#221.1.3.mem.ro, ofs 0x9, size 8, "€ AB23">
IP: #221:0x13, type 8, 20[6]
GC: ++#225.1.1.mem.code.ro
GC: ++#224.1.1.mem.str.ro
GC: --#225.1.2.mem.code.ro
GC: --#224.1.2.mem.str.ro
== backtrace ==
  [0] #227.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #224.1.1.mem.str.ro>
  [1] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #226.1.1.num.int <226 (0xe2)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #227.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #224.1.1.mem.str.ro>
  [1] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #228.1.1.num.int <130 (0x82)>
  [1] #226.1.1.num.int <226 (0xe2)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #227.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #224.1.1.mem.str.ro>
  [1] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #229.1.1.num.int <172 (0xac)>
  [1] #228.1.1.num.int <130 (0x82)>
  [2] #226.1.1.num.int <226 (0xe2)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #227.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #224.1.1.mem.str.ro>
  [1] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #230.1.1.num.int <10 (0xa)>
  [1] #229.1.1.num.int <172 (0xac)>
  [2] #228.1.1.num.int <130 (0x82)>
  [3] #226.1.1.num.int <226 (0xe2)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #227.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #224.1.1.mem.str.ro>
  [1] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #231.1.1.num.int <65 (0x41)>
  [1] #230.1.1.num.int <10 (0xa)>
  [2] #229.1.1.num.int <172 (0xac)>
  [3] #228.1.1.num.int <130 (0x82)>
  [4] #226.1.1.num.int <226 (0xe2)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #227.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 6, iterate #224.1.1.mem.str.ro>
  [1] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #232.1.1.num.int <66 (0x42)>
  [1] #231.1.1.num.int <65 (0x41)>
  [2] #230.1.1.num.int <10 (0xa)>
  [3] #229.1.1.num.int <172 (0xac)>
  [4] #228.1.1.num.int <130 (0x82)>
  [5] #226.1.1.num.int <226 (0xe2)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #227.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 7, iterate #224.1.1.mem.str.ro>
  [1] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #233.1.1.num.int <50 (0x32)>
  [1] #232.1.1.num.int <66 (0x42)>
  [2] #231.1.1.num.int <65 (0x41)>
  [3] #230.1.1.num.int <10 (0xa)>
  [4] #229.1.1.num.int <172 (0xac)>
  [5] #228.1.1.num.int <130 (0x82)>
  [6] #226.1.1.num.int <226 (0xe2)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #227.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 8, iterate #224.1.1.mem.str.ro>
  [1] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #234.1.1.num.int <51 (0x33)>
  [1] #233.1.1.num.int <50 (0x32)>
  [2] #232.1.1.num.int <66 (0x42)>
  [3] #231.1.1.num.int <65 (0x41)>
  [4] #230.1.1.num.int <10 (0xa)>
  [5] #229.1.1.num.int <172 (0xac)>
  [6] #228.1.1.num.int <130 (0x82)>
  [7] #226.1.1.num.int <226 (0xe2)>
IP: #225:0x0, type 3, 1 (0x1)
GC: ++#223.1.1.ctx.func
GC: --#227.1.1.ctx.forall
GC: --#223.1.2.ctx.func
GC: --#225.1.1.mem.code.ro
GC: --#224.1.1.mem.str.ro
GC: --#221.1.3.mem.ro
GC: --#221.1.2.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #234.1.1.num.int <51 (0x33)>
  [1] #233.1.1.num.int <50 (0x32)>
  [2] #232.1.1.num.int <66 (0x42)>
  [3] #231.1.1.num.int <65 (0x41)>
  [4] #230.1.1.num.int <10 (0xa)>
  [5] #229.1.1.num.int <172 (0xac)>
  [6] #228.1.1.num.int <130 (0x82)>
  [7] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x1a, type 8, 27[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x1c (0x1a), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #13.1.2.num.prim <2 (0x2)>
  [1] #234.1.1.num.int <51 (0x33)>
  [2] #233.1.1.num.int <50 (0x32)>
  [3] #232.1.1.num.int <66 (0x42)>
  [4] #231.1.1.num.int <65 (0x41)>
  [5] #230.1.1.num.int <10 (0xa)>
  [6] #229.1.1.num.int <172 (0xac)>
  [7] #228.1.1.num.int <130 (0x82)>
  [8] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x1c, type 8, 29[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x1e (0x1c), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #236.1.1.array <size 0, max 16>
  [1] #234.1.1.num.int <51 (0x33)>
  [2] #233.1.1.num.int <50 (0x32)>
  [3] #232.1.1.num.int <66 (0x42)>
  [4] #231.1.1.num.int <65 (0x41)>
  [5] #230.1.1.num.int <10 (0xa)>
  [6] #229.1.1.num.int <172 (0xac)>
  [7] #228.1.1.num.int <130 (0x82)>
  [8] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x1e, type 6, 31[1]
GC: ++#221.1.1.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x20 (0x1e), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #237.1.1.mem.code.ro <#221.1.2.mem.ro, ofs 0x1f, size 1>
  [1] #236.1.1.array <size 0, max 16>
  [2] #234.1.1.num.int <51 (0x33)>
  [3] #233.1.1.num.int <50 (0x32)>
  [4] #232.1.1.num.int <66 (0x42)>
  [5] #231.1.1.num.int <65 (0x41)>
  [6] #230.1.1.num.int <10 (0xa)>
  [7] #229.1.1.num.int <172 (0xac)>
  [8] #228.1.1.num.int <130 (0x82)>
  [9] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x20, type 8, 33[6]
GC: --#237.1.1.mem.code.ro
GC: --#221.1.2.mem.ro
GC: --#236.1.1.array
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x27 (0x20), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #234.1.1.num.int <51 (0x33)>
  [1] #233.1.1.num.int <50 (0x32)>
  [2] #232.1.1.num.int <66 (0x42)>
  [3] #231.1.1.num.int <65 (0x41)>
  [4] #230.1.1.num.int <10 (0xa)>
  [5] #229.1.1.num.int <172 (0xac)>
  [6] #228.1.1.num.int <130 (0x82)>
  [7] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x27, type 8, 40[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x29 (0x27), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #234.1.1.num.int <51 (0x33)>
  [2] #233.1.1.num.int <50 (0x32)>
  [3] #232.1.1.num.int <66 (0x42)>
  [4] #231.1.1.num.int <65 (0x41)>
  [5] #230.1.1.num.int <10 (0xa)>
  [6] #229.1.1.num.int <172 (0xac)>
  [7] #228.1.1.num.int <130 (0x82)>
  [8] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x29, type 8, 42[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x2b (0x29), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #238.1.1.hash <size 0, max 16>
  [1] #234.1.1.num.int <51 (0x33)>
  [2] #233.1.1.num.int <50 (0x32)>
  [3] #232.1.1.num.int <66 (0x42)>
  [4] #231.1.1.num.int <65 (0x41)>
  [5] #230.1.1.num.int <10 (0xa)>
  [6] #229.1.1.num.int <172 (0xac)>
  [7] #228.1.1.num.int <130 (0x82)>
  [8] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x2b, type 6, 44[1]
GC: ++#221.1.1.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x2d (0x2b), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #239.1.1.mem.code.ro <#221.1.2.mem.ro, ofs 0x2c, size 1>
  [1] #238.1.1.hash <size 0, max 16>
  [2] #234.1.1.num.int <51 (0x33)>
  [3] #233.1.1.num.int <50 (0x32)>
  [4] #232.1.1.num.int <66 (0x42)>
  [5] #231.1.1.num.int <65 (0x41)>
  [6] #230.1.1.num.int <10 (0xa)>
  [7] #229.1.1.num.int <172 (0xac)>
  [8] #228.1.1.num.int <130 (0x82)>
  [9] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x2d, type 8, 46[6]
GC: --#239.1.1.mem.code.ro
GC: --#221.1.2.mem.ro
GC: --#238.1.1.hash
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x34 (0x2d), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #234.1.1.num.int <51 (0x33)>
  [1] #233.1.1.num.int <50 (0x32)>
  [2] #232.1.1.num.int <66 (0x42)>
  [3] #231.1.1.num.int <65 (0x41)>
  [4] #230.1.1.num.int <10 (0xa)>
  [5] #229.1.1.num.int <172 (0xac)>
  [6] #228.1.1.num.int <130 (0x82)>
  [7] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x34, type 8, 53[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x36 (0x34), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #13.1.2.num.prim <2 (0x2)>
  [1] #234.1.1.num.int <51 (0x33)>
  [2] #233.1.1.num.int <50 (0x32)>
  [3] #232.1.1.num.int <66 (0x42)>
  [4] #231.1.1.num.int <65 (0x41)>
  [5] #230.1.1.num.int <10 (0xa)>
  [6] #229.1.1.num.int <172 (0xac)>
  [7] #228.1.1.num.int <130 (0x82)>
  [8] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x36, type 1, 10 (0xa)
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x38 (0x36), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #240.1.1.num.int <10 (0xa)>
  [1] #13.1.2.num.prim <2 (0x2)>
  [2] #234.1.1.num.int <51 (0x33)>
  [3] #233.1.1.num.int <50 (0x32)>
  [4] #232.1.1.num.int <66 (0x42)>
  [5] #231.1.1.num.int <65 (0x41)>
  [6] #230.1.1.num.int <10 (0xa)>
  [7] #229.1.1.num.int <172 (0xac)>
  [8] #228.1.1.num.int <130 (0x82)>
  [9] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x38, type 1, 20 (0x14)
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x3a (0x38), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #241.1.1.num.int <20 (0x14)>
  [1] #240.1.1.num.int <10 (0xa)>
  [2] #13.1.2.num.prim <2 (0x2)>
  [3] #234.1.1.num.int <51 (0x33)>
  [4] #233.1.1.num.int <50 (0x32)>
  [5] #232.1.1.num.int <66 (0x42)>
  [6] #231.1.1.num.int <65 (0x41)>
  [7] #230.1.1.num.int <10 (0xa)>
  [8] #229.1.1.num.int <172 (0xac)>
  [9] #228.1.1.num.int <130 (0x82)>
  [10] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x3a, type 1, 30 (0x1e)
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x3c (0x3a), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #242.1.1.num.int <30 (0x1e)>
  [1] #241.1.1.num.int <20 (0x14)>
  [2] #240.1.1.num.int <10 (0xa)>
  [3] #13.1.2.num.prim <2 (0x2)>
  [4] #234.1.1.num.int <51 (0x33)>
  [5] #233.1.1.num.int <50 (0x32)>
  [6] #232.1.1.num.int <66 (0x42)>
  [7] #231.1.1.num.int <65 (0x41)>
  [8] #230.1.1.num.int <10 (0xa)>
  [9] #229.1.1.num.int <172 (0xac)>
  [10] #228.1.1.num.int <130 (0x82)>
  [11] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x3c, type 8, 61[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x3e (0x3c), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #243.1.1.array <size 3, max 3>
  [1] #234.1.1.num.int <51 (0x33)>
  [2] #233.1.1.num.int <50 (0x32)>
  [3] #232.1.1.num.int <66 (0x42)>
  [4] #231.1.1.num.int <65 (0x41)>
  [5] #230.1.1.num.int <10 (0xa)>
  [6] #229.1.1.num.int <172 (0xac)>
  [7] #228.1.1.num.int <130 (0x82)>
  [8] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x3e, type 6, 63[1]
GC: ++#221.1.1.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x40 (0x3e), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #244.1.1.mem.code.ro <#221.1.2.mem.ro, ofs 0x3f, size 1>
  [1] #243.1.1.array <size 3, max 3>
  [2] #234.1.1.num.int <51 (0x33)>
  [3] #233.1.1.num.int <50 (0x32)>
  [4] #232.1.1.num.int <66 (0x42)>
  [5] #231.1.1.num.int <65 (0x41)>
  [6] #230.1.1.num.int <10 (0xa)>
  [7] #229.1.1.num.int <172 (0xac)>
  [8] #228.1.1.num.int <130 (0x82)>
  [9] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x40, type 8, 65[6]
GC: ++#240.1.1.num.int
GC: ++#244.1.1.mem.code.ro
GC: ++#243.1.1.array
GC: --#244.1.2.mem.code.ro
GC: --#243.1.2.array
== backtrace ==
  [0] #245.1.1.ctx.forall <code #244.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #243.1.1.array>
  [1] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x47 (0x40), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #240.1.2.num.int <10 (0xa)>
  [1] #234.1.1.num.int <51 (0x33)>
  [2] #233.1.1.num.int <50 (0x32)>
  [3] #232.1.1.num.int <66 (0x42)>
  [4] #231.1.1.num.int <65 (0x41)>
  [5] #230.1.1.num.int <10 (0xa)>
  [6] #229.1.1.num.int <172 (0xac)>
  [7] #228.1.1.num.int <130 (0x82)>
  [8] #226.1.1.num.int <226 (0xe2)>
IP: #244:0x0, type 3, 1 (0x1)
GC: ++#241.1.1.num.int
== backtrace ==
  [0] #245.1.1.ctx.forall <code #244.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #243.1.1.array>
  [1] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x47 (0x40), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #241.1.2.num.int <20 (0x14)>
  [1] #240.1.2.num.int <10 (0xa)>
  [2] #234.1.1.num.int <51 (0x33)>
  [3] #233.1.1.num.int <50 (0x32)>
  [4] #232.1.1.num.int <66 (0x42)>
  [5] #231.1.1.num.int <65 (0x41)>
  [6] #230.1.1.num.int <10 (0xa)>
  [7] #229.1.1.num.int <172 (0xac)>
  [8] #228.1.1.num.int <130 (0x82)>
  [9] #226.1.1.num.int <226 (0xe2)>
IP: #244:0x0, type 3, 1 (0x1)
GC: ++#242.1.1.num.int
== backtrace ==
  [0] #245.1.1.ctx.forall <code #244.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #243.1.1.array>
  [1] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x47 (0x40), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #242.1.2.num.int <30 (0x1e)>
  [1] #241.1.2.num.int <20 (0x14)>
  [2] #240.1.2.num.int <10 (0xa)>
  [3] #234.1.1.num.int <51 (0x33)>
  [4] #233.1.1.num.int <50 (0x32)>
  [5] #232.1.1.num.int <66 (0x42)>
  [6] #231.1.1.num.int <65 (0x41)>
  [7] #230.1.1.num.int <10 (0xa)>
  [8] #229.1.1.num.int <172 (0xac)>
  [9] #228.1.1.num.int <130 (0x82)>
  [10] #226.1.1.num.int <226 (0xe2)>
IP: #244:0x0, type 3, 1 (0x1)
GC: ++#223.1.1.ctx.func
GC: --#245.1.1.ctx.forall
GC: --#223.1.2.ctx.func
GC: --#244.1.1.mem.code.ro
GC: --#243.1.1.array
GC: --#221.1.2.mem.ro
GC: --#240.1.2.num.int
GC: --#241.1.2.num.int
GC: --#242.1.2.num.int
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x47 (0x40), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #242.1.1.num.int <30 (0x1e)>
  [1] #241.1.1.num.int <20 (0x14)>
  [2] #240.1.1.num.int <10 (0xa)>
  [3] #234.1.1.num.int <51 (0x33)>
  [4] #233.1.1.num.int <50 (0x32)>
  [5] #232.1.1.num.int <66 (0x42)>
  [6] #231.1.1.num.int <65 (0x41)>
  [7] #230.1.1.num.int <10 (0xa)>
  [8] #229.1.1.num.int <172 (0xac)>
  [9] #228.1.1.num.int <130 (0x82)>
  [10] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x47, type 8, 72[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.1.mem.ro, ip 0x49 (0x47), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #242.1.1.num.int <30 (0x1e)>
  [2] #241.1.1.num.int <20 (0x14)>
  [3] #240.1.1.num.int <10 (0xa)>
  [4] #234.1.1.num.int <51 (0x33)>
  [5] #233.1.1.num.int <50 (0x32)>
  [6] #232.1.1.num.int <66 (0x42)>
  [7] #231.1.1.num.int <65 (0x41)>
  [8] #230.1.1.num.int <10 (0xa)>
  [9] #229.1.1.num.int <172 (0xac)>
  [10] #228.1.1.num.int <130 (0x82)>
  [11] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x49, type 7, 74[2]
GC: ++#221.1.1.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x4c (0x49), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #246.1.1.mem.str.ro <#221.1.2.mem.ro, ofs 0x4a, size 2, "aa">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #242.1.1.num.int <30 (0x1e)>
  [3] #241.1.1.num.int <20 (0x14)>
  [4] #240.1.1.num.int <10 (0xa)>
  [5] #234.1.1.num.int <51 (0x33)>
  [6] #233.1.1.num.int <50 (0x32)>
  [7] #232.1.1.num.int <66 (0x42)>
  [8] #231.1.1.num.int <65 (0x41)>
  [9] #230.1.1.num.int <10 (0xa)>
  [10] #229.1.1.num.int <172 (0xac)>
  [11] #228.1.1.num.int <130 (0x82)>
  [12] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x4c, type 1, 100 (0x64)
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.2.mem.ro, ip 0x4e (0x4c), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #247.1.1.num.int <100 (0x64)>
  [1] #246.1.1.mem.str.ro <#221.1.2.mem.ro, ofs 0x4a, size 2, "aa">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #242.1.1.num.int <30 (0x1e)>
  [4] #241.1.1.num.int <20 (0x14)>
  [5] #240.1.1.num.int <10 (0xa)>
  [6] #234.1.1.num.int <51 (0x33)>
  [7] #233.1.1.num.int <50 (0x32)>
  [8] #232.1.1.num.int <66 (0x42)>
  [9] #231.1.1.num.int <65 (0x41)>
  [10] #230.1.1.num.int <10 (0xa)>
  [11] #229.1.1.num.int <172 (0xac)>
  [12] #228.1.1.num.int <130 (0x82)>
  [13] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x4e, type 7, 79[2]
GC: ++#221.1.2.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x51 (0x4e), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #248.1.1.mem.str.ro <#221.1.3.mem.ro, ofs 0x4f, size 2, "bb">
  [1] #247.1.1.num.int <100 (0x64)>
  [2] #246.1.1.mem.str.ro <#221.1.3.mem.ro, ofs 0x4a, size 2, "aa">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #242.1.1.num.int <30 (0x1e)>
  [5] #241.1.1.num.int <20 (0x14)>
  [6] #240.1.1.num.int <10 (0xa)>
  [7] #234.1.1.num.int <51 (0x33)>
  [8] #233.1.1.num.int <50 (0x32)>
  [9] #232.1.1.num.int <66 (0x42)>
  [10] #231.1.1.num.int <65 (0x41)>
  [11] #230.1.1.num.int <10 (0xa)>
  [12] #229.1.1.num.int <172 (0xac)>
  [13] #228.1.1.num.int <130 (0x82)>
  [14] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x51, type 1, 200 (0xc8)
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.3.mem.ro, ip 0x54 (0x51), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #249.1.1.num.int <200 (0xc8)>
  [1] #248.1.1.mem.str.ro <#221.1.3.mem.ro, ofs 0x4f, size 2, "bb">
  [2] #247.1.1.num.int <100 (0x64)>
  [3] #246.1.1.mem.str.ro <#221.1.3.mem.ro, ofs 0x4a, size 2, "aa">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #242.1.1.num.int <30 (0x1e)>
  [6] #241.1.1.num.int <20 (0x14)>
  [7] #240.1.1.num.int <10 (0xa)>
  [8] #234.1.1.num.int <51 (0x33)>
  [9] #233.1.1.num.int <50 (0x32)>
  [10] #232.1.1.num.int <66 (0x42)>
  [11] #231.1.1.num.int <65 (0x41)>
  [12] #230.1.1.num.int <10 (0xa)>
  [13] #229.1.1.num.int <172 (0xac)>
  [14] #228.1.1.num.int <130 (0x82)>
  [15] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x54, type 7, 85[2]
GC: ++#221.1.3.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.4.mem.ro, ip 0x57 (0x54), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #250.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [1] #249.1.1.num.int <200 (0xc8)>
  [2] #248.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [3] #247.1.1.num.int <100 (0x64)>
  [4] #246.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #242.1.1.num.int <30 (0x1e)>
  [7] #241.1.1.num.int <20 (0x14)>
  [8] #240.1.1.num.int <10 (0xa)>
  [9] #234.1.1.num.int <51 (0x33)>
  [10] #233.1.1.num.int <50 (0x32)>
  [11] #232.1.1.num.int <66 (0x42)>
  [12] #231.1.1.num.int <65 (0x41)>
  [13] #230.1.1.num.int <10 (0xa)>
  [14] #229.1.1.num.int <172 (0xac)>
  [15] #228.1.1.num.int <130 (0x82)>
  [16] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x57, type 1, 300 (0x12c)
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.4.mem.ro, ip 0x5a (0x57), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #251.1.1.num.int <300 (0x12c)>
  [1] #250.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [2] #249.1.1.num.int <200 (0xc8)>
  [3] #248.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #247.1.1.num.int <100 (0x64)>
  [5] #246.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #242.1.1.num.int <30 (0x1e)>
  [8] #241.1.1.num.int <20 (0x14)>
  [9] #240.1.1.num.int <10 (0xa)>
  [10] #234.1.1.num.int <51 (0x33)>
  [11] #233.1.1.num.int <50 (0x32)>
  [12] #232.1.1.num.int <66 (0x42)>
  [13] #231.1.1.num.int <65 (0x41)>
  [14] #230.1.1.num.int <10 (0xa)>
  [15] #229.1.1.num.int <172 (0xac)>
  [16] #228.1.1.num.int <130 (0x82)>
  [17] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x5a, type 8, 91[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.4.mem.ro, ip 0x5c (0x5a), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #252.1.1.hash <size 3, max 3>
  [1] #242.1.1.num.int <30 (0x1e)>
  [2] #241.1.1.num.int <20 (0x14)>
  [3] #240.1.1.num.int <10 (0xa)>
  [4] #234.1.1.num.int <51 (0x33)>
  [5] #233.1.1.num.int <50 (0x32)>
  [6] #232.1.1.num.int <66 (0x42)>
  [7] #231.1.1.num.int <65 (0x41)>
  [8] #230.1.1.num.int <10 (0xa)>
  [9] #229.1.1.num.int <172 (0xac)>
  [10] #228.1.1.num.int <130 (0x82)>
  [11] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x5c, type 6, 93[1]
GC: ++#221.1.4.mem.ro
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.5.mem.ro, ip 0x5e (0x5c), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #253.1.1.mem.code.ro <#221.1.5.mem.ro, ofs 0x5d, size 1>
  [1] #252.1.1.hash <size 3, max 3>
  [2] #242.1.1.num.int <30 (0x1e)>
  [3] #241.1.1.num.int <20 (0x14)>
  [4] #240.1.1.num.int <10 (0xa)>
  [5] #234.1.1.num.int <51 (0x33)>
  [6] #233.1.1.num.int <50 (0x32)>
  [7] #232.1.1.num.int <66 (0x42)>
  [8] #231.1.1.num.int <65 (0x41)>
  [9] #230.1.1.num.int <10 (0xa)>
  [10] #229.1.1.num.int <172 (0xac)>
  [11] #228.1.1.num.int <130 (0x82)>
  [12] #226.1.1.num.int <226 (0xe2)>
IP: #221:0x5e, type 8, 95[6]
GC: ++#246.1.1.mem.str.ro
GC: ++#247.1.1.num.int
GC: ++#253.1.1.mem.code.ro
GC: ++#252.1.1.hash
GC: --#253.1.2.mem.code.ro
GC: --#252.1.2.hash
== backtrace ==
  [0] #254.1.1.ctx.forall <code #253.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #252.1.1.hash>
  [1] #223.1.1.ctx.func <code #221.1.5.mem.ro, ip 0x65 (0x5e), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #247.1.2.num.int <100 (0x64)>
  [1] #246.1.2.mem.str.ro <#221.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [2] #242.1.1.num.int <30 (0x1e)>
  [3] #241.1.1.num.int <20 (0x14)>
  [4] #240.1.1.num.int <10 (0xa)>
  [5] #234.1.1.num.int <51 (0x33)>
  [6] #233.1.1.num.int <50 (0x32)>
  [7] #232.1.1.num.int <66 (0x42)>
  [8] #231.1.1.num.int <65 (0x41)>
  [9] #230.1.1.num.int <10 (0xa)>
  [10] #229.1.1.num.int <172 (0xac)>
  [11] #228.1.1.num.int <130 (0x82)>
  [12] #226.1.1.num.int <226 (0xe2)>
IP: #253:0x0, type 3, 1 (0x1)
GC: ++#248.1.1.mem.str.ro
GC: ++#249.1.1.num.int
== backtrace ==
  [0] #254.1.1.ctx.forall <code #253.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #252.1.1.hash>
  [1] #223.1.1.ctx.func <code #221.1.5.mem.ro, ip 0x65 (0x5e), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #249.1.2.num.int <200 (0xc8)>
  [1] #248.1.2.mem.str.ro <#221.1.5.mem.ro, ofs 0x4f, size 2, "bb">
  [2] #247.1.2.num.int <100 (0x64)>
  [3] #246.1.2.mem.str.ro <#221.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [4] #242.1.1.num.int <30 (0x1e)>
  [5] #241.1.1.num.int <20 (0x14)>
  [6] #240.1.1.num.int <10 (0xa)>
  [7] #234.1.1.num.int <51 (0x33)>
  [8] #233.1.1.num.int <50 (0x32)>
  [9] #232.1.1.num.int <66 (0x42)>
  [10] #231.1.1.num.int <65 (0x41)>
  [11] #230.1.1.num.int <10 (0xa)>
  [12] #229.1.1.num.int <172 (0xac)>
  [13] #228.1.1.num.int <130 (0x82)>
  [14] #226.1.1.num.int <226 (0xe2)>
IP: #253:0x0, type 3, 1 (0x1)
GC: ++#250.1.1.mem.str.ro
GC: ++#251.1.1.num.int
== backtrace ==
  [0] #254.1.1.ctx.forall <code #253.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #252.1.1.hash>
  [1] #223.1.1.ctx.func <code #221.1.5.mem.ro, ip 0x65 (0x5e), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #251.1.2.num.int <300 (0x12c)>
  [1] #250.1.2.mem.str.ro <#221.1.5.mem.ro, ofs 0x55, size 2, "cc">
  [2] #249.1.2.num.int <200 (0xc8)>
  [3] #248.1.2.mem.str.ro <#221.1.5.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #247.1.2.num.int <100 (0x64)>
  [5] #246.1.2.mem.str.ro <#221.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #242.1.1.num.int <30 (0x1e)>
  [7] #241.1.1.num.int <20 (0x14)>
  [8] #240.1.1.num.int <10 (0xa)>
  [9] #234.1.1.num.int <51 (0x33)>
  [10] #233.1.1.num.int <50 (0x32)>
  [11] #232.1.1.num.int <66 (0x42)>
  [12] #231.1.1.num.int <65 (0x41)>
  [13] #230.1.1.num.int <10 (0xa)>
  [14] #229.1.1.num.int <172 (0xac)>
  [15] #228.1.1.num.int <130 (0x82)>
  [16] #226.1.1.num.int <226 (0xe2)>
IP: #253:0x0, type 3, 1 (0x1)
GC: ++#223.1.1.ctx.func
GC: --#254.1.1.ctx.forall
GC: --#223.1.2.ctx.func
GC: --#253.1.1.mem.code.ro
GC: --#252.1.1.hash
GC: --#221.1.5.mem.ro
GC: --#246.1.2.mem.str.ro
GC: --#247.1.2.num.int
GC: --#248.1.2.mem.str.ro
GC: --#249.1.2.num.int
GC: --#250.1.2.mem.str.ro
GC: --#251.1.2.num.int
== backtrace ==
  [0] #223.1.1.ctx.func <code #221.1.4.mem.ro, ip 0x65 (0x5e), dict #8.1.2.hash>
== stack (#222.1.1.array) ==
  [0] #251.1.1.num.int <300 (0x12c)>
  [1] #250.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [2] #249.1.1.num.int <200 (0xc8)>
  [3] #248.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #247.1.1.num.int <100 (0x64)>
  [5] #246.1.1.mem.str.ro <#221.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #242.1.1.num.int <30 (0x1e)>
  [7] #241.1.1.num.int <20 (0x14)>
  [8] #240.1.1.num.int <10 (0xa)>
  [9] #234.1.1.num.int <51 (0x33)>
  [10] #233.1.1.num.int <50 (0x32)>
  [11] #232.1.1.num.int <66 (0x42)>
  [12] #231.1.1.num.int <65 (0x41)>
  [13] #230.1.1.num.int <10 (0xa)>
  [14] #229.1.1.num.int <172 (0xac)>
  [15] #228.1.1.num.int <130 (0x82)>
  [16] #226.1.1.num.int <226 (0xe2)>
