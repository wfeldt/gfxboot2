# ---  trace  ---
IP: #197:0x0, type 5, 1[7]
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x8 (0x0), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x8, type 7, 9[8]
GC: ++#197.1.1.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x11 (0x8), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #200.1.1.mem.str.ro <#197.1.2.mem.ro, ofs 0x9, size 8, "€ AB23">
IP: #197:0x11, type 6, 18[1]
GC: ++#197.1.2.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x13 (0x11), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #201.1.1.mem.code.ro <#197.1.3.mem.ro, ofs 0x12, size 1>
  [1] #200.1.1.mem.str.ro <#197.1.3.mem.ro, ofs 0x9, size 8, "€ AB23">
IP: #197:0x13, type 8, 20[6]
GC: ++#201.1.1.mem.code.ro
GC: ++#200.1.1.mem.str.ro
GC: --#201.1.2.mem.code.ro
GC: --#200.1.2.mem.str.ro
== backtrace ==
  [0] #203.1.1.ctx.forall <code #201.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #200.1.1.mem.str.ro>
  [1] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #202.1.1.num.int <226 (0xe2)>
IP: #201:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.forall <code #201.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #200.1.1.mem.str.ro>
  [1] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #204.1.1.num.int <130 (0x82)>
  [1] #202.1.1.num.int <226 (0xe2)>
IP: #201:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.forall <code #201.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #200.1.1.mem.str.ro>
  [1] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #205.1.1.num.int <172 (0xac)>
  [1] #204.1.1.num.int <130 (0x82)>
  [2] #202.1.1.num.int <226 (0xe2)>
IP: #201:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.forall <code #201.1.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #200.1.1.mem.str.ro>
  [1] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #206.1.1.num.int <10 (0xa)>
  [1] #205.1.1.num.int <172 (0xac)>
  [2] #204.1.1.num.int <130 (0x82)>
  [3] #202.1.1.num.int <226 (0xe2)>
IP: #201:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.forall <code #201.1.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #200.1.1.mem.str.ro>
  [1] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #207.1.1.num.int <65 (0x41)>
  [1] #206.1.1.num.int <10 (0xa)>
  [2] #205.1.1.num.int <172 (0xac)>
  [3] #204.1.1.num.int <130 (0x82)>
  [4] #202.1.1.num.int <226 (0xe2)>
IP: #201:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.forall <code #201.1.1.mem.code.ro, ip 0x0 (0x0), index 6, iterate #200.1.1.mem.str.ro>
  [1] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.1.num.int <66 (0x42)>
  [1] #207.1.1.num.int <65 (0x41)>
  [2] #206.1.1.num.int <10 (0xa)>
  [3] #205.1.1.num.int <172 (0xac)>
  [4] #204.1.1.num.int <130 (0x82)>
  [5] #202.1.1.num.int <226 (0xe2)>
IP: #201:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.forall <code #201.1.1.mem.code.ro, ip 0x0 (0x0), index 7, iterate #200.1.1.mem.str.ro>
  [1] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #209.1.1.num.int <50 (0x32)>
  [1] #208.1.1.num.int <66 (0x42)>
  [2] #207.1.1.num.int <65 (0x41)>
  [3] #206.1.1.num.int <10 (0xa)>
  [4] #205.1.1.num.int <172 (0xac)>
  [5] #204.1.1.num.int <130 (0x82)>
  [6] #202.1.1.num.int <226 (0xe2)>
IP: #201:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.forall <code #201.1.1.mem.code.ro, ip 0x0 (0x0), index 8, iterate #200.1.1.mem.str.ro>
  [1] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #210.1.1.num.int <51 (0x33)>
  [1] #209.1.1.num.int <50 (0x32)>
  [2] #208.1.1.num.int <66 (0x42)>
  [3] #207.1.1.num.int <65 (0x41)>
  [4] #206.1.1.num.int <10 (0xa)>
  [5] #205.1.1.num.int <172 (0xac)>
  [6] #204.1.1.num.int <130 (0x82)>
  [7] #202.1.1.num.int <226 (0xe2)>
IP: #201:0x0, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#203.1.1.ctx.forall
GC: --#199.1.2.ctx.func
GC: --#201.1.1.mem.code.ro
GC: --#200.1.1.mem.str.ro
GC: --#197.1.3.mem.ro
GC: --#197.1.2.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x1a (0x13), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #210.1.1.num.int <51 (0x33)>
  [1] #209.1.1.num.int <50 (0x32)>
  [2] #208.1.1.num.int <66 (0x42)>
  [3] #207.1.1.num.int <65 (0x41)>
  [4] #206.1.1.num.int <10 (0xa)>
  [5] #205.1.1.num.int <172 (0xac)>
  [6] #204.1.1.num.int <130 (0x82)>
  [7] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x1a, type 8, 27[1]
GC: ++#10.1.1.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x1c (0x1a), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #10.1.2.num.prim <2 (0x2)>
  [1] #210.1.1.num.int <51 (0x33)>
  [2] #209.1.1.num.int <50 (0x32)>
  [3] #208.1.1.num.int <66 (0x42)>
  [4] #207.1.1.num.int <65 (0x41)>
  [5] #206.1.1.num.int <10 (0xa)>
  [6] #205.1.1.num.int <172 (0xac)>
  [7] #204.1.1.num.int <130 (0x82)>
  [8] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x1c, type 8, 29[1]
GC: --#10.1.2.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x1e (0x1c), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #212.1.1.array <size 0, max 16>
  [1] #210.1.1.num.int <51 (0x33)>
  [2] #209.1.1.num.int <50 (0x32)>
  [3] #208.1.1.num.int <66 (0x42)>
  [4] #207.1.1.num.int <65 (0x41)>
  [5] #206.1.1.num.int <10 (0xa)>
  [6] #205.1.1.num.int <172 (0xac)>
  [7] #204.1.1.num.int <130 (0x82)>
  [8] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x1e, type 6, 31[1]
GC: ++#197.1.1.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x20 (0x1e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.1.mem.code.ro <#197.1.2.mem.ro, ofs 0x1f, size 1>
  [1] #212.1.1.array <size 0, max 16>
  [2] #210.1.1.num.int <51 (0x33)>
  [3] #209.1.1.num.int <50 (0x32)>
  [4] #208.1.1.num.int <66 (0x42)>
  [5] #207.1.1.num.int <65 (0x41)>
  [6] #206.1.1.num.int <10 (0xa)>
  [7] #205.1.1.num.int <172 (0xac)>
  [8] #204.1.1.num.int <130 (0x82)>
  [9] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x20, type 8, 33[6]
GC: --#213.1.1.mem.code.ro
GC: --#197.1.2.mem.ro
GC: --#212.1.1.array
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x27 (0x20), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #210.1.1.num.int <51 (0x33)>
  [1] #209.1.1.num.int <50 (0x32)>
  [2] #208.1.1.num.int <66 (0x42)>
  [3] #207.1.1.num.int <65 (0x41)>
  [4] #206.1.1.num.int <10 (0xa)>
  [5] #205.1.1.num.int <172 (0xac)>
  [6] #204.1.1.num.int <130 (0x82)>
  [7] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x27, type 8, 40[1]
GC: ++#14.1.1.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x29 (0x27), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #14.1.2.num.prim <4 (0x4)>
  [1] #210.1.1.num.int <51 (0x33)>
  [2] #209.1.1.num.int <50 (0x32)>
  [3] #208.1.1.num.int <66 (0x42)>
  [4] #207.1.1.num.int <65 (0x41)>
  [5] #206.1.1.num.int <10 (0xa)>
  [6] #205.1.1.num.int <172 (0xac)>
  [7] #204.1.1.num.int <130 (0x82)>
  [8] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x29, type 8, 42[1]
GC: --#14.1.2.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x2b (0x29), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #214.1.1.hash <size 0, max 16>
  [1] #210.1.1.num.int <51 (0x33)>
  [2] #209.1.1.num.int <50 (0x32)>
  [3] #208.1.1.num.int <66 (0x42)>
  [4] #207.1.1.num.int <65 (0x41)>
  [5] #206.1.1.num.int <10 (0xa)>
  [6] #205.1.1.num.int <172 (0xac)>
  [7] #204.1.1.num.int <130 (0x82)>
  [8] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x2b, type 6, 44[1]
GC: ++#197.1.1.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x2d (0x2b), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #215.1.1.mem.code.ro <#197.1.2.mem.ro, ofs 0x2c, size 1>
  [1] #214.1.1.hash <size 0, max 16>
  [2] #210.1.1.num.int <51 (0x33)>
  [3] #209.1.1.num.int <50 (0x32)>
  [4] #208.1.1.num.int <66 (0x42)>
  [5] #207.1.1.num.int <65 (0x41)>
  [6] #206.1.1.num.int <10 (0xa)>
  [7] #205.1.1.num.int <172 (0xac)>
  [8] #204.1.1.num.int <130 (0x82)>
  [9] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x2d, type 8, 46[6]
GC: --#215.1.1.mem.code.ro
GC: --#197.1.2.mem.ro
GC: --#214.1.1.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x34 (0x2d), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #210.1.1.num.int <51 (0x33)>
  [1] #209.1.1.num.int <50 (0x32)>
  [2] #208.1.1.num.int <66 (0x42)>
  [3] #207.1.1.num.int <65 (0x41)>
  [4] #206.1.1.num.int <10 (0xa)>
  [5] #205.1.1.num.int <172 (0xac)>
  [6] #204.1.1.num.int <130 (0x82)>
  [7] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x34, type 8, 53[1]
GC: ++#10.1.1.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x36 (0x34), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #10.1.2.num.prim <2 (0x2)>
  [1] #210.1.1.num.int <51 (0x33)>
  [2] #209.1.1.num.int <50 (0x32)>
  [3] #208.1.1.num.int <66 (0x42)>
  [4] #207.1.1.num.int <65 (0x41)>
  [5] #206.1.1.num.int <10 (0xa)>
  [6] #205.1.1.num.int <172 (0xac)>
  [7] #204.1.1.num.int <130 (0x82)>
  [8] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x36, type 1, 10 (0xa)
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x38 (0x36), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #216.1.1.num.int <10 (0xa)>
  [1] #10.1.2.num.prim <2 (0x2)>
  [2] #210.1.1.num.int <51 (0x33)>
  [3] #209.1.1.num.int <50 (0x32)>
  [4] #208.1.1.num.int <66 (0x42)>
  [5] #207.1.1.num.int <65 (0x41)>
  [6] #206.1.1.num.int <10 (0xa)>
  [7] #205.1.1.num.int <172 (0xac)>
  [8] #204.1.1.num.int <130 (0x82)>
  [9] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x38, type 1, 20 (0x14)
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x3a (0x38), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #217.1.1.num.int <20 (0x14)>
  [1] #216.1.1.num.int <10 (0xa)>
  [2] #10.1.2.num.prim <2 (0x2)>
  [3] #210.1.1.num.int <51 (0x33)>
  [4] #209.1.1.num.int <50 (0x32)>
  [5] #208.1.1.num.int <66 (0x42)>
  [6] #207.1.1.num.int <65 (0x41)>
  [7] #206.1.1.num.int <10 (0xa)>
  [8] #205.1.1.num.int <172 (0xac)>
  [9] #204.1.1.num.int <130 (0x82)>
  [10] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x3a, type 1, 30 (0x1e)
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x3c (0x3a), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #218.1.1.num.int <30 (0x1e)>
  [1] #217.1.1.num.int <20 (0x14)>
  [2] #216.1.1.num.int <10 (0xa)>
  [3] #10.1.2.num.prim <2 (0x2)>
  [4] #210.1.1.num.int <51 (0x33)>
  [5] #209.1.1.num.int <50 (0x32)>
  [6] #208.1.1.num.int <66 (0x42)>
  [7] #207.1.1.num.int <65 (0x41)>
  [8] #206.1.1.num.int <10 (0xa)>
  [9] #205.1.1.num.int <172 (0xac)>
  [10] #204.1.1.num.int <130 (0x82)>
  [11] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x3c, type 8, 61[1]
GC: --#10.1.2.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x3e (0x3c), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #219.1.1.array <size 3, max 3>
  [1] #210.1.1.num.int <51 (0x33)>
  [2] #209.1.1.num.int <50 (0x32)>
  [3] #208.1.1.num.int <66 (0x42)>
  [4] #207.1.1.num.int <65 (0x41)>
  [5] #206.1.1.num.int <10 (0xa)>
  [6] #205.1.1.num.int <172 (0xac)>
  [7] #204.1.1.num.int <130 (0x82)>
  [8] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x3e, type 6, 63[1]
GC: ++#197.1.1.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x40 (0x3e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #220.1.1.mem.code.ro <#197.1.2.mem.ro, ofs 0x3f, size 1>
  [1] #219.1.1.array <size 3, max 3>
  [2] #210.1.1.num.int <51 (0x33)>
  [3] #209.1.1.num.int <50 (0x32)>
  [4] #208.1.1.num.int <66 (0x42)>
  [5] #207.1.1.num.int <65 (0x41)>
  [6] #206.1.1.num.int <10 (0xa)>
  [7] #205.1.1.num.int <172 (0xac)>
  [8] #204.1.1.num.int <130 (0x82)>
  [9] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x40, type 8, 65[6]
GC: ++#216.1.1.num.int
GC: ++#220.1.1.mem.code.ro
GC: ++#219.1.1.array
GC: --#220.1.2.mem.code.ro
GC: --#219.1.2.array
== backtrace ==
  [0] #221.1.1.ctx.forall <code #220.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #219.1.1.array>
  [1] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x47 (0x40), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #216.1.2.num.int <10 (0xa)>
  [1] #210.1.1.num.int <51 (0x33)>
  [2] #209.1.1.num.int <50 (0x32)>
  [3] #208.1.1.num.int <66 (0x42)>
  [4] #207.1.1.num.int <65 (0x41)>
  [5] #206.1.1.num.int <10 (0xa)>
  [6] #205.1.1.num.int <172 (0xac)>
  [7] #204.1.1.num.int <130 (0x82)>
  [8] #202.1.1.num.int <226 (0xe2)>
IP: #220:0x0, type 3, 1 (0x1)
GC: ++#217.1.1.num.int
== backtrace ==
  [0] #221.1.1.ctx.forall <code #220.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #219.1.1.array>
  [1] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x47 (0x40), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #217.1.2.num.int <20 (0x14)>
  [1] #216.1.2.num.int <10 (0xa)>
  [2] #210.1.1.num.int <51 (0x33)>
  [3] #209.1.1.num.int <50 (0x32)>
  [4] #208.1.1.num.int <66 (0x42)>
  [5] #207.1.1.num.int <65 (0x41)>
  [6] #206.1.1.num.int <10 (0xa)>
  [7] #205.1.1.num.int <172 (0xac)>
  [8] #204.1.1.num.int <130 (0x82)>
  [9] #202.1.1.num.int <226 (0xe2)>
IP: #220:0x0, type 3, 1 (0x1)
GC: ++#218.1.1.num.int
== backtrace ==
  [0] #221.1.1.ctx.forall <code #220.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #219.1.1.array>
  [1] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x47 (0x40), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #218.1.2.num.int <30 (0x1e)>
  [1] #217.1.2.num.int <20 (0x14)>
  [2] #216.1.2.num.int <10 (0xa)>
  [3] #210.1.1.num.int <51 (0x33)>
  [4] #209.1.1.num.int <50 (0x32)>
  [5] #208.1.1.num.int <66 (0x42)>
  [6] #207.1.1.num.int <65 (0x41)>
  [7] #206.1.1.num.int <10 (0xa)>
  [8] #205.1.1.num.int <172 (0xac)>
  [9] #204.1.1.num.int <130 (0x82)>
  [10] #202.1.1.num.int <226 (0xe2)>
IP: #220:0x0, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#221.1.1.ctx.forall
GC: --#199.1.2.ctx.func
GC: --#220.1.1.mem.code.ro
GC: --#219.1.1.array
GC: --#197.1.2.mem.ro
GC: --#216.1.2.num.int
GC: --#217.1.2.num.int
GC: --#218.1.2.num.int
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x47 (0x40), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #218.1.1.num.int <30 (0x1e)>
  [1] #217.1.1.num.int <20 (0x14)>
  [2] #216.1.1.num.int <10 (0xa)>
  [3] #210.1.1.num.int <51 (0x33)>
  [4] #209.1.1.num.int <50 (0x32)>
  [5] #208.1.1.num.int <66 (0x42)>
  [6] #207.1.1.num.int <65 (0x41)>
  [7] #206.1.1.num.int <10 (0xa)>
  [8] #205.1.1.num.int <172 (0xac)>
  [9] #204.1.1.num.int <130 (0x82)>
  [10] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x47, type 8, 72[1]
GC: ++#14.1.1.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x49 (0x47), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #14.1.2.num.prim <4 (0x4)>
  [1] #218.1.1.num.int <30 (0x1e)>
  [2] #217.1.1.num.int <20 (0x14)>
  [3] #216.1.1.num.int <10 (0xa)>
  [4] #210.1.1.num.int <51 (0x33)>
  [5] #209.1.1.num.int <50 (0x32)>
  [6] #208.1.1.num.int <66 (0x42)>
  [7] #207.1.1.num.int <65 (0x41)>
  [8] #206.1.1.num.int <10 (0xa)>
  [9] #205.1.1.num.int <172 (0xac)>
  [10] #204.1.1.num.int <130 (0x82)>
  [11] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x49, type 7, 74[2]
GC: ++#197.1.1.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x4c (0x49), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #222.1.1.mem.str.ro <#197.1.2.mem.ro, ofs 0x4a, size 2, "aa">
  [1] #14.1.2.num.prim <4 (0x4)>
  [2] #218.1.1.num.int <30 (0x1e)>
  [3] #217.1.1.num.int <20 (0x14)>
  [4] #216.1.1.num.int <10 (0xa)>
  [5] #210.1.1.num.int <51 (0x33)>
  [6] #209.1.1.num.int <50 (0x32)>
  [7] #208.1.1.num.int <66 (0x42)>
  [8] #207.1.1.num.int <65 (0x41)>
  [9] #206.1.1.num.int <10 (0xa)>
  [10] #205.1.1.num.int <172 (0xac)>
  [11] #204.1.1.num.int <130 (0x82)>
  [12] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x4c, type 1, 100 (0x64)
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x4e (0x4c), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #223.1.1.num.int <100 (0x64)>
  [1] #222.1.1.mem.str.ro <#197.1.2.mem.ro, ofs 0x4a, size 2, "aa">
  [2] #14.1.2.num.prim <4 (0x4)>
  [3] #218.1.1.num.int <30 (0x1e)>
  [4] #217.1.1.num.int <20 (0x14)>
  [5] #216.1.1.num.int <10 (0xa)>
  [6] #210.1.1.num.int <51 (0x33)>
  [7] #209.1.1.num.int <50 (0x32)>
  [8] #208.1.1.num.int <66 (0x42)>
  [9] #207.1.1.num.int <65 (0x41)>
  [10] #206.1.1.num.int <10 (0xa)>
  [11] #205.1.1.num.int <172 (0xac)>
  [12] #204.1.1.num.int <130 (0x82)>
  [13] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x4e, type 7, 79[2]
GC: ++#197.1.2.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x51 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #224.1.1.mem.str.ro <#197.1.3.mem.ro, ofs 0x4f, size 2, "bb">
  [1] #223.1.1.num.int <100 (0x64)>
  [2] #222.1.1.mem.str.ro <#197.1.3.mem.ro, ofs 0x4a, size 2, "aa">
  [3] #14.1.2.num.prim <4 (0x4)>
  [4] #218.1.1.num.int <30 (0x1e)>
  [5] #217.1.1.num.int <20 (0x14)>
  [6] #216.1.1.num.int <10 (0xa)>
  [7] #210.1.1.num.int <51 (0x33)>
  [8] #209.1.1.num.int <50 (0x32)>
  [9] #208.1.1.num.int <66 (0x42)>
  [10] #207.1.1.num.int <65 (0x41)>
  [11] #206.1.1.num.int <10 (0xa)>
  [12] #205.1.1.num.int <172 (0xac)>
  [13] #204.1.1.num.int <130 (0x82)>
  [14] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x51, type 1, 200 (0xc8)
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x54 (0x51), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #225.1.1.num.int <200 (0xc8)>
  [1] #224.1.1.mem.str.ro <#197.1.3.mem.ro, ofs 0x4f, size 2, "bb">
  [2] #223.1.1.num.int <100 (0x64)>
  [3] #222.1.1.mem.str.ro <#197.1.3.mem.ro, ofs 0x4a, size 2, "aa">
  [4] #14.1.2.num.prim <4 (0x4)>
  [5] #218.1.1.num.int <30 (0x1e)>
  [6] #217.1.1.num.int <20 (0x14)>
  [7] #216.1.1.num.int <10 (0xa)>
  [8] #210.1.1.num.int <51 (0x33)>
  [9] #209.1.1.num.int <50 (0x32)>
  [10] #208.1.1.num.int <66 (0x42)>
  [11] #207.1.1.num.int <65 (0x41)>
  [12] #206.1.1.num.int <10 (0xa)>
  [13] #205.1.1.num.int <172 (0xac)>
  [14] #204.1.1.num.int <130 (0x82)>
  [15] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x54, type 7, 85[2]
GC: ++#197.1.3.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.4.mem.ro, ip 0x57 (0x54), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #226.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [1] #225.1.1.num.int <200 (0xc8)>
  [2] #224.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [3] #223.1.1.num.int <100 (0x64)>
  [4] #222.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [5] #14.1.2.num.prim <4 (0x4)>
  [6] #218.1.1.num.int <30 (0x1e)>
  [7] #217.1.1.num.int <20 (0x14)>
  [8] #216.1.1.num.int <10 (0xa)>
  [9] #210.1.1.num.int <51 (0x33)>
  [10] #209.1.1.num.int <50 (0x32)>
  [11] #208.1.1.num.int <66 (0x42)>
  [12] #207.1.1.num.int <65 (0x41)>
  [13] #206.1.1.num.int <10 (0xa)>
  [14] #205.1.1.num.int <172 (0xac)>
  [15] #204.1.1.num.int <130 (0x82)>
  [16] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x57, type 1, 300 (0x12c)
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.4.mem.ro, ip 0x5a (0x57), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #227.1.1.num.int <300 (0x12c)>
  [1] #226.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [2] #225.1.1.num.int <200 (0xc8)>
  [3] #224.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #223.1.1.num.int <100 (0x64)>
  [5] #222.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #14.1.2.num.prim <4 (0x4)>
  [7] #218.1.1.num.int <30 (0x1e)>
  [8] #217.1.1.num.int <20 (0x14)>
  [9] #216.1.1.num.int <10 (0xa)>
  [10] #210.1.1.num.int <51 (0x33)>
  [11] #209.1.1.num.int <50 (0x32)>
  [12] #208.1.1.num.int <66 (0x42)>
  [13] #207.1.1.num.int <65 (0x41)>
  [14] #206.1.1.num.int <10 (0xa)>
  [15] #205.1.1.num.int <172 (0xac)>
  [16] #204.1.1.num.int <130 (0x82)>
  [17] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x5a, type 8, 91[1]
GC: --#14.1.2.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.4.mem.ro, ip 0x5c (0x5a), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #228.1.1.hash <size 3, max 3>
  [1] #218.1.1.num.int <30 (0x1e)>
  [2] #217.1.1.num.int <20 (0x14)>
  [3] #216.1.1.num.int <10 (0xa)>
  [4] #210.1.1.num.int <51 (0x33)>
  [5] #209.1.1.num.int <50 (0x32)>
  [6] #208.1.1.num.int <66 (0x42)>
  [7] #207.1.1.num.int <65 (0x41)>
  [8] #206.1.1.num.int <10 (0xa)>
  [9] #205.1.1.num.int <172 (0xac)>
  [10] #204.1.1.num.int <130 (0x82)>
  [11] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x5c, type 6, 93[1]
GC: ++#197.1.4.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.5.mem.ro, ip 0x5e (0x5c), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #229.1.1.mem.code.ro <#197.1.5.mem.ro, ofs 0x5d, size 1>
  [1] #228.1.1.hash <size 3, max 3>
  [2] #218.1.1.num.int <30 (0x1e)>
  [3] #217.1.1.num.int <20 (0x14)>
  [4] #216.1.1.num.int <10 (0xa)>
  [5] #210.1.1.num.int <51 (0x33)>
  [6] #209.1.1.num.int <50 (0x32)>
  [7] #208.1.1.num.int <66 (0x42)>
  [8] #207.1.1.num.int <65 (0x41)>
  [9] #206.1.1.num.int <10 (0xa)>
  [10] #205.1.1.num.int <172 (0xac)>
  [11] #204.1.1.num.int <130 (0x82)>
  [12] #202.1.1.num.int <226 (0xe2)>
IP: #197:0x5e, type 8, 95[6]
GC: ++#222.1.1.mem.str.ro
GC: ++#223.1.1.num.int
GC: ++#229.1.1.mem.code.ro
GC: ++#228.1.1.hash
GC: --#229.1.2.mem.code.ro
GC: --#228.1.2.hash
== backtrace ==
  [0] #230.1.1.ctx.forall <code #229.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #228.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.5.mem.ro, ip 0x65 (0x5e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #223.1.2.num.int <100 (0x64)>
  [1] #222.1.2.mem.str.ro <#197.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [2] #218.1.1.num.int <30 (0x1e)>
  [3] #217.1.1.num.int <20 (0x14)>
  [4] #216.1.1.num.int <10 (0xa)>
  [5] #210.1.1.num.int <51 (0x33)>
  [6] #209.1.1.num.int <50 (0x32)>
  [7] #208.1.1.num.int <66 (0x42)>
  [8] #207.1.1.num.int <65 (0x41)>
  [9] #206.1.1.num.int <10 (0xa)>
  [10] #205.1.1.num.int <172 (0xac)>
  [11] #204.1.1.num.int <130 (0x82)>
  [12] #202.1.1.num.int <226 (0xe2)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#224.1.1.mem.str.ro
GC: ++#225.1.1.num.int
== backtrace ==
  [0] #230.1.1.ctx.forall <code #229.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #228.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.5.mem.ro, ip 0x65 (0x5e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #225.1.2.num.int <200 (0xc8)>
  [1] #224.1.2.mem.str.ro <#197.1.5.mem.ro, ofs 0x4f, size 2, "bb">
  [2] #223.1.2.num.int <100 (0x64)>
  [3] #222.1.2.mem.str.ro <#197.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [4] #218.1.1.num.int <30 (0x1e)>
  [5] #217.1.1.num.int <20 (0x14)>
  [6] #216.1.1.num.int <10 (0xa)>
  [7] #210.1.1.num.int <51 (0x33)>
  [8] #209.1.1.num.int <50 (0x32)>
  [9] #208.1.1.num.int <66 (0x42)>
  [10] #207.1.1.num.int <65 (0x41)>
  [11] #206.1.1.num.int <10 (0xa)>
  [12] #205.1.1.num.int <172 (0xac)>
  [13] #204.1.1.num.int <130 (0x82)>
  [14] #202.1.1.num.int <226 (0xe2)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#226.1.1.mem.str.ro
GC: ++#227.1.1.num.int
== backtrace ==
  [0] #230.1.1.ctx.forall <code #229.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #228.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.5.mem.ro, ip 0x65 (0x5e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #227.1.2.num.int <300 (0x12c)>
  [1] #226.1.2.mem.str.ro <#197.1.5.mem.ro, ofs 0x55, size 2, "cc">
  [2] #225.1.2.num.int <200 (0xc8)>
  [3] #224.1.2.mem.str.ro <#197.1.5.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #223.1.2.num.int <100 (0x64)>
  [5] #222.1.2.mem.str.ro <#197.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #218.1.1.num.int <30 (0x1e)>
  [7] #217.1.1.num.int <20 (0x14)>
  [8] #216.1.1.num.int <10 (0xa)>
  [9] #210.1.1.num.int <51 (0x33)>
  [10] #209.1.1.num.int <50 (0x32)>
  [11] #208.1.1.num.int <66 (0x42)>
  [12] #207.1.1.num.int <65 (0x41)>
  [13] #206.1.1.num.int <10 (0xa)>
  [14] #205.1.1.num.int <172 (0xac)>
  [15] #204.1.1.num.int <130 (0x82)>
  [16] #202.1.1.num.int <226 (0xe2)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#230.1.1.ctx.forall
GC: --#199.1.2.ctx.func
GC: --#229.1.1.mem.code.ro
GC: --#228.1.1.hash
GC: --#197.1.5.mem.ro
GC: --#222.1.2.mem.str.ro
GC: --#223.1.2.num.int
GC: --#224.1.2.mem.str.ro
GC: --#225.1.2.num.int
GC: --#226.1.2.mem.str.ro
GC: --#227.1.2.num.int
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.4.mem.ro, ip 0x65 (0x5e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #227.1.1.num.int <300 (0x12c)>
  [1] #226.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [2] #225.1.1.num.int <200 (0xc8)>
  [3] #224.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #223.1.1.num.int <100 (0x64)>
  [5] #222.1.1.mem.str.ro <#197.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #218.1.1.num.int <30 (0x1e)>
  [7] #217.1.1.num.int <20 (0x14)>
  [8] #216.1.1.num.int <10 (0xa)>
  [9] #210.1.1.num.int <51 (0x33)>
  [10] #209.1.1.num.int <50 (0x32)>
  [11] #208.1.1.num.int <66 (0x42)>
  [12] #207.1.1.num.int <65 (0x41)>
  [13] #206.1.1.num.int <10 (0xa)>
  [14] #205.1.1.num.int <172 (0xac)>
  [15] #204.1.1.num.int <130 (0x82)>
  [16] #202.1.1.num.int <226 (0xe2)>
