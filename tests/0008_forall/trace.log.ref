# ---  trace  ---
IP: #188:0x0, type 5, 1[7]
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
IP: #188:0x8, type 7, 9[8]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x11 (0x8), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #191.1.1.mem.str.ro <#188.1.2.mem.ro, ofs 0x9, size 8, "€ AB23">
IP: #188:0x11, type 6, 18[1]
GC: ++#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x13 (0x11), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #192.1.1.mem.code.ro <#188.1.3.mem.ro, ofs 0x12, size 1>
  [1] #191.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0x9, size 8, "€ AB23">
IP: #188:0x13, type 8, 20[6]
GC: ++#192.1.1.mem.code.ro
GC: ++#191.1.1.mem.str.ro
GC: --#192.1.2.mem.code.ro
GC: --#191.1.2.mem.str.ro
== backtrace ==
  [0] #194.1.1.ctx.forall <code #192.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #191.1.1.mem.str.ro>
  [1] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #193.1.1.num.int <226 (0xe2)>
IP: #192:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #194.1.1.ctx.forall <code #192.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #191.1.1.mem.str.ro>
  [1] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #195.1.1.num.int <130 (0x82)>
  [1] #193.1.1.num.int <226 (0xe2)>
IP: #192:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #194.1.1.ctx.forall <code #192.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #191.1.1.mem.str.ro>
  [1] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #196.1.1.num.int <172 (0xac)>
  [1] #195.1.1.num.int <130 (0x82)>
  [2] #193.1.1.num.int <226 (0xe2)>
IP: #192:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #194.1.1.ctx.forall <code #192.1.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #191.1.1.mem.str.ro>
  [1] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #197.1.1.num.int <10 (0xa)>
  [1] #196.1.1.num.int <172 (0xac)>
  [2] #195.1.1.num.int <130 (0x82)>
  [3] #193.1.1.num.int <226 (0xe2)>
IP: #192:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #194.1.1.ctx.forall <code #192.1.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #191.1.1.mem.str.ro>
  [1] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.1.num.int <65 (0x41)>
  [1] #197.1.1.num.int <10 (0xa)>
  [2] #196.1.1.num.int <172 (0xac)>
  [3] #195.1.1.num.int <130 (0x82)>
  [4] #193.1.1.num.int <226 (0xe2)>
IP: #192:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #194.1.1.ctx.forall <code #192.1.1.mem.code.ro, ip 0x0 (0x0), index 6, iterate #191.1.1.mem.str.ro>
  [1] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #199.1.1.num.int <66 (0x42)>
  [1] #198.1.1.num.int <65 (0x41)>
  [2] #197.1.1.num.int <10 (0xa)>
  [3] #196.1.1.num.int <172 (0xac)>
  [4] #195.1.1.num.int <130 (0x82)>
  [5] #193.1.1.num.int <226 (0xe2)>
IP: #192:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #194.1.1.ctx.forall <code #192.1.1.mem.code.ro, ip 0x0 (0x0), index 7, iterate #191.1.1.mem.str.ro>
  [1] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #200.1.1.num.int <50 (0x32)>
  [1] #199.1.1.num.int <66 (0x42)>
  [2] #198.1.1.num.int <65 (0x41)>
  [3] #197.1.1.num.int <10 (0xa)>
  [4] #196.1.1.num.int <172 (0xac)>
  [5] #195.1.1.num.int <130 (0x82)>
  [6] #193.1.1.num.int <226 (0xe2)>
IP: #192:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #194.1.1.ctx.forall <code #192.1.1.mem.code.ro, ip 0x0 (0x0), index 8, iterate #191.1.1.mem.str.ro>
  [1] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #201.1.1.num.int <51 (0x33)>
  [1] #200.1.1.num.int <50 (0x32)>
  [2] #199.1.1.num.int <66 (0x42)>
  [3] #198.1.1.num.int <65 (0x41)>
  [4] #197.1.1.num.int <10 (0xa)>
  [5] #196.1.1.num.int <172 (0xac)>
  [6] #195.1.1.num.int <130 (0x82)>
  [7] #193.1.1.num.int <226 (0xe2)>
IP: #192:0x0, type 3, 1 (0x1)
GC: ++#190.1.1.ctx.func
GC: --#194.1.1.ctx.forall
GC: --#190.1.2.ctx.func
GC: --#192.1.1.mem.code.ro
GC: --#191.1.1.mem.str.ro
GC: --#188.1.3.mem.ro
GC: --#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x1a (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #201.1.1.num.int <51 (0x33)>
  [1] #200.1.1.num.int <50 (0x32)>
  [2] #199.1.1.num.int <66 (0x42)>
  [3] #198.1.1.num.int <65 (0x41)>
  [4] #197.1.1.num.int <10 (0xa)>
  [5] #196.1.1.num.int <172 (0xac)>
  [6] #195.1.1.num.int <130 (0x82)>
  [7] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x1a, type 8, 27[1]
GC: ++#9.1.1.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x1c (0x1a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #9.1.2.num.prim <2 (0x2)>
  [1] #201.1.1.num.int <51 (0x33)>
  [2] #200.1.1.num.int <50 (0x32)>
  [3] #199.1.1.num.int <66 (0x42)>
  [4] #198.1.1.num.int <65 (0x41)>
  [5] #197.1.1.num.int <10 (0xa)>
  [6] #196.1.1.num.int <172 (0xac)>
  [7] #195.1.1.num.int <130 (0x82)>
  [8] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x1c, type 8, 29[1]
GC: --#9.1.2.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x1e (0x1c), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #203.1.1.array <size 0, max 16>
  [1] #201.1.1.num.int <51 (0x33)>
  [2] #200.1.1.num.int <50 (0x32)>
  [3] #199.1.1.num.int <66 (0x42)>
  [4] #198.1.1.num.int <65 (0x41)>
  [5] #197.1.1.num.int <10 (0xa)>
  [6] #196.1.1.num.int <172 (0xac)>
  [7] #195.1.1.num.int <130 (0x82)>
  [8] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x1e, type 6, 31[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x20 (0x1e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #204.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x1f, size 1>
  [1] #203.1.1.array <size 0, max 16>
  [2] #201.1.1.num.int <51 (0x33)>
  [3] #200.1.1.num.int <50 (0x32)>
  [4] #199.1.1.num.int <66 (0x42)>
  [5] #198.1.1.num.int <65 (0x41)>
  [6] #197.1.1.num.int <10 (0xa)>
  [7] #196.1.1.num.int <172 (0xac)>
  [8] #195.1.1.num.int <130 (0x82)>
  [9] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x20, type 8, 33[6]
GC: --#204.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
GC: --#203.1.1.array
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x27 (0x20), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #201.1.1.num.int <51 (0x33)>
  [1] #200.1.1.num.int <50 (0x32)>
  [2] #199.1.1.num.int <66 (0x42)>
  [3] #198.1.1.num.int <65 (0x41)>
  [4] #197.1.1.num.int <10 (0xa)>
  [5] #196.1.1.num.int <172 (0xac)>
  [6] #195.1.1.num.int <130 (0x82)>
  [7] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x27, type 8, 40[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x29 (0x27), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #201.1.1.num.int <51 (0x33)>
  [2] #200.1.1.num.int <50 (0x32)>
  [3] #199.1.1.num.int <66 (0x42)>
  [4] #198.1.1.num.int <65 (0x41)>
  [5] #197.1.1.num.int <10 (0xa)>
  [6] #196.1.1.num.int <172 (0xac)>
  [7] #195.1.1.num.int <130 (0x82)>
  [8] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x29, type 8, 42[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x2b (0x29), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #205.1.1.hash <size 0, max 16>
  [1] #201.1.1.num.int <51 (0x33)>
  [2] #200.1.1.num.int <50 (0x32)>
  [3] #199.1.1.num.int <66 (0x42)>
  [4] #198.1.1.num.int <65 (0x41)>
  [5] #197.1.1.num.int <10 (0xa)>
  [6] #196.1.1.num.int <172 (0xac)>
  [7] #195.1.1.num.int <130 (0x82)>
  [8] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x2b, type 6, 44[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x2d (0x2b), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #206.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x2c, size 1>
  [1] #205.1.1.hash <size 0, max 16>
  [2] #201.1.1.num.int <51 (0x33)>
  [3] #200.1.1.num.int <50 (0x32)>
  [4] #199.1.1.num.int <66 (0x42)>
  [5] #198.1.1.num.int <65 (0x41)>
  [6] #197.1.1.num.int <10 (0xa)>
  [7] #196.1.1.num.int <172 (0xac)>
  [8] #195.1.1.num.int <130 (0x82)>
  [9] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x2d, type 8, 46[6]
GC: --#206.1.1.mem.code.ro
GC: --#188.1.2.mem.ro
GC: --#205.1.1.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x34 (0x2d), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #201.1.1.num.int <51 (0x33)>
  [1] #200.1.1.num.int <50 (0x32)>
  [2] #199.1.1.num.int <66 (0x42)>
  [3] #198.1.1.num.int <65 (0x41)>
  [4] #197.1.1.num.int <10 (0xa)>
  [5] #196.1.1.num.int <172 (0xac)>
  [6] #195.1.1.num.int <130 (0x82)>
  [7] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x34, type 8, 53[1]
GC: ++#9.1.1.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x36 (0x34), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #9.1.2.num.prim <2 (0x2)>
  [1] #201.1.1.num.int <51 (0x33)>
  [2] #200.1.1.num.int <50 (0x32)>
  [3] #199.1.1.num.int <66 (0x42)>
  [4] #198.1.1.num.int <65 (0x41)>
  [5] #197.1.1.num.int <10 (0xa)>
  [6] #196.1.1.num.int <172 (0xac)>
  [7] #195.1.1.num.int <130 (0x82)>
  [8] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x36, type 1, 10 (0xa)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x38 (0x36), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #207.1.1.num.int <10 (0xa)>
  [1] #9.1.2.num.prim <2 (0x2)>
  [2] #201.1.1.num.int <51 (0x33)>
  [3] #200.1.1.num.int <50 (0x32)>
  [4] #199.1.1.num.int <66 (0x42)>
  [5] #198.1.1.num.int <65 (0x41)>
  [6] #197.1.1.num.int <10 (0xa)>
  [7] #196.1.1.num.int <172 (0xac)>
  [8] #195.1.1.num.int <130 (0x82)>
  [9] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x38, type 1, 20 (0x14)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x3a (0x38), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #208.1.1.num.int <20 (0x14)>
  [1] #207.1.1.num.int <10 (0xa)>
  [2] #9.1.2.num.prim <2 (0x2)>
  [3] #201.1.1.num.int <51 (0x33)>
  [4] #200.1.1.num.int <50 (0x32)>
  [5] #199.1.1.num.int <66 (0x42)>
  [6] #198.1.1.num.int <65 (0x41)>
  [7] #197.1.1.num.int <10 (0xa)>
  [8] #196.1.1.num.int <172 (0xac)>
  [9] #195.1.1.num.int <130 (0x82)>
  [10] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x3a, type 1, 30 (0x1e)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x3c (0x3a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #209.1.1.num.int <30 (0x1e)>
  [1] #208.1.1.num.int <20 (0x14)>
  [2] #207.1.1.num.int <10 (0xa)>
  [3] #9.1.2.num.prim <2 (0x2)>
  [4] #201.1.1.num.int <51 (0x33)>
  [5] #200.1.1.num.int <50 (0x32)>
  [6] #199.1.1.num.int <66 (0x42)>
  [7] #198.1.1.num.int <65 (0x41)>
  [8] #197.1.1.num.int <10 (0xa)>
  [9] #196.1.1.num.int <172 (0xac)>
  [10] #195.1.1.num.int <130 (0x82)>
  [11] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x3c, type 8, 61[1]
GC: --#9.1.2.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x3e (0x3c), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #210.1.1.array <size 3, max 3>
  [1] #201.1.1.num.int <51 (0x33)>
  [2] #200.1.1.num.int <50 (0x32)>
  [3] #199.1.1.num.int <66 (0x42)>
  [4] #198.1.1.num.int <65 (0x41)>
  [5] #197.1.1.num.int <10 (0xa)>
  [6] #196.1.1.num.int <172 (0xac)>
  [7] #195.1.1.num.int <130 (0x82)>
  [8] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x3e, type 6, 63[1]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x40 (0x3e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #211.1.1.mem.code.ro <#188.1.2.mem.ro, ofs 0x3f, size 1>
  [1] #210.1.1.array <size 3, max 3>
  [2] #201.1.1.num.int <51 (0x33)>
  [3] #200.1.1.num.int <50 (0x32)>
  [4] #199.1.1.num.int <66 (0x42)>
  [5] #198.1.1.num.int <65 (0x41)>
  [6] #197.1.1.num.int <10 (0xa)>
  [7] #196.1.1.num.int <172 (0xac)>
  [8] #195.1.1.num.int <130 (0x82)>
  [9] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x40, type 8, 65[6]
GC: ++#207.1.1.num.int
GC: ++#211.1.1.mem.code.ro
GC: ++#210.1.1.array
GC: --#211.1.2.mem.code.ro
GC: --#210.1.2.array
== backtrace ==
  [0] #212.1.1.ctx.forall <code #211.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #210.1.1.array>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x47 (0x40), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #207.1.2.num.int <10 (0xa)>
  [1] #201.1.1.num.int <51 (0x33)>
  [2] #200.1.1.num.int <50 (0x32)>
  [3] #199.1.1.num.int <66 (0x42)>
  [4] #198.1.1.num.int <65 (0x41)>
  [5] #197.1.1.num.int <10 (0xa)>
  [6] #196.1.1.num.int <172 (0xac)>
  [7] #195.1.1.num.int <130 (0x82)>
  [8] #193.1.1.num.int <226 (0xe2)>
IP: #211:0x0, type 3, 1 (0x1)
GC: ++#208.1.1.num.int
== backtrace ==
  [0] #212.1.1.ctx.forall <code #211.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #210.1.1.array>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x47 (0x40), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #208.1.2.num.int <20 (0x14)>
  [1] #207.1.2.num.int <10 (0xa)>
  [2] #201.1.1.num.int <51 (0x33)>
  [3] #200.1.1.num.int <50 (0x32)>
  [4] #199.1.1.num.int <66 (0x42)>
  [5] #198.1.1.num.int <65 (0x41)>
  [6] #197.1.1.num.int <10 (0xa)>
  [7] #196.1.1.num.int <172 (0xac)>
  [8] #195.1.1.num.int <130 (0x82)>
  [9] #193.1.1.num.int <226 (0xe2)>
IP: #211:0x0, type 3, 1 (0x1)
GC: ++#209.1.1.num.int
== backtrace ==
  [0] #212.1.1.ctx.forall <code #211.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #210.1.1.array>
  [1] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x47 (0x40), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #209.1.2.num.int <30 (0x1e)>
  [1] #208.1.2.num.int <20 (0x14)>
  [2] #207.1.2.num.int <10 (0xa)>
  [3] #201.1.1.num.int <51 (0x33)>
  [4] #200.1.1.num.int <50 (0x32)>
  [5] #199.1.1.num.int <66 (0x42)>
  [6] #198.1.1.num.int <65 (0x41)>
  [7] #197.1.1.num.int <10 (0xa)>
  [8] #196.1.1.num.int <172 (0xac)>
  [9] #195.1.1.num.int <130 (0x82)>
  [10] #193.1.1.num.int <226 (0xe2)>
IP: #211:0x0, type 3, 1 (0x1)
GC: ++#190.1.1.ctx.func
GC: --#212.1.1.ctx.forall
GC: --#190.1.2.ctx.func
GC: --#211.1.1.mem.code.ro
GC: --#210.1.1.array
GC: --#188.1.2.mem.ro
GC: --#207.1.2.num.int
GC: --#208.1.2.num.int
GC: --#209.1.2.num.int
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x47 (0x40), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #209.1.1.num.int <30 (0x1e)>
  [1] #208.1.1.num.int <20 (0x14)>
  [2] #207.1.1.num.int <10 (0xa)>
  [3] #201.1.1.num.int <51 (0x33)>
  [4] #200.1.1.num.int <50 (0x32)>
  [5] #199.1.1.num.int <66 (0x42)>
  [6] #198.1.1.num.int <65 (0x41)>
  [7] #197.1.1.num.int <10 (0xa)>
  [8] #196.1.1.num.int <172 (0xac)>
  [9] #195.1.1.num.int <130 (0x82)>
  [10] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x47, type 8, 72[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x49 (0x47), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #209.1.1.num.int <30 (0x1e)>
  [2] #208.1.1.num.int <20 (0x14)>
  [3] #207.1.1.num.int <10 (0xa)>
  [4] #201.1.1.num.int <51 (0x33)>
  [5] #200.1.1.num.int <50 (0x32)>
  [6] #199.1.1.num.int <66 (0x42)>
  [7] #198.1.1.num.int <65 (0x41)>
  [8] #197.1.1.num.int <10 (0xa)>
  [9] #196.1.1.num.int <172 (0xac)>
  [10] #195.1.1.num.int <130 (0x82)>
  [11] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x49, type 7, 74[2]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x4c (0x49), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #213.1.1.mem.str.ro <#188.1.2.mem.ro, ofs 0x4a, size 2, "aa">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #209.1.1.num.int <30 (0x1e)>
  [3] #208.1.1.num.int <20 (0x14)>
  [4] #207.1.1.num.int <10 (0xa)>
  [5] #201.1.1.num.int <51 (0x33)>
  [6] #200.1.1.num.int <50 (0x32)>
  [7] #199.1.1.num.int <66 (0x42)>
  [8] #198.1.1.num.int <65 (0x41)>
  [9] #197.1.1.num.int <10 (0xa)>
  [10] #196.1.1.num.int <172 (0xac)>
  [11] #195.1.1.num.int <130 (0x82)>
  [12] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x4c, type 1, 100 (0x64)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0x4e (0x4c), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #214.1.1.num.int <100 (0x64)>
  [1] #213.1.1.mem.str.ro <#188.1.2.mem.ro, ofs 0x4a, size 2, "aa">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #209.1.1.num.int <30 (0x1e)>
  [4] #208.1.1.num.int <20 (0x14)>
  [5] #207.1.1.num.int <10 (0xa)>
  [6] #201.1.1.num.int <51 (0x33)>
  [7] #200.1.1.num.int <50 (0x32)>
  [8] #199.1.1.num.int <66 (0x42)>
  [9] #198.1.1.num.int <65 (0x41)>
  [10] #197.1.1.num.int <10 (0xa)>
  [11] #196.1.1.num.int <172 (0xac)>
  [12] #195.1.1.num.int <130 (0x82)>
  [13] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x4e, type 7, 79[2]
GC: ++#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x51 (0x4e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #215.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0x4f, size 2, "bb">
  [1] #214.1.1.num.int <100 (0x64)>
  [2] #213.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0x4a, size 2, "aa">
  [3] #13.1.2.num.prim <4 (0x4)>
  [4] #209.1.1.num.int <30 (0x1e)>
  [5] #208.1.1.num.int <20 (0x14)>
  [6] #207.1.1.num.int <10 (0xa)>
  [7] #201.1.1.num.int <51 (0x33)>
  [8] #200.1.1.num.int <50 (0x32)>
  [9] #199.1.1.num.int <66 (0x42)>
  [10] #198.1.1.num.int <65 (0x41)>
  [11] #197.1.1.num.int <10 (0xa)>
  [12] #196.1.1.num.int <172 (0xac)>
  [13] #195.1.1.num.int <130 (0x82)>
  [14] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x51, type 1, 200 (0xc8)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x54 (0x51), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #216.1.1.num.int <200 (0xc8)>
  [1] #215.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0x4f, size 2, "bb">
  [2] #214.1.1.num.int <100 (0x64)>
  [3] #213.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0x4a, size 2, "aa">
  [4] #13.1.2.num.prim <4 (0x4)>
  [5] #209.1.1.num.int <30 (0x1e)>
  [6] #208.1.1.num.int <20 (0x14)>
  [7] #207.1.1.num.int <10 (0xa)>
  [8] #201.1.1.num.int <51 (0x33)>
  [9] #200.1.1.num.int <50 (0x32)>
  [10] #199.1.1.num.int <66 (0x42)>
  [11] #198.1.1.num.int <65 (0x41)>
  [12] #197.1.1.num.int <10 (0xa)>
  [13] #196.1.1.num.int <172 (0xac)>
  [14] #195.1.1.num.int <130 (0x82)>
  [15] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x54, type 7, 85[2]
GC: ++#188.1.3.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.4.mem.ro, ip 0x57 (0x54), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #217.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [1] #216.1.1.num.int <200 (0xc8)>
  [2] #215.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [3] #214.1.1.num.int <100 (0x64)>
  [4] #213.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [5] #13.1.2.num.prim <4 (0x4)>
  [6] #209.1.1.num.int <30 (0x1e)>
  [7] #208.1.1.num.int <20 (0x14)>
  [8] #207.1.1.num.int <10 (0xa)>
  [9] #201.1.1.num.int <51 (0x33)>
  [10] #200.1.1.num.int <50 (0x32)>
  [11] #199.1.1.num.int <66 (0x42)>
  [12] #198.1.1.num.int <65 (0x41)>
  [13] #197.1.1.num.int <10 (0xa)>
  [14] #196.1.1.num.int <172 (0xac)>
  [15] #195.1.1.num.int <130 (0x82)>
  [16] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x57, type 1, 300 (0x12c)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.4.mem.ro, ip 0x5a (0x57), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #218.1.1.num.int <300 (0x12c)>
  [1] #217.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [2] #216.1.1.num.int <200 (0xc8)>
  [3] #215.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #214.1.1.num.int <100 (0x64)>
  [5] #213.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #13.1.2.num.prim <4 (0x4)>
  [7] #209.1.1.num.int <30 (0x1e)>
  [8] #208.1.1.num.int <20 (0x14)>
  [9] #207.1.1.num.int <10 (0xa)>
  [10] #201.1.1.num.int <51 (0x33)>
  [11] #200.1.1.num.int <50 (0x32)>
  [12] #199.1.1.num.int <66 (0x42)>
  [13] #198.1.1.num.int <65 (0x41)>
  [14] #197.1.1.num.int <10 (0xa)>
  [15] #196.1.1.num.int <172 (0xac)>
  [16] #195.1.1.num.int <130 (0x82)>
  [17] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x5a, type 8, 91[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.4.mem.ro, ip 0x5c (0x5a), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #219.1.1.hash <size 3, max 3>
  [1] #209.1.1.num.int <30 (0x1e)>
  [2] #208.1.1.num.int <20 (0x14)>
  [3] #207.1.1.num.int <10 (0xa)>
  [4] #201.1.1.num.int <51 (0x33)>
  [5] #200.1.1.num.int <50 (0x32)>
  [6] #199.1.1.num.int <66 (0x42)>
  [7] #198.1.1.num.int <65 (0x41)>
  [8] #197.1.1.num.int <10 (0xa)>
  [9] #196.1.1.num.int <172 (0xac)>
  [10] #195.1.1.num.int <130 (0x82)>
  [11] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x5c, type 6, 93[1]
GC: ++#188.1.4.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x5e (0x5c), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #220.1.1.mem.code.ro <#188.1.5.mem.ro, ofs 0x5d, size 1>
  [1] #219.1.1.hash <size 3, max 3>
  [2] #209.1.1.num.int <30 (0x1e)>
  [3] #208.1.1.num.int <20 (0x14)>
  [4] #207.1.1.num.int <10 (0xa)>
  [5] #201.1.1.num.int <51 (0x33)>
  [6] #200.1.1.num.int <50 (0x32)>
  [7] #199.1.1.num.int <66 (0x42)>
  [8] #198.1.1.num.int <65 (0x41)>
  [9] #197.1.1.num.int <10 (0xa)>
  [10] #196.1.1.num.int <172 (0xac)>
  [11] #195.1.1.num.int <130 (0x82)>
  [12] #193.1.1.num.int <226 (0xe2)>
IP: #188:0x5e, type 8, 95[6]
GC: ++#213.1.1.mem.str.ro
GC: ++#214.1.1.num.int
GC: ++#220.1.1.mem.code.ro
GC: ++#219.1.1.hash
GC: --#220.1.2.mem.code.ro
GC: --#219.1.2.hash
== backtrace ==
  [0] #221.1.1.ctx.forall <code #220.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #219.1.1.hash>
  [1] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x65 (0x5e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #214.1.2.num.int <100 (0x64)>
  [1] #213.1.2.mem.str.ro <#188.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [2] #209.1.1.num.int <30 (0x1e)>
  [3] #208.1.1.num.int <20 (0x14)>
  [4] #207.1.1.num.int <10 (0xa)>
  [5] #201.1.1.num.int <51 (0x33)>
  [6] #200.1.1.num.int <50 (0x32)>
  [7] #199.1.1.num.int <66 (0x42)>
  [8] #198.1.1.num.int <65 (0x41)>
  [9] #197.1.1.num.int <10 (0xa)>
  [10] #196.1.1.num.int <172 (0xac)>
  [11] #195.1.1.num.int <130 (0x82)>
  [12] #193.1.1.num.int <226 (0xe2)>
IP: #220:0x0, type 3, 1 (0x1)
GC: ++#215.1.1.mem.str.ro
GC: ++#216.1.1.num.int
== backtrace ==
  [0] #221.1.1.ctx.forall <code #220.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #219.1.1.hash>
  [1] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x65 (0x5e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #216.1.2.num.int <200 (0xc8)>
  [1] #215.1.2.mem.str.ro <#188.1.5.mem.ro, ofs 0x4f, size 2, "bb">
  [2] #214.1.2.num.int <100 (0x64)>
  [3] #213.1.2.mem.str.ro <#188.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [4] #209.1.1.num.int <30 (0x1e)>
  [5] #208.1.1.num.int <20 (0x14)>
  [6] #207.1.1.num.int <10 (0xa)>
  [7] #201.1.1.num.int <51 (0x33)>
  [8] #200.1.1.num.int <50 (0x32)>
  [9] #199.1.1.num.int <66 (0x42)>
  [10] #198.1.1.num.int <65 (0x41)>
  [11] #197.1.1.num.int <10 (0xa)>
  [12] #196.1.1.num.int <172 (0xac)>
  [13] #195.1.1.num.int <130 (0x82)>
  [14] #193.1.1.num.int <226 (0xe2)>
IP: #220:0x0, type 3, 1 (0x1)
GC: ++#217.1.1.mem.str.ro
GC: ++#218.1.1.num.int
== backtrace ==
  [0] #221.1.1.ctx.forall <code #220.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #219.1.1.hash>
  [1] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x65 (0x5e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #218.1.2.num.int <300 (0x12c)>
  [1] #217.1.2.mem.str.ro <#188.1.5.mem.ro, ofs 0x55, size 2, "cc">
  [2] #216.1.2.num.int <200 (0xc8)>
  [3] #215.1.2.mem.str.ro <#188.1.5.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #214.1.2.num.int <100 (0x64)>
  [5] #213.1.2.mem.str.ro <#188.1.5.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #209.1.1.num.int <30 (0x1e)>
  [7] #208.1.1.num.int <20 (0x14)>
  [8] #207.1.1.num.int <10 (0xa)>
  [9] #201.1.1.num.int <51 (0x33)>
  [10] #200.1.1.num.int <50 (0x32)>
  [11] #199.1.1.num.int <66 (0x42)>
  [12] #198.1.1.num.int <65 (0x41)>
  [13] #197.1.1.num.int <10 (0xa)>
  [14] #196.1.1.num.int <172 (0xac)>
  [15] #195.1.1.num.int <130 (0x82)>
  [16] #193.1.1.num.int <226 (0xe2)>
IP: #220:0x0, type 3, 1 (0x1)
GC: ++#190.1.1.ctx.func
GC: --#221.1.1.ctx.forall
GC: --#190.1.2.ctx.func
GC: --#220.1.1.mem.code.ro
GC: --#219.1.1.hash
GC: --#188.1.5.mem.ro
GC: --#213.1.2.mem.str.ro
GC: --#214.1.2.num.int
GC: --#215.1.2.mem.str.ro
GC: --#216.1.2.num.int
GC: --#217.1.2.mem.str.ro
GC: --#218.1.2.num.int
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.4.mem.ro, ip 0x65 (0x5e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #218.1.1.num.int <300 (0x12c)>
  [1] #217.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x55, size 2, "cc">
  [2] #216.1.1.num.int <200 (0xc8)>
  [3] #215.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x4f, size 2, "bb">
  [4] #214.1.1.num.int <100 (0x64)>
  [5] #213.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x4a, size 2, "aa">
  [6] #209.1.1.num.int <30 (0x1e)>
  [7] #208.1.1.num.int <20 (0x14)>
  [8] #207.1.1.num.int <10 (0xa)>
  [9] #201.1.1.num.int <51 (0x33)>
  [10] #200.1.1.num.int <50 (0x32)>
  [11] #199.1.1.num.int <66 (0x42)>
  [12] #198.1.1.num.int <65 (0x41)>
  [13] #197.1.1.num.int <10 (0xa)>
  [14] #196.1.1.num.int <172 (0xac)>
  [15] #195.1.1.num.int <130 (0x82)>
  [16] #193.1.1.num.int <226 (0xe2)>
