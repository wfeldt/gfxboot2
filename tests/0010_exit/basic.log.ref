# ---  trace  ---
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.2.mem.ro, "foo">
GC: ++#xxxx.1.2.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.3.mem.ro>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.3.mem.ro, "foo">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.3.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.4.mem.ro>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
== backtrace ==
  [0] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.bool <1 (0x1)>
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.5.mem.ro>
  [1] #xxxx.1.1.num.bool <1 (0x1)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.1.num.bool
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.block
GC: --#xxxx.1.1.ctx.loop
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.5.mem.ro
GC: --#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <2 (0x2)>
  [1] #xxxx.1.1.num.int <20 (0x14)>
  [2] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.3.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.4.mem.ro>
  [1] #xxxx.1.1.num.int <2 (0x2)>
  [2] #xxxx.1.1.num.int <20 (0x14)>
  [3] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.1.num.int
== backtrace ==
  [0] #xxxx.1.1.ctx.repeat <code #xxxx.1.1.mem.code.ro, index 2>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.repeat <code #xxxx.1.1.mem.code.ro, index 2>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.bool <1 (0x1)>
  [1] #xxxx.1.1.num.int <20 (0x14)>
  [2] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.repeat <code #xxxx.1.1.mem.code.ro, index 2>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.5.mem.ro>
  [1] #xxxx.1.1.num.bool <1 (0x1)>
  [2] #xxxx.1.1.num.int <20 (0x14)>
  [3] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.1.num.bool
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.repeat <code #xxxx.1.1.mem.code.ro, index 2>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.repeat <code #xxxx.1.1.mem.code.ro, index 2>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <100 (0x64)>
  [1] #xxxx.1.1.num.int <20 (0x14)>
  [2] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.repeat <code #xxxx.1.1.mem.code.ro, index 2>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <200 (0xc8)>
  [1] #xxxx.1.1.num.int <100 (0x64)>
  [2] #xxxx.1.1.num.int <20 (0x14)>
  [3] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.block
GC: --#xxxx.1.1.ctx.repeat
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.5.mem.ro
GC: --#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <200 (0xc8)>
  [1] #xxxx.1.1.num.int <100 (0x64)>
  [2] #xxxx.1.1.num.int <20 (0x14)>
  [3] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <1000 (0x3e8)>
  [1] #xxxx.1.1.num.int <200 (0xc8)>
  [2] #xxxx.1.1.num.int <100 (0x64)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <2000 (0x7d0)>
  [1] #xxxx.1.1.num.int <1000 (0x3e8)>
  [2] #xxxx.1.1.num.int <200 (0xc8)>
  [3] #xxxx.1.1.num.int <100 (0x64)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <5000 (0x1388)>
  [1] #xxxx.1.1.num.int <2000 (0x7d0)>
  [2] #xxxx.1.1.num.int <1000 (0x3e8)>
  [3] #xxxx.1.1.num.int <200 (0xc8)>
  [4] #xxxx.1.1.num.int <100 (0x64)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.3.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.4.mem.ro>
  [1] #xxxx.1.1.num.int <5000 (0x1388)>
  [2] #xxxx.1.1.num.int <2000 (0x7d0)>
  [3] #xxxx.1.1.num.int <1000 (0x3e8)>
  [4] #xxxx.1.1.num.int <200 (0xc8)>
  [5] #xxxx.1.1.num.int <100 (0x64)>
  [6] #xxxx.1.1.num.int <20 (0x14)>
  [7] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.1.num.int
GC: --#xxxx.1.1.num.int
== backtrace ==
  [0] #xxxx.1.1.ctx.for <code #xxxx.1.1.mem.code.ro, index 1000, inc 2000, max 5000>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <1000 (0x3e8)>
  [1] #xxxx.1.1.num.int <200 (0xc8)>
  [2] #xxxx.1.1.num.int <100 (0x64)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.for <code #xxxx.1.1.mem.code.ro, index 1000, inc 2000, max 5000>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.bool <1 (0x1)>
  [1] #xxxx.1.1.num.int <1000 (0x3e8)>
  [2] #xxxx.1.1.num.int <200 (0xc8)>
  [3] #xxxx.1.1.num.int <100 (0x64)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.for <code #xxxx.1.1.mem.code.ro, index 1000, inc 2000, max 5000>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.5.mem.ro>
  [1] #xxxx.1.1.num.bool <1 (0x1)>
  [2] #xxxx.1.1.num.int <1000 (0x3e8)>
  [3] #xxxx.1.1.num.int <200 (0xc8)>
  [4] #xxxx.1.1.num.int <100 (0x64)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.1.num.bool
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.for <code #xxxx.1.1.mem.code.ro, index 1000, inc 2000, max 5000>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <1000 (0x3e8)>
  [1] #xxxx.1.1.num.int <200 (0xc8)>
  [2] #xxxx.1.1.num.int <100 (0x64)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.block
GC: --#xxxx.1.1.ctx.for
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.5.mem.ro
GC: --#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <1000 (0x3e8)>
  [1] #xxxx.1.1.num.int <200 (0xc8)>
  [2] #xxxx.1.1.num.int <100 (0x64)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <1000 (0x3e8)>
  [1] #xxxx.1.1.num.int <200 (0xc8)>
  [2] #xxxx.1.1.num.int <100 (0x64)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.3.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.4.mem.ro>
  [1] #xxxx.1.1.num.int <1000 (0x3e8)>
  [2] #xxxx.1.1.num.int <200 (0xc8)>
  [3] #xxxx.1.1.num.int <100 (0x64)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <1000 (0x3e8)>
  [1] #xxxx.1.1.num.int <200 (0xc8)>
  [2] #xxxx.1.1.num.int <100 (0x64)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.bool <1 (0x1)>
  [1] #xxxx.1.1.num.int <1000 (0x3e8)>
  [2] #xxxx.1.1.num.int <200 (0xc8)>
  [3] #xxxx.1.1.num.int <100 (0x64)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.5.mem.ro>
  [1] #xxxx.1.1.num.bool <1 (0x1)>
  [2] #xxxx.1.1.num.int <1000 (0x3e8)>
  [3] #xxxx.1.1.num.int <200 (0xc8)>
  [4] #xxxx.1.1.num.int <100 (0x64)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.1.num.bool
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [3] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <1000 (0x3e8)>
  [1] #xxxx.1.1.num.int <200 (0xc8)>
  [2] #xxxx.1.1.num.int <100 (0x64)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [3] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <10000 (0x2710)>
  [1] #xxxx.1.1.num.int <1000 (0x3e8)>
  [2] #xxxx.1.1.num.int <200 (0xc8)>
  [3] #xxxx.1.1.num.int <100 (0x64)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.block <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.loop <code #xxxx.1.1.mem.code.ro>
  [2] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [3] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20000 (0x4e20)>
  [1] #xxxx.1.1.num.int <10000 (0x2710)>
  [2] #xxxx.1.1.num.int <1000 (0x3e8)>
  [3] #xxxx.1.1.num.int <200 (0xc8)>
  [4] #xxxx.1.1.num.int <100 (0x64)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.block
GC: --#xxxx.1.1.ctx.loop
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.5.mem.ro
GC: --#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20000 (0x4e20)>
  [1] #xxxx.1.1.num.int <10000 (0x2710)>
  [2] #xxxx.1.1.num.int <1000 (0x3e8)>
  [3] #xxxx.1.1.num.int <200 (0xc8)>
  [4] #xxxx.1.1.num.int <100 (0x64)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <50000 (0xc350)>
  [1] #xxxx.1.1.num.int <20000 (0x4e20)>
  [2] #xxxx.1.1.num.int <10000 (0x2710)>
  [3] #xxxx.1.1.num.int <1000 (0x3e8)>
  [4] #xxxx.1.1.num.int <200 (0xc8)>
  [5] #xxxx.1.1.num.int <100 (0x64)>
  [6] #xxxx.1.1.num.int <20 (0x14)>
  [7] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.func
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.2.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <50000 (0xc350)>
  [1] #xxxx.1.1.num.int <20000 (0x4e20)>
  [2] #xxxx.1.1.num.int <10000 (0x2710)>
  [3] #xxxx.1.1.num.int <1000 (0x3e8)>
  [4] #xxxx.1.1.num.int <200 (0xc8)>
  [5] #xxxx.1.1.num.int <100 (0x64)>
  [6] #xxxx.1.1.num.int <20 (0x14)>
  [7] #xxxx.1.1.num.int <10 (0xa)>
