# ---  trace  ---
IP: #186:0x0, type 5, 1[7]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x8, type 9, 9[5]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xe (0x8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0xe, type 8, 15[1]
GC: ++#9.1.1.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x10 (0xe), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #9.1.2.num.prim <2 (0x2)>
  [1] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0x10, type 1, 10 (0xa)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x12 (0x10), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.num.int <10 (0xa)>
  [1] #9.1.2.num.prim <2 (0x2)>
  [2] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0x12, type 1, 20 (0x14)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x14 (0x12), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #191.1.1.num.int <20 (0x14)>
  [1] #190.1.1.num.int <10 (0xa)>
  [2] #9.1.2.num.prim <2 (0x2)>
  [3] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0x14, type 1, 30 (0x1e)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x16 (0x14), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.1.num.int <30 (0x1e)>
  [1] #191.1.1.num.int <20 (0x14)>
  [2] #190.1.1.num.int <10 (0xa)>
  [3] #9.1.2.num.prim <2 (0x2)>
  [4] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0x16, type 1, 40 (0x28)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x18 (0x16), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <40 (0x28)>
  [1] #192.1.1.num.int <30 (0x1e)>
  [2] #191.1.1.num.int <20 (0x14)>
  [3] #190.1.1.num.int <10 (0xa)>
  [4] #9.1.2.num.prim <2 (0x2)>
  [5] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0x18, type 8, 25[1]
GC: --#9.1.2.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x1a (0x18), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.1.array <size 4, max 4>
  [1] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0x1a, type 8, 27[3]
GC: ++#189.1.1.mem.ref.ro
GC: ++#194.1.1.array
GC: --#194.1.2.array
GC: --#189.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x1e (0x1a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x1e, type 8, 31[5]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x24 (0x1e), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 4, max 4>
IP: #186:0x24, type 1, 0 (0x0)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x25 (0x24), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.1.num.int <0 (0x0)>
  [1] #194.1.2.array <size 4, max 4>
IP: #186:0x25, type 1, 100 (0x64)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x27 (0x25), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #196.1.1.num.int <100 (0x64)>
  [1] #195.1.1.num.int <0 (0x0)>
  [2] #194.1.2.array <size 4, max 4>
IP: #186:0x27, type 8, 40[3]
GC: ++#196.1.1.num.int
GC: --#190.1.1.num.int
GC: --#196.1.2.num.int
GC: --#195.1.1.num.int
GC: --#194.1.2.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x2b (0x27), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x2b, type 8, 44[5]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x31 (0x2b), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 4, max 4>
IP: #186:0x31, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x33 (0x31), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #194.1.2.array <size 4, max 4>
IP: #186:0x33, type 1, 400 (0x190)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x36 (0x33), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #199.1.1.num.int <400 (0x190)>
  [1] #198.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #194.1.2.array <size 4, max 4>
IP: #186:0x36, type 8, 55[3]
GC: ++#199.1.1.num.int
GC: --#193.1.1.num.int
GC: --#199.1.2.num.int
GC: --#198.1.1.num.int
GC: --#194.1.2.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x3a (0x36), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x3a, type 8, 59[5]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x40 (0x3a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 4, max 4>
IP: #186:0x40, type 1, 4 (0x4)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x41 (0x40), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #200.1.1.num.int <4 (0x4)>
  [1] #194.1.2.array <size 4, max 4>
IP: #186:0x41, type 1, 500 (0x1f4)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x44 (0x41), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #201.1.1.num.int <500 (0x1f4)>
  [1] #200.1.1.num.int <4 (0x4)>
  [2] #194.1.2.array <size 4, max 4>
IP: #186:0x44, type 8, 69[3]
GC: ++#201.1.1.num.int
GC: --#201.1.2.num.int
GC: --#200.1.1.num.int
GC: --#194.1.2.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x48 (0x44), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x48, type 8, 73[5]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x4e (0x48), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 5, max 20>
IP: #186:0x4e, type 1, 8 (0x8)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x50 (0x4e), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #202.1.1.num.int <8 (0x8)>
  [1] #194.1.2.array <size 5, max 20>
IP: #186:0x50, type 1, 900 (0x384)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x53 (0x50), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #203.1.1.num.int <900 (0x384)>
  [1] #202.1.1.num.int <8 (0x8)>
  [2] #194.1.2.array <size 5, max 20>
IP: #186:0x53, type 8, 84[3]
GC: ++#203.1.1.num.int
GC: --#203.1.2.num.int
GC: --#202.1.1.num.int
GC: --#194.1.2.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x57 (0x53), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x57, type 9, 88[5]
GC: ++#186.1.2.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x5d (0x57), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #204.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x5d, type 8, 94[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x5f (0x5d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #204.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x5f, type 7, 96[2]
GC: ++#186.1.3.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x62 (0x5f), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #205.1.1.mem.str.ro <#186.1.4.mem.ro, ofs 0x60, size 2, "aa">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #204.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x62, type 1, 11 (0xb)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x64 (0x62), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #206.1.1.num.int <11 (0xb)>
  [1] #205.1.1.mem.str.ro <#186.1.4.mem.ro, ofs 0x60, size 2, "aa">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #204.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x64, type 7, 101[2]
GC: ++#186.1.4.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x67 (0x64), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #207.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x65, size 2, "bb">
  [1] #206.1.1.num.int <11 (0xb)>
  [2] #205.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x60, size 2, "aa">
  [3] #13.1.2.num.prim <4 (0x4)>
  [4] #204.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x67, type 1, 22 (0x16)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x69 (0x67), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #208.1.1.num.int <22 (0x16)>
  [1] #207.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x65, size 2, "bb">
  [2] #206.1.1.num.int <11 (0xb)>
  [3] #205.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x60, size 2, "aa">
  [4] #13.1.2.num.prim <4 (0x4)>
  [5] #204.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x69, type 7, 106[2]
GC: ++#186.1.5.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x6c (0x69), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #209.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x6a, size 2, "cc">
  [1] #208.1.1.num.int <22 (0x16)>
  [2] #207.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x65, size 2, "bb">
  [3] #206.1.1.num.int <11 (0xb)>
  [4] #205.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x60, size 2, "aa">
  [5] #13.1.2.num.prim <4 (0x4)>
  [6] #204.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x6c, type 1, 33 (0x21)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x6e (0x6c), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #210.1.1.num.int <33 (0x21)>
  [1] #209.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x6a, size 2, "cc">
  [2] #208.1.1.num.int <22 (0x16)>
  [3] #207.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x65, size 2, "bb">
  [4] #206.1.1.num.int <11 (0xb)>
  [5] #205.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x60, size 2, "aa">
  [6] #13.1.2.num.prim <4 (0x4)>
  [7] #204.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x6e, type 8, 111[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x70 (0x6e), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #211.1.1.hash <size 3, max 3>
  [1] #204.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #186:0x70, type 8, 113[3]
GC: ++#204.1.1.mem.ref.ro
GC: ++#211.1.1.hash
GC: --#211.1.2.hash
GC: --#204.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x74 (0x70), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x74, type 8, 117[5]
GC: ++#211.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x7a (0x74), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #211.1.2.hash <size 3, max 3>
IP: #186:0x7a, type 7, 123[2]
GC: ++#186.1.6.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.7.mem.ro, ip 0x7d (0x7a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #212.1.1.mem.str.ro <#186.1.7.mem.ro, ofs 0x7b, size 2, "bb">
  [1] #211.1.2.hash <size 3, max 3>
IP: #186:0x7d, type 1, 222 (0xde)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.7.mem.ro, ip 0x80 (0x7d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #213.1.1.num.int <222 (0xde)>
  [1] #212.1.1.mem.str.ro <#186.1.7.mem.ro, ofs 0x7b, size 2, "bb">
  [2] #211.1.2.hash <size 3, max 3>
IP: #186:0x80, type 8, 129[3]
GC: ++#212.1.1.mem.str.ro
GC: ++#213.1.1.num.int
GC: --#207.1.1.mem.str.ro
GC: --#186.1.7.mem.ro
GC: --#208.1.1.num.int
GC: --#213.1.2.num.int
GC: --#212.1.2.mem.str.ro
GC: --#211.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x84 (0x80), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x84, type 8, 133[5]
GC: ++#211.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x8a (0x84), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #211.1.2.hash <size 3, max 3>
IP: #186:0x8a, type 7, 139[2]
GC: ++#186.1.6.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.7.mem.ro, ip 0x8d (0x8a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #214.1.1.mem.str.ro <#186.1.7.mem.ro, ofs 0x8b, size 2, "dd">
  [1] #211.1.2.hash <size 3, max 3>
IP: #186:0x8d, type 1, 444 (0x1bc)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.7.mem.ro, ip 0x90 (0x8d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #215.1.1.num.int <444 (0x1bc)>
  [1] #214.1.1.mem.str.ro <#186.1.7.mem.ro, ofs 0x8b, size 2, "dd">
  [2] #211.1.2.hash <size 3, max 3>
IP: #186:0x90, type 8, 145[3]
GC: ++#214.1.1.mem.str.ro
GC: ++#215.1.1.num.int
GC: --#215.1.2.num.int
GC: --#214.1.2.mem.str.ro
GC: --#211.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.7.mem.ro, ip 0x94 (0x90), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x94, type 9, 149[5]
GC: ++#186.1.7.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0x9a (0x94), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #216.1.1.mem.ref.ro <#186.1.8.mem.ro, ofs 0x95, size 5, "foo_3">
IP: #186:0x9a, type 1, 5 (0x5)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0x9b (0x9a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #217.1.1.num.int <5 (0x5)>
  [1] #216.1.1.mem.ref.ro <#186.1.8.mem.ro, ofs 0x95, size 5, "foo_3">
IP: #186:0x9b, type 8, 156[6]
GC: --#217.1.1.num.int
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xa2 (0x9b), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #218.1.1.mem <size 5>
  [1] #216.1.1.mem.ref.ro <#186.1.8.mem.ro, ofs 0x95, size 5, "foo_3">
IP: #186:0xa2, type 8, 163[3]
GC: ++#216.1.1.mem.ref.ro
GC: ++#218.1.1.mem
GC: --#218.1.2.mem
GC: --#216.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xa6 (0xa2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xa6, type 8, 167[5]
GC: ++#218.1.1.mem
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xac (0xa6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #218.1.2.mem <size 5>
IP: #186:0xac, type 1, 0 (0x0)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xad (0xac), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #219.1.1.num.int <0 (0x0)>
  [1] #218.1.2.mem <size 5>
IP: #186:0xad, type 1, 65 (0x41)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xaf (0xad), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #220.1.1.num.int <65 (0x41)>
  [1] #219.1.1.num.int <0 (0x0)>
  [2] #218.1.2.mem <size 5>
IP: #186:0xaf, type 8, 176[3]
GC: --#220.1.1.num.int
GC: --#219.1.1.num.int
GC: --#218.1.2.mem
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xb3 (0xaf), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xb3, type 8, 180[5]
GC: ++#218.1.1.mem
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xb9 (0xb3), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #218.1.2.mem <size 5>
IP: #186:0xb9, type 1, 3 (0x3)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xba (0xb9), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #221.1.1.num.int <3 (0x3)>
  [1] #218.1.2.mem <size 5>
IP: #186:0xba, type 1, 53 (0x35)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xbc (0xba), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #222.1.1.num.int <53 (0x35)>
  [1] #221.1.1.num.int <3 (0x3)>
  [2] #218.1.2.mem <size 5>
IP: #186:0xbc, type 8, 189[3]
GC: --#222.1.1.num.int
GC: --#221.1.1.num.int
GC: --#218.1.2.mem
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xc0 (0xbc), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xc0, type 8, 193[5]
GC: ++#218.1.1.mem
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xc6 (0xc0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #218.1.2.mem <size 5>
IP: #186:0xc6, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xc8 (0xc6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #223.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #218.1.2.mem <size 5>
IP: #186:0xc8, type 1, 54 (0x36)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xca (0xc8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #224.1.1.num.int <54 (0x36)>
  [1] #223.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #218.1.2.mem <size 5>
IP: #186:0xca, type 8, 203[3]
GC: --#224.1.1.num.int
GC: --#223.1.1.num.int
GC: --#218.1.2.mem
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xce (0xca), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xce, type 8, 207[5]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xd4 (0xce), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 9, max 20>
IP: #186:0xd4, type 6, 213[1]
GC: ++#186.1.8.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xd6 (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #225.1.1.mem.code.ro <#186.1.9.mem.ro, ofs 0xd5, size 1>
  [1] #194.1.2.array <size 9, max 20>
IP: #186:0xd6, type 8, 215[6]
GC: ++#196.1.1.num.int
GC: ++#225.1.1.mem.code.ro
GC: ++#194.1.2.array
GC: --#225.1.2.mem.code.ro
GC: --#194.1.3.array
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
GC: ++#191.1.1.num.int
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #191.1.2.num.int <20 (0x14)>
  [1] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
GC: ++#192.1.1.num.int
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.2.num.int <30 (0x1e)>
  [1] #191.1.2.num.int <20 (0x14)>
  [2] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
GC: ++#199.1.1.num.int
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #199.1.2.num.int <400 (0x190)>
  [1] #192.1.2.num.int <30 (0x1e)>
  [2] #191.1.2.num.int <20 (0x14)>
  [3] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
GC: ++#201.1.1.num.int
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #201.1.2.num.int <500 (0x1f4)>
  [1] #199.1.2.num.int <400 (0x190)>
  [2] #192.1.2.num.int <30 (0x1e)>
  [3] #191.1.2.num.int <20 (0x14)>
  [4] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 6, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #201.1.2.num.int <500 (0x1f4)>
  [2] #199.1.2.num.int <400 (0x190)>
  [3] #192.1.2.num.int <30 (0x1e)>
  [4] #191.1.2.num.int <20 (0x14)>
  [5] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 7, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #0.0.nil <nil>
  [2] #201.1.2.num.int <500 (0x1f4)>
  [3] #199.1.2.num.int <400 (0x190)>
  [4] #192.1.2.num.int <30 (0x1e)>
  [5] #191.1.2.num.int <20 (0x14)>
  [6] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 8, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #201.1.2.num.int <500 (0x1f4)>
  [4] #199.1.2.num.int <400 (0x190)>
  [5] #192.1.2.num.int <30 (0x1e)>
  [6] #191.1.2.num.int <20 (0x14)>
  [7] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
GC: ++#203.1.1.num.int
== backtrace ==
  [0] #226.1.1.ctx.forall <code #225.1.1.mem.code.ro, ip 0x0 (0x0), index 9, iterate #194.1.2.array>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #203.1.2.num.int <900 (0x384)>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #201.1.2.num.int <500 (0x1f4)>
  [5] #199.1.2.num.int <400 (0x190)>
  [6] #192.1.2.num.int <30 (0x1e)>
  [7] #191.1.2.num.int <20 (0x14)>
  [8] #196.1.2.num.int <100 (0x64)>
IP: #225:0x0, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#226.1.1.ctx.forall
GC: --#188.1.2.ctx.func
GC: --#225.1.1.mem.code.ro
GC: --#194.1.2.array
GC: --#186.1.9.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xdd (0xd6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #203.1.2.num.int <900 (0x384)>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #201.1.2.num.int <500 (0x1f4)>
  [5] #199.1.2.num.int <400 (0x190)>
  [6] #192.1.2.num.int <30 (0x1e)>
  [7] #191.1.2.num.int <20 (0x14)>
  [8] #196.1.2.num.int <100 (0x64)>
IP: #186:0xdd, type 8, 222[5]
GC: ++#211.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xe3 (0xdd), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #211.1.2.hash <size 4, max 19>
  [1] #203.1.2.num.int <900 (0x384)>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #201.1.2.num.int <500 (0x1f4)>
  [6] #199.1.2.num.int <400 (0x190)>
  [7] #192.1.2.num.int <30 (0x1e)>
  [8] #191.1.2.num.int <20 (0x14)>
  [9] #196.1.2.num.int <100 (0x64)>
IP: #186:0xe3, type 6, 228[1]
GC: ++#186.1.8.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe5 (0xe3), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #227.1.1.mem.code.ro <#186.1.9.mem.ro, ofs 0xe4, size 1>
  [1] #211.1.2.hash <size 4, max 19>
  [2] #203.1.2.num.int <900 (0x384)>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #0.0.nil <nil>
  [6] #201.1.2.num.int <500 (0x1f4)>
  [7] #199.1.2.num.int <400 (0x190)>
  [8] #192.1.2.num.int <30 (0x1e)>
  [9] #191.1.2.num.int <20 (0x14)>
  [10] #196.1.2.num.int <100 (0x64)>
IP: #186:0xe5, type 8, 230[6]
GC: ++#205.1.1.mem.str.ro
GC: ++#206.1.1.num.int
GC: ++#227.1.1.mem.code.ro
GC: ++#211.1.2.hash
GC: --#227.1.2.mem.code.ro
GC: --#211.1.3.hash
== backtrace ==
  [0] #228.1.1.ctx.forall <code #227.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #211.1.2.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xec (0xe5), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #206.1.2.num.int <11 (0xb)>
  [1] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [2] #203.1.2.num.int <900 (0x384)>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #0.0.nil <nil>
  [6] #201.1.2.num.int <500 (0x1f4)>
  [7] #199.1.2.num.int <400 (0x190)>
  [8] #192.1.2.num.int <30 (0x1e)>
  [9] #191.1.2.num.int <20 (0x14)>
  [10] #196.1.2.num.int <100 (0x64)>
IP: #227:0x0, type 3, 1 (0x1)
GC: ++#212.1.1.mem.str.ro
GC: ++#213.1.1.num.int
== backtrace ==
  [0] #228.1.1.ctx.forall <code #227.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #211.1.2.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xec (0xe5), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #213.1.2.num.int <222 (0xde)>
  [1] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [2] #206.1.2.num.int <11 (0xb)>
  [3] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [4] #203.1.2.num.int <900 (0x384)>
  [5] #0.0.nil <nil>
  [6] #0.0.nil <nil>
  [7] #0.0.nil <nil>
  [8] #201.1.2.num.int <500 (0x1f4)>
  [9] #199.1.2.num.int <400 (0x190)>
  [10] #192.1.2.num.int <30 (0x1e)>
  [11] #191.1.2.num.int <20 (0x14)>
  [12] #196.1.2.num.int <100 (0x64)>
IP: #227:0x0, type 3, 1 (0x1)
GC: ++#209.1.1.mem.str.ro
GC: ++#210.1.1.num.int
== backtrace ==
  [0] #228.1.1.ctx.forall <code #227.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #211.1.2.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xec (0xe5), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #210.1.2.num.int <33 (0x21)>
  [1] #209.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [2] #213.1.2.num.int <222 (0xde)>
  [3] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [4] #206.1.2.num.int <11 (0xb)>
  [5] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [6] #203.1.2.num.int <900 (0x384)>
  [7] #0.0.nil <nil>
  [8] #0.0.nil <nil>
  [9] #0.0.nil <nil>
  [10] #201.1.2.num.int <500 (0x1f4)>
  [11] #199.1.2.num.int <400 (0x190)>
  [12] #192.1.2.num.int <30 (0x1e)>
  [13] #191.1.2.num.int <20 (0x14)>
  [14] #196.1.2.num.int <100 (0x64)>
IP: #227:0x0, type 3, 1 (0x1)
GC: ++#214.1.1.mem.str.ro
GC: ++#215.1.1.num.int
== backtrace ==
  [0] #228.1.1.ctx.forall <code #227.1.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #211.1.2.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xec (0xe5), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #215.1.2.num.int <444 (0x1bc)>
  [1] #214.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [2] #210.1.2.num.int <33 (0x21)>
  [3] #209.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [4] #213.1.2.num.int <222 (0xde)>
  [5] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [6] #206.1.2.num.int <11 (0xb)>
  [7] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [8] #203.1.2.num.int <900 (0x384)>
  [9] #0.0.nil <nil>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #201.1.2.num.int <500 (0x1f4)>
  [13] #199.1.2.num.int <400 (0x190)>
  [14] #192.1.2.num.int <30 (0x1e)>
  [15] #191.1.2.num.int <20 (0x14)>
  [16] #196.1.2.num.int <100 (0x64)>
IP: #227:0x0, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#228.1.1.ctx.forall
GC: --#188.1.2.ctx.func
GC: --#227.1.1.mem.code.ro
GC: --#211.1.2.hash
GC: --#186.1.9.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xec (0xe5), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #215.1.2.num.int <444 (0x1bc)>
  [1] #214.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x8b, size 2, "dd">
  [2] #210.1.2.num.int <33 (0x21)>
  [3] #209.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x6a, size 2, "cc">
  [4] #213.1.2.num.int <222 (0xde)>
  [5] #212.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x7b, size 2, "bb">
  [6] #206.1.2.num.int <11 (0xb)>
  [7] #205.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x60, size 2, "aa">
  [8] #203.1.2.num.int <900 (0x384)>
  [9] #0.0.nil <nil>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #201.1.2.num.int <500 (0x1f4)>
  [13] #199.1.2.num.int <400 (0x190)>
  [14] #192.1.2.num.int <30 (0x1e)>
  [15] #191.1.2.num.int <20 (0x14)>
  [16] #196.1.2.num.int <100 (0x64)>
IP: #186:0xec, type 8, 237[5]
GC: ++#218.1.1.mem
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xf2 (0xec), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #218.1.2.mem <size 5>
  [1] #215.1.2.num.int <444 (0x1bc)>
  [2] #214.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x8b, size 2, "dd">
  [3] #210.1.2.num.int <33 (0x21)>
  [4] #209.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x6a, size 2, "cc">
  [5] #213.1.2.num.int <222 (0xde)>
  [6] #212.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x7b, size 2, "bb">
  [7] #206.1.2.num.int <11 (0xb)>
  [8] #205.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x60, size 2, "aa">
  [9] #203.1.2.num.int <900 (0x384)>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #201.1.2.num.int <500 (0x1f4)>
  [14] #199.1.2.num.int <400 (0x190)>
  [15] #192.1.2.num.int <30 (0x1e)>
  [16] #191.1.2.num.int <20 (0x14)>
  [17] #196.1.2.num.int <100 (0x64)>
IP: #186:0xf2, type 6, 243[1]
GC: ++#186.1.8.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf4 (0xf2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #229.1.1.mem.code.ro <#186.1.9.mem.ro, ofs 0xf3, size 1>
  [1] #218.1.2.mem <size 5>
  [2] #215.1.2.num.int <444 (0x1bc)>
  [3] #214.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [4] #210.1.2.num.int <33 (0x21)>
  [5] #209.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [6] #213.1.2.num.int <222 (0xde)>
  [7] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [8] #206.1.2.num.int <11 (0xb)>
  [9] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [10] #203.1.2.num.int <900 (0x384)>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #0.0.nil <nil>
  [14] #201.1.2.num.int <500 (0x1f4)>
  [15] #199.1.2.num.int <400 (0x190)>
  [16] #192.1.2.num.int <30 (0x1e)>
  [17] #191.1.2.num.int <20 (0x14)>
  [18] #196.1.2.num.int <100 (0x64)>
IP: #186:0xf4, type 8, 245[6]
GC: ++#229.1.1.mem.code.ro
GC: ++#218.1.2.mem
GC: --#229.1.2.mem.code.ro
GC: --#218.1.3.mem
== backtrace ==
  [0] #231.1.1.ctx.forall <code #229.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #218.1.2.mem>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xfb (0xf4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #230.1.1.num.int <65 (0x41)>
  [1] #215.1.2.num.int <444 (0x1bc)>
  [2] #214.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [3] #210.1.2.num.int <33 (0x21)>
  [4] #209.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [5] #213.1.2.num.int <222 (0xde)>
  [6] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [7] #206.1.2.num.int <11 (0xb)>
  [8] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [9] #203.1.2.num.int <900 (0x384)>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #201.1.2.num.int <500 (0x1f4)>
  [14] #199.1.2.num.int <400 (0x190)>
  [15] #192.1.2.num.int <30 (0x1e)>
  [16] #191.1.2.num.int <20 (0x14)>
  [17] #196.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.1.1.ctx.forall <code #229.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #218.1.2.mem>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xfb (0xf4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #232.1.1.num.int <0 (0x0)>
  [1] #230.1.1.num.int <65 (0x41)>
  [2] #215.1.2.num.int <444 (0x1bc)>
  [3] #214.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [4] #210.1.2.num.int <33 (0x21)>
  [5] #209.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [6] #213.1.2.num.int <222 (0xde)>
  [7] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [8] #206.1.2.num.int <11 (0xb)>
  [9] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [10] #203.1.2.num.int <900 (0x384)>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #0.0.nil <nil>
  [14] #201.1.2.num.int <500 (0x1f4)>
  [15] #199.1.2.num.int <400 (0x190)>
  [16] #192.1.2.num.int <30 (0x1e)>
  [17] #191.1.2.num.int <20 (0x14)>
  [18] #196.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.1.1.ctx.forall <code #229.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #218.1.2.mem>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xfb (0xf4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #233.1.1.num.int <0 (0x0)>
  [1] #232.1.1.num.int <0 (0x0)>
  [2] #230.1.1.num.int <65 (0x41)>
  [3] #215.1.2.num.int <444 (0x1bc)>
  [4] #214.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [5] #210.1.2.num.int <33 (0x21)>
  [6] #209.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [7] #213.1.2.num.int <222 (0xde)>
  [8] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [9] #206.1.2.num.int <11 (0xb)>
  [10] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [11] #203.1.2.num.int <900 (0x384)>
  [12] #0.0.nil <nil>
  [13] #0.0.nil <nil>
  [14] #0.0.nil <nil>
  [15] #201.1.2.num.int <500 (0x1f4)>
  [16] #199.1.2.num.int <400 (0x190)>
  [17] #192.1.2.num.int <30 (0x1e)>
  [18] #191.1.2.num.int <20 (0x14)>
  [19] #196.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.1.1.ctx.forall <code #229.1.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #218.1.2.mem>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xfb (0xf4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #234.1.1.num.int <53 (0x35)>
  [1] #233.1.1.num.int <0 (0x0)>
  [2] #232.1.1.num.int <0 (0x0)>
  [3] #230.1.1.num.int <65 (0x41)>
  [4] #215.1.2.num.int <444 (0x1bc)>
  [5] #214.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [6] #210.1.2.num.int <33 (0x21)>
  [7] #209.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [8] #213.1.2.num.int <222 (0xde)>
  [9] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [10] #206.1.2.num.int <11 (0xb)>
  [11] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [12] #203.1.2.num.int <900 (0x384)>
  [13] #0.0.nil <nil>
  [14] #0.0.nil <nil>
  [15] #0.0.nil <nil>
  [16] #201.1.2.num.int <500 (0x1f4)>
  [17] #199.1.2.num.int <400 (0x190)>
  [18] #192.1.2.num.int <30 (0x1e)>
  [19] #191.1.2.num.int <20 (0x14)>
  [20] #196.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.1.1.ctx.forall <code #229.1.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #218.1.2.mem>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xfb (0xf4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #235.1.1.num.int <54 (0x36)>
  [1] #234.1.1.num.int <53 (0x35)>
  [2] #233.1.1.num.int <0 (0x0)>
  [3] #232.1.1.num.int <0 (0x0)>
  [4] #230.1.1.num.int <65 (0x41)>
  [5] #215.1.2.num.int <444 (0x1bc)>
  [6] #214.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [7] #210.1.2.num.int <33 (0x21)>
  [8] #209.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [9] #213.1.2.num.int <222 (0xde)>
  [10] #212.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [11] #206.1.2.num.int <11 (0xb)>
  [12] #205.1.2.mem.str.ro <#186.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [13] #203.1.2.num.int <900 (0x384)>
  [14] #0.0.nil <nil>
  [15] #0.0.nil <nil>
  [16] #0.0.nil <nil>
  [17] #201.1.2.num.int <500 (0x1f4)>
  [18] #199.1.2.num.int <400 (0x190)>
  [19] #192.1.2.num.int <30 (0x1e)>
  [20] #191.1.2.num.int <20 (0x14)>
  [21] #196.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#231.1.1.ctx.forall
GC: --#188.1.2.ctx.func
GC: --#229.1.1.mem.code.ro
GC: --#218.1.2.mem
GC: --#186.1.9.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0xfb (0xf4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #235.1.1.num.int <54 (0x36)>
  [1] #234.1.1.num.int <53 (0x35)>
  [2] #233.1.1.num.int <0 (0x0)>
  [3] #232.1.1.num.int <0 (0x0)>
  [4] #230.1.1.num.int <65 (0x41)>
  [5] #215.1.2.num.int <444 (0x1bc)>
  [6] #214.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x8b, size 2, "dd">
  [7] #210.1.2.num.int <33 (0x21)>
  [8] #209.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x6a, size 2, "cc">
  [9] #213.1.2.num.int <222 (0xde)>
  [10] #212.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x7b, size 2, "bb">
  [11] #206.1.2.num.int <11 (0xb)>
  [12] #205.1.2.mem.str.ro <#186.1.8.mem.ro, ofs 0x60, size 2, "aa">
  [13] #203.1.2.num.int <900 (0x384)>
  [14] #0.0.nil <nil>
  [15] #0.0.nil <nil>
  [16] #0.0.nil <nil>
  [17] #201.1.2.num.int <500 (0x1f4)>
  [18] #199.1.2.num.int <400 (0x190)>
  [19] #192.1.2.num.int <30 (0x1e)>
  [20] #191.1.2.num.int <20 (0x14)>
  [21] #196.1.2.num.int <100 (0x64)>
