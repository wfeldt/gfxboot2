# ---  trace  ---
IP: #217:0x0, type 5, 1[7]
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x8, type 9, 9[5]
GC: ++#217.1.1.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0xe (0x8), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0xe, type 8, 15[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x10 (0xe), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #13.1.2.num.prim <2 (0x2)>
  [1] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x10, type 1, 10 (0xa)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x12 (0x10), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #221.1.1.num.int <10 (0xa)>
  [1] #13.1.2.num.prim <2 (0x2)>
  [2] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x12, type 1, 20 (0x14)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x14 (0x12), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.1.num.int <20 (0x14)>
  [1] #221.1.1.num.int <10 (0xa)>
  [2] #13.1.2.num.prim <2 (0x2)>
  [3] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x14, type 1, 30 (0x1e)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x16 (0x14), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #223.1.1.num.int <30 (0x1e)>
  [1] #222.1.1.num.int <20 (0x14)>
  [2] #221.1.1.num.int <10 (0xa)>
  [3] #13.1.2.num.prim <2 (0x2)>
  [4] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x16, type 1, 40 (0x28)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x18 (0x16), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #224.1.1.num.int <40 (0x28)>
  [1] #223.1.1.num.int <30 (0x1e)>
  [2] #222.1.1.num.int <20 (0x14)>
  [3] #221.1.1.num.int <10 (0xa)>
  [4] #13.1.2.num.prim <2 (0x2)>
  [5] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x18, type 8, 25[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x1a (0x18), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.1.array <size 4, max 4>
  [1] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x1a, type 8, 27[3]
GC: ++#220.1.1.mem.ref.ro
GC: ++#225.1.1.array
GC: --#225.1.2.array
GC: --#220.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x1e (0x1a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x1e, type 8, 31[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x24 (0x1e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 4, max 4>
IP: #217:0x24, type 1, 0 (0x0)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x25 (0x24), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #226.1.1.num.int <0 (0x0)>
  [1] #225.1.2.array <size 4, max 4>
IP: #217:0x25, type 1, 100 (0x64)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x27 (0x25), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #227.1.1.num.int <100 (0x64)>
  [1] #226.1.1.num.int <0 (0x0)>
  [2] #225.1.2.array <size 4, max 4>
IP: #217:0x27, type 8, 40[3]
GC: ++#227.1.1.num.int
GC: --#221.1.1.num.int
GC: --#227.1.2.num.int
GC: --#226.1.1.num.int
GC: --#225.1.2.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x2b (0x27), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x2b, type 8, 44[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x31 (0x2b), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 4, max 4>
IP: #217:0x31, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x33 (0x31), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #225.1.2.array <size 4, max 4>
IP: #217:0x33, type 1, 400 (0x190)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x36 (0x33), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #230.1.1.num.int <400 (0x190)>
  [1] #229.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #225.1.2.array <size 4, max 4>
IP: #217:0x36, type 8, 55[3]
GC: ++#230.1.1.num.int
GC: --#224.1.1.num.int
GC: --#230.1.2.num.int
GC: --#229.1.1.num.int
GC: --#225.1.2.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x3a (0x36), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x3a, type 8, 59[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x40 (0x3a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 4, max 4>
IP: #217:0x40, type 1, 4 (0x4)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x41 (0x40), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #231.1.1.num.int <4 (0x4)>
  [1] #225.1.2.array <size 4, max 4>
IP: #217:0x41, type 1, 500 (0x1f4)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x44 (0x41), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #232.1.1.num.int <500 (0x1f4)>
  [1] #231.1.1.num.int <4 (0x4)>
  [2] #225.1.2.array <size 4, max 4>
IP: #217:0x44, type 8, 69[3]
GC: ++#232.1.1.num.int
GC: --#232.1.2.num.int
GC: --#231.1.1.num.int
GC: --#225.1.2.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x48 (0x44), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x48, type 8, 73[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x4e (0x48), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 5, max 20>
IP: #217:0x4e, type 1, 8 (0x8)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x50 (0x4e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #233.1.1.num.int <8 (0x8)>
  [1] #225.1.2.array <size 5, max 20>
IP: #217:0x50, type 1, 900 (0x384)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x53 (0x50), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #234.1.1.num.int <900 (0x384)>
  [1] #233.1.1.num.int <8 (0x8)>
  [2] #225.1.2.array <size 5, max 20>
IP: #217:0x53, type 8, 84[3]
GC: ++#234.1.1.num.int
GC: --#234.1.2.num.int
GC: --#233.1.1.num.int
GC: --#225.1.2.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x57 (0x53), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x57, type 9, 88[5]
GC: ++#217.1.2.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.3.mem.ro, ip 0x5d (0x57), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #235.1.1.mem.ref.ro <#217.1.3.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x5d, type 8, 94[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.3.mem.ro, ip 0x5f (0x5d), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #235.1.1.mem.ref.ro <#217.1.3.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x5f, type 7, 96[2]
GC: ++#217.1.3.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.4.mem.ro, ip 0x62 (0x5f), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #236.1.1.mem.str.ro <#217.1.4.mem.ro, ofs 0x60, size 2, "aa">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #235.1.1.mem.ref.ro <#217.1.4.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x62, type 1, 11 (0xb)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.4.mem.ro, ip 0x64 (0x62), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #237.1.1.num.int <11 (0xb)>
  [1] #236.1.1.mem.str.ro <#217.1.4.mem.ro, ofs 0x60, size 2, "aa">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #235.1.1.mem.ref.ro <#217.1.4.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x64, type 7, 101[2]
GC: ++#217.1.4.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.5.mem.ro, ip 0x67 (0x64), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #238.1.1.mem.str.ro <#217.1.5.mem.ro, ofs 0x65, size 2, "bb">
  [1] #237.1.1.num.int <11 (0xb)>
  [2] #236.1.1.mem.str.ro <#217.1.5.mem.ro, ofs 0x60, size 2, "aa">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #235.1.1.mem.ref.ro <#217.1.5.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x67, type 1, 22 (0x16)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.5.mem.ro, ip 0x69 (0x67), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #239.1.1.num.int <22 (0x16)>
  [1] #238.1.1.mem.str.ro <#217.1.5.mem.ro, ofs 0x65, size 2, "bb">
  [2] #237.1.1.num.int <11 (0xb)>
  [3] #236.1.1.mem.str.ro <#217.1.5.mem.ro, ofs 0x60, size 2, "aa">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #235.1.1.mem.ref.ro <#217.1.5.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x69, type 7, 106[2]
GC: ++#217.1.5.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x6c (0x69), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #240.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x6a, size 2, "cc">
  [1] #239.1.1.num.int <22 (0x16)>
  [2] #238.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x65, size 2, "bb">
  [3] #237.1.1.num.int <11 (0xb)>
  [4] #236.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x60, size 2, "aa">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #235.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x6c, type 1, 33 (0x21)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x6e (0x6c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.1.1.num.int <33 (0x21)>
  [1] #240.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x6a, size 2, "cc">
  [2] #239.1.1.num.int <22 (0x16)>
  [3] #238.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x65, size 2, "bb">
  [4] #237.1.1.num.int <11 (0xb)>
  [5] #236.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x60, size 2, "aa">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #235.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x6e, type 8, 111[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x70 (0x6e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.1.hash <size 3, max 3>
  [1] #235.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x58, size 5, "foo_2">
IP: #217:0x70, type 8, 113[3]
GC: ++#235.1.1.mem.ref.ro
GC: ++#242.1.1.hash
GC: --#242.1.2.hash
GC: --#235.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x74 (0x70), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x74, type 8, 117[5]
GC: ++#242.1.1.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x7a (0x74), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.hash <size 3, max 3>
IP: #217:0x7a, type 7, 123[2]
GC: ++#217.1.6.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x7d (0x7a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #243.1.1.mem.str.ro <#217.1.7.mem.ro, ofs 0x7b, size 2, "bb">
  [1] #242.1.2.hash <size 3, max 3>
IP: #217:0x7d, type 1, 222 (0xde)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x80 (0x7d), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.1.num.int <222 (0xde)>
  [1] #243.1.1.mem.str.ro <#217.1.7.mem.ro, ofs 0x7b, size 2, "bb">
  [2] #242.1.2.hash <size 3, max 3>
IP: #217:0x80, type 8, 129[3]
GC: ++#243.1.1.mem.str.ro
GC: ++#244.1.1.num.int
GC: --#238.1.1.mem.str.ro
GC: --#217.1.7.mem.ro
GC: --#239.1.1.num.int
GC: --#244.1.2.num.int
GC: --#243.1.2.mem.str.ro
GC: --#242.1.2.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x84 (0x80), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x84, type 8, 133[5]
GC: ++#242.1.1.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x8a (0x84), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.hash <size 3, max 3>
IP: #217:0x8a, type 7, 139[2]
GC: ++#217.1.6.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x8d (0x8a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #245.1.1.mem.str.ro <#217.1.7.mem.ro, ofs 0x8b, size 2, "dd">
  [1] #242.1.2.hash <size 3, max 3>
IP: #217:0x8d, type 1, 444 (0x1bc)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x90 (0x8d), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.1.1.num.int <444 (0x1bc)>
  [1] #245.1.1.mem.str.ro <#217.1.7.mem.ro, ofs 0x8b, size 2, "dd">
  [2] #242.1.2.hash <size 3, max 3>
IP: #217:0x90, type 8, 145[3]
GC: ++#245.1.1.mem.str.ro
GC: ++#246.1.1.num.int
GC: --#246.1.2.num.int
GC: --#245.1.2.mem.str.ro
GC: --#242.1.2.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x94 (0x90), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x94, type 9, 149[5]
GC: ++#217.1.7.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x9a (0x94), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #247.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0x95, size 5, "foo_3">
IP: #217:0x9a, type 1, 5 (0x5)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x9b (0x9a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #248.1.1.num.int <5 (0x5)>
  [1] #247.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0x95, size 5, "foo_3">
IP: #217:0x9b, type 8, 156[6]
GC: --#248.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xa2 (0x9b), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.1.mem <size 5>
  [1] #247.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0x95, size 5, "foo_3">
IP: #217:0xa2, type 8, 163[3]
GC: ++#247.1.1.mem.ref.ro
GC: ++#249.1.1.mem
GC: --#249.1.2.mem
GC: --#247.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xa6 (0xa2), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xa6, type 8, 167[5]
GC: ++#249.1.1.mem
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xac (0xa6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.2.mem <size 5>
IP: #217:0xac, type 1, 0 (0x0)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xad (0xac), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.1.num.int <0 (0x0)>
  [1] #249.1.2.mem <size 5>
IP: #217:0xad, type 1, 65 (0x41)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xaf (0xad), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #251.1.1.num.int <65 (0x41)>
  [1] #250.1.1.num.int <0 (0x0)>
  [2] #249.1.2.mem <size 5>
IP: #217:0xaf, type 8, 176[3]
GC: --#251.1.1.num.int
GC: --#250.1.1.num.int
GC: --#249.1.2.mem
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xb3 (0xaf), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xb3, type 8, 180[5]
GC: ++#249.1.1.mem
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xb9 (0xb3), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.2.mem <size 5>
IP: #217:0xb9, type 1, 3 (0x3)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xba (0xb9), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #252.1.1.num.int <3 (0x3)>
  [1] #249.1.2.mem <size 5>
IP: #217:0xba, type 1, 53 (0x35)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xbc (0xba), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #253.1.1.num.int <53 (0x35)>
  [1] #252.1.1.num.int <3 (0x3)>
  [2] #249.1.2.mem <size 5>
IP: #217:0xbc, type 8, 189[3]
GC: --#253.1.1.num.int
GC: --#252.1.1.num.int
GC: --#249.1.2.mem
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xc0 (0xbc), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xc0, type 8, 193[5]
GC: ++#249.1.1.mem
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xc6 (0xc0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.2.mem <size 5>
IP: #217:0xc6, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xc8 (0xc6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #254.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #249.1.2.mem <size 5>
IP: #217:0xc8, type 1, 54 (0x36)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xca (0xc8), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #255.1.1.num.int <54 (0x36)>
  [1] #254.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #249.1.2.mem <size 5>
IP: #217:0xca, type 8, 203[3]
GC: --#255.1.1.num.int
GC: --#254.1.1.num.int
GC: --#249.1.2.mem
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xce (0xca), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xce, type 8, 207[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xd4 (0xce), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 9, max 20>
IP: #217:0xd4, type 6, 213[1]
GC: ++#217.1.8.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xd6 (0xd4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #256.1.1.mem.code.ro <#217.1.9.mem.ro, ofs 0xd5, size 1>
  [1] #225.1.2.array <size 9, max 20>
IP: #217:0xd6, type 8, 215[6]
GC: ++#227.1.1.num.int
GC: ++#256.1.1.mem.code.ro
GC: ++#225.1.2.array
GC: --#256.1.2.mem.code.ro
GC: --#225.1.3.array
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
GC: ++#222.1.1.num.int
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.2.num.int <20 (0x14)>
  [1] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
GC: ++#223.1.1.num.int
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #223.1.2.num.int <30 (0x1e)>
  [1] #222.1.2.num.int <20 (0x14)>
  [2] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
GC: ++#230.1.1.num.int
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #230.1.2.num.int <400 (0x190)>
  [1] #223.1.2.num.int <30 (0x1e)>
  [2] #222.1.2.num.int <20 (0x14)>
  [3] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
GC: ++#232.1.1.num.int
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #232.1.2.num.int <500 (0x1f4)>
  [1] #230.1.2.num.int <400 (0x190)>
  [2] #223.1.2.num.int <30 (0x1e)>
  [3] #222.1.2.num.int <20 (0x14)>
  [4] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 6, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #232.1.2.num.int <500 (0x1f4)>
  [2] #230.1.2.num.int <400 (0x190)>
  [3] #223.1.2.num.int <30 (0x1e)>
  [4] #222.1.2.num.int <20 (0x14)>
  [5] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 7, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #0.0.nil <nil>
  [2] #232.1.2.num.int <500 (0x1f4)>
  [3] #230.1.2.num.int <400 (0x190)>
  [4] #223.1.2.num.int <30 (0x1e)>
  [5] #222.1.2.num.int <20 (0x14)>
  [6] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 8, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #232.1.2.num.int <500 (0x1f4)>
  [4] #230.1.2.num.int <400 (0x190)>
  [5] #223.1.2.num.int <30 (0x1e)>
  [6] #222.1.2.num.int <20 (0x14)>
  [7] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
GC: ++#234.1.1.num.int
== backtrace ==
  [0] #257.1.1.ctx.forall <code #256.1.1.mem.code.ro, ip 0x0 (0x0), index 9, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #234.1.2.num.int <900 (0x384)>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #232.1.2.num.int <500 (0x1f4)>
  [5] #230.1.2.num.int <400 (0x190)>
  [6] #223.1.2.num.int <30 (0x1e)>
  [7] #222.1.2.num.int <20 (0x14)>
  [8] #227.1.2.num.int <100 (0x64)>
IP: #256:0x0, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#257.1.1.ctx.forall
GC: --#219.1.2.ctx.func
GC: --#256.1.1.mem.code.ro
GC: --#225.1.2.array
GC: --#217.1.9.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xdd (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #234.1.2.num.int <900 (0x384)>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #232.1.2.num.int <500 (0x1f4)>
  [5] #230.1.2.num.int <400 (0x190)>
  [6] #223.1.2.num.int <30 (0x1e)>
  [7] #222.1.2.num.int <20 (0x14)>
  [8] #227.1.2.num.int <100 (0x64)>
IP: #217:0xdd, type 8, 222[5]
GC: ++#242.1.1.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xe3 (0xdd), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.hash <size 4, max 19>
  [1] #234.1.2.num.int <900 (0x384)>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #232.1.2.num.int <500 (0x1f4)>
  [6] #230.1.2.num.int <400 (0x190)>
  [7] #223.1.2.num.int <30 (0x1e)>
  [8] #222.1.2.num.int <20 (0x14)>
  [9] #227.1.2.num.int <100 (0x64)>
IP: #217:0xe3, type 6, 228[1]
GC: ++#217.1.8.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xe5 (0xe3), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #221.2.1.mem.code.ro <#217.1.9.mem.ro, ofs 0xe4, size 1>
  [1] #242.1.2.hash <size 4, max 19>
  [2] #234.1.2.num.int <900 (0x384)>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #0.0.nil <nil>
  [6] #232.1.2.num.int <500 (0x1f4)>
  [7] #230.1.2.num.int <400 (0x190)>
  [8] #223.1.2.num.int <30 (0x1e)>
  [9] #222.1.2.num.int <20 (0x14)>
  [10] #227.1.2.num.int <100 (0x64)>
IP: #217:0xe5, type 8, 230[6]
GC: ++#236.1.1.mem.str.ro
GC: ++#237.1.1.num.int
GC: ++#221.2.1.mem.code.ro
GC: ++#242.1.2.hash
GC: --#221.2.2.mem.code.ro
GC: --#242.1.3.hash
== backtrace ==
  [0] #224.2.1.ctx.forall <code #221.2.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #242.1.2.hash>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xec (0xe5), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #237.1.2.num.int <11 (0xb)>
  [1] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [2] #234.1.2.num.int <900 (0x384)>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #0.0.nil <nil>
  [6] #232.1.2.num.int <500 (0x1f4)>
  [7] #230.1.2.num.int <400 (0x190)>
  [8] #223.1.2.num.int <30 (0x1e)>
  [9] #222.1.2.num.int <20 (0x14)>
  [10] #227.1.2.num.int <100 (0x64)>
IP: #221:0x0, type 3, 1 (0x1)
GC: ++#243.1.1.mem.str.ro
GC: ++#244.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #221.2.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #242.1.2.hash>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xec (0xe5), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.num.int <222 (0xde)>
  [1] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [2] #237.1.2.num.int <11 (0xb)>
  [3] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [4] #234.1.2.num.int <900 (0x384)>
  [5] #0.0.nil <nil>
  [6] #0.0.nil <nil>
  [7] #0.0.nil <nil>
  [8] #232.1.2.num.int <500 (0x1f4)>
  [9] #230.1.2.num.int <400 (0x190)>
  [10] #223.1.2.num.int <30 (0x1e)>
  [11] #222.1.2.num.int <20 (0x14)>
  [12] #227.1.2.num.int <100 (0x64)>
IP: #221:0x0, type 3, 1 (0x1)
GC: ++#240.1.1.mem.str.ro
GC: ++#241.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #221.2.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #242.1.2.hash>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xec (0xe5), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.1.2.num.int <33 (0x21)>
  [1] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [2] #244.1.2.num.int <222 (0xde)>
  [3] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [4] #237.1.2.num.int <11 (0xb)>
  [5] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [6] #234.1.2.num.int <900 (0x384)>
  [7] #0.0.nil <nil>
  [8] #0.0.nil <nil>
  [9] #0.0.nil <nil>
  [10] #232.1.2.num.int <500 (0x1f4)>
  [11] #230.1.2.num.int <400 (0x190)>
  [12] #223.1.2.num.int <30 (0x1e)>
  [13] #222.1.2.num.int <20 (0x14)>
  [14] #227.1.2.num.int <100 (0x64)>
IP: #221:0x0, type 3, 1 (0x1)
GC: ++#245.1.1.mem.str.ro
GC: ++#246.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #221.2.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #242.1.2.hash>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xec (0xe5), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.1.2.num.int <444 (0x1bc)>
  [1] #245.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [2] #241.1.2.num.int <33 (0x21)>
  [3] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [4] #244.1.2.num.int <222 (0xde)>
  [5] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [6] #237.1.2.num.int <11 (0xb)>
  [7] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [8] #234.1.2.num.int <900 (0x384)>
  [9] #0.0.nil <nil>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #232.1.2.num.int <500 (0x1f4)>
  [13] #230.1.2.num.int <400 (0x190)>
  [14] #223.1.2.num.int <30 (0x1e)>
  [15] #222.1.2.num.int <20 (0x14)>
  [16] #227.1.2.num.int <100 (0x64)>
IP: #221:0x0, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#224.2.1.ctx.forall
GC: --#219.1.2.ctx.func
GC: --#221.2.1.mem.code.ro
GC: --#242.1.2.hash
GC: --#217.1.9.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xec (0xe5), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.1.2.num.int <444 (0x1bc)>
  [1] #245.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x8b, size 2, "dd">
  [2] #241.1.2.num.int <33 (0x21)>
  [3] #240.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x6a, size 2, "cc">
  [4] #244.1.2.num.int <222 (0xde)>
  [5] #243.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x7b, size 2, "bb">
  [6] #237.1.2.num.int <11 (0xb)>
  [7] #236.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x60, size 2, "aa">
  [8] #234.1.2.num.int <900 (0x384)>
  [9] #0.0.nil <nil>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #232.1.2.num.int <500 (0x1f4)>
  [13] #230.1.2.num.int <400 (0x190)>
  [14] #223.1.2.num.int <30 (0x1e)>
  [15] #222.1.2.num.int <20 (0x14)>
  [16] #227.1.2.num.int <100 (0x64)>
IP: #217:0xec, type 8, 237[5]
GC: ++#249.1.1.mem
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xf2 (0xec), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.2.mem <size 5>
  [1] #246.1.2.num.int <444 (0x1bc)>
  [2] #245.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x8b, size 2, "dd">
  [3] #241.1.2.num.int <33 (0x21)>
  [4] #240.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x6a, size 2, "cc">
  [5] #244.1.2.num.int <222 (0xde)>
  [6] #243.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x7b, size 2, "bb">
  [7] #237.1.2.num.int <11 (0xb)>
  [8] #236.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x60, size 2, "aa">
  [9] #234.1.2.num.int <900 (0x384)>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #232.1.2.num.int <500 (0x1f4)>
  [14] #230.1.2.num.int <400 (0x190)>
  [15] #223.1.2.num.int <30 (0x1e)>
  [16] #222.1.2.num.int <20 (0x14)>
  [17] #227.1.2.num.int <100 (0x64)>
IP: #217:0xf2, type 6, 243[1]
GC: ++#217.1.8.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xf4 (0xf2), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #226.2.1.mem.code.ro <#217.1.9.mem.ro, ofs 0xf3, size 1>
  [1] #249.1.2.mem <size 5>
  [2] #246.1.2.num.int <444 (0x1bc)>
  [3] #245.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [4] #241.1.2.num.int <33 (0x21)>
  [5] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [6] #244.1.2.num.int <222 (0xde)>
  [7] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [8] #237.1.2.num.int <11 (0xb)>
  [9] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [10] #234.1.2.num.int <900 (0x384)>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #0.0.nil <nil>
  [14] #232.1.2.num.int <500 (0x1f4)>
  [15] #230.1.2.num.int <400 (0x190)>
  [16] #223.1.2.num.int <30 (0x1e)>
  [17] #222.1.2.num.int <20 (0x14)>
  [18] #227.1.2.num.int <100 (0x64)>
IP: #217:0xf4, type 8, 245[6]
GC: ++#226.2.1.mem.code.ro
GC: ++#249.1.2.mem
GC: --#226.2.2.mem.code.ro
GC: --#249.1.3.mem
== backtrace ==
  [0] #231.2.1.ctx.forall <code #226.2.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #249.1.2.mem>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xfb (0xf4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.2.1.num.int <65 (0x41)>
  [1] #246.1.2.num.int <444 (0x1bc)>
  [2] #245.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [3] #241.1.2.num.int <33 (0x21)>
  [4] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [5] #244.1.2.num.int <222 (0xde)>
  [6] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [7] #237.1.2.num.int <11 (0xb)>
  [8] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [9] #234.1.2.num.int <900 (0x384)>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #232.1.2.num.int <500 (0x1f4)>
  [14] #230.1.2.num.int <400 (0x190)>
  [15] #223.1.2.num.int <30 (0x1e)>
  [16] #222.1.2.num.int <20 (0x14)>
  [17] #227.1.2.num.int <100 (0x64)>
IP: #226:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.2.1.ctx.forall <code #226.2.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #249.1.2.mem>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xfb (0xf4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #233.2.1.num.int <0 (0x0)>
  [1] #229.2.1.num.int <65 (0x41)>
  [2] #246.1.2.num.int <444 (0x1bc)>
  [3] #245.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [4] #241.1.2.num.int <33 (0x21)>
  [5] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [6] #244.1.2.num.int <222 (0xde)>
  [7] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [8] #237.1.2.num.int <11 (0xb)>
  [9] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [10] #234.1.2.num.int <900 (0x384)>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #0.0.nil <nil>
  [14] #232.1.2.num.int <500 (0x1f4)>
  [15] #230.1.2.num.int <400 (0x190)>
  [16] #223.1.2.num.int <30 (0x1e)>
  [17] #222.1.2.num.int <20 (0x14)>
  [18] #227.1.2.num.int <100 (0x64)>
IP: #226:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.2.1.ctx.forall <code #226.2.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #249.1.2.mem>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xfb (0xf4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #238.2.1.num.int <0 (0x0)>
  [1] #233.2.1.num.int <0 (0x0)>
  [2] #229.2.1.num.int <65 (0x41)>
  [3] #246.1.2.num.int <444 (0x1bc)>
  [4] #245.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [5] #241.1.2.num.int <33 (0x21)>
  [6] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [7] #244.1.2.num.int <222 (0xde)>
  [8] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [9] #237.1.2.num.int <11 (0xb)>
  [10] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [11] #234.1.2.num.int <900 (0x384)>
  [12] #0.0.nil <nil>
  [13] #0.0.nil <nil>
  [14] #0.0.nil <nil>
  [15] #232.1.2.num.int <500 (0x1f4)>
  [16] #230.1.2.num.int <400 (0x190)>
  [17] #223.1.2.num.int <30 (0x1e)>
  [18] #222.1.2.num.int <20 (0x14)>
  [19] #227.1.2.num.int <100 (0x64)>
IP: #226:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.2.1.ctx.forall <code #226.2.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #249.1.2.mem>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xfb (0xf4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #239.2.1.num.int <53 (0x35)>
  [1] #238.2.1.num.int <0 (0x0)>
  [2] #233.2.1.num.int <0 (0x0)>
  [3] #229.2.1.num.int <65 (0x41)>
  [4] #246.1.2.num.int <444 (0x1bc)>
  [5] #245.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [6] #241.1.2.num.int <33 (0x21)>
  [7] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [8] #244.1.2.num.int <222 (0xde)>
  [9] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [10] #237.1.2.num.int <11 (0xb)>
  [11] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [12] #234.1.2.num.int <900 (0x384)>
  [13] #0.0.nil <nil>
  [14] #0.0.nil <nil>
  [15] #0.0.nil <nil>
  [16] #232.1.2.num.int <500 (0x1f4)>
  [17] #230.1.2.num.int <400 (0x190)>
  [18] #223.1.2.num.int <30 (0x1e)>
  [19] #222.1.2.num.int <20 (0x14)>
  [20] #227.1.2.num.int <100 (0x64)>
IP: #226:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.2.1.ctx.forall <code #226.2.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #249.1.2.mem>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xfb (0xf4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #248.2.1.num.int <54 (0x36)>
  [1] #239.2.1.num.int <53 (0x35)>
  [2] #238.2.1.num.int <0 (0x0)>
  [3] #233.2.1.num.int <0 (0x0)>
  [4] #229.2.1.num.int <65 (0x41)>
  [5] #246.1.2.num.int <444 (0x1bc)>
  [6] #245.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x8b, size 2, "dd">
  [7] #241.1.2.num.int <33 (0x21)>
  [8] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x6a, size 2, "cc">
  [9] #244.1.2.num.int <222 (0xde)>
  [10] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7b, size 2, "bb">
  [11] #237.1.2.num.int <11 (0xb)>
  [12] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x60, size 2, "aa">
  [13] #234.1.2.num.int <900 (0x384)>
  [14] #0.0.nil <nil>
  [15] #0.0.nil <nil>
  [16] #0.0.nil <nil>
  [17] #232.1.2.num.int <500 (0x1f4)>
  [18] #230.1.2.num.int <400 (0x190)>
  [19] #223.1.2.num.int <30 (0x1e)>
  [20] #222.1.2.num.int <20 (0x14)>
  [21] #227.1.2.num.int <100 (0x64)>
IP: #226:0x0, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#231.2.1.ctx.forall
GC: --#219.1.2.ctx.func
GC: --#226.2.1.mem.code.ro
GC: --#249.1.2.mem
GC: --#217.1.9.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xfb (0xf4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #248.2.1.num.int <54 (0x36)>
  [1] #239.2.1.num.int <53 (0x35)>
  [2] #238.2.1.num.int <0 (0x0)>
  [3] #233.2.1.num.int <0 (0x0)>
  [4] #229.2.1.num.int <65 (0x41)>
  [5] #246.1.2.num.int <444 (0x1bc)>
  [6] #245.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x8b, size 2, "dd">
  [7] #241.1.2.num.int <33 (0x21)>
  [8] #240.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x6a, size 2, "cc">
  [9] #244.1.2.num.int <222 (0xde)>
  [10] #243.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x7b, size 2, "bb">
  [11] #237.1.2.num.int <11 (0xb)>
  [12] #236.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x60, size 2, "aa">
  [13] #234.1.2.num.int <900 (0x384)>
  [14] #0.0.nil <nil>
  [15] #0.0.nil <nil>
  [16] #0.0.nil <nil>
  [17] #232.1.2.num.int <500 (0x1f4)>
  [18] #230.1.2.num.int <400 (0x190)>
  [19] #223.1.2.num.int <30 (0x1e)>
  [20] #222.1.2.num.int <20 (0x14)>
  [21] #227.1.2.num.int <100 (0x64)>
