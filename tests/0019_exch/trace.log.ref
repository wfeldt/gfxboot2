# ---  trace  ---
IP: #203:0x0, type 5, 1[7]
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x8, type 1, 100 (0x64)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0xa (0x8), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #206.1.1.num.int <100 (0x64)>
IP: #203:0xa, type 1, 200 (0xc8)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0xd (0xa), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #207.1.1.num.int <200 (0xc8)>
  [1] #206.1.1.num.int <100 (0x64)>
IP: #203:0xd, type 1, 300 (0x12c)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x10 (0xd), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #208.1.1.num.int <300 (0x12c)>
  [1] #207.1.1.num.int <200 (0xc8)>
  [2] #206.1.1.num.int <100 (0x64)>
IP: #203:0x10, type 1, 400 (0x190)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x13 (0x10), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.1.num.int <400 (0x190)>
  [1] #208.1.1.num.int <300 (0x12c)>
  [2] #207.1.1.num.int <200 (0xc8)>
  [3] #206.1.1.num.int <100 (0x64)>
IP: #203:0x13, type 8, 20[4]
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x18 (0x13), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #208.1.1.num.int <300 (0x12c)>
  [1] #209.1.1.num.int <400 (0x190)>
  [2] #207.1.1.num.int <200 (0xc8)>
  [3] #206.1.1.num.int <100 (0x64)>
