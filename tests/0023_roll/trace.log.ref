# ---  trace  ---
IP: #201:0x0, type 5, 1[7]
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
IP: #201:0x8, type 1, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x9 (0x8), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #204.1.1.num.int <1 (0x1)>
IP: #201:0x9, type 1, 2 (0x2)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0xa (0x9), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #205.1.1.num.int <2 (0x2)>
  [1] #204.1.1.num.int <1 (0x1)>
IP: #201:0xa, type 1, 3 (0x3)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0xb (0xa), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #206.1.1.num.int <3 (0x3)>
  [1] #205.1.1.num.int <2 (0x2)>
  [2] #204.1.1.num.int <1 (0x1)>
IP: #201:0xb, type 1, 4 (0x4)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0xc (0xb), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #207.1.1.num.int <4 (0x4)>
  [1] #206.1.1.num.int <3 (0x3)>
  [2] #205.1.1.num.int <2 (0x2)>
  [3] #204.1.1.num.int <1 (0x1)>
IP: #201:0xc, type 1, 5 (0x5)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0xd (0xc), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #208.1.1.num.int <5 (0x5)>
  [1] #207.1.1.num.int <4 (0x4)>
  [2] #206.1.1.num.int <3 (0x3)>
  [3] #205.1.1.num.int <2 (0x2)>
  [4] #204.1.1.num.int <1 (0x1)>
IP: #201:0xd, type 1, 6 (0x6)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0xe (0xd), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #209.1.1.num.int <6 (0x6)>
  [1] #208.1.1.num.int <5 (0x5)>
  [2] #207.1.1.num.int <4 (0x4)>
  [3] #206.1.1.num.int <3 (0x3)>
  [4] #205.1.1.num.int <2 (0x2)>
  [5] #204.1.1.num.int <1 (0x1)>
IP: #201:0xe, type 1, 7 (0x7)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0xf (0xe), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #210.1.1.num.int <7 (0x7)>
  [1] #209.1.1.num.int <6 (0x6)>
  [2] #208.1.1.num.int <5 (0x5)>
  [3] #207.1.1.num.int <4 (0x4)>
  [4] #206.1.1.num.int <3 (0x3)>
  [5] #205.1.1.num.int <2 (0x2)>
  [6] #204.1.1.num.int <1 (0x1)>
IP: #201:0xf, type 1, 7 (0x7)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x10 (0xf), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #211.1.1.num.int <7 (0x7)>
  [1] #210.1.1.num.int <7 (0x7)>
  [2] #209.1.1.num.int <6 (0x6)>
  [3] #208.1.1.num.int <5 (0x5)>
  [4] #207.1.1.num.int <4 (0x4)>
  [5] #206.1.1.num.int <3 (0x3)>
  [6] #205.1.1.num.int <2 (0x2)>
  [7] #204.1.1.num.int <1 (0x1)>
IP: #201:0x10, type 1, 1 (0x1)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x11 (0x10), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #212.1.1.num.int <1 (0x1)>
  [1] #211.1.1.num.int <7 (0x7)>
  [2] #210.1.1.num.int <7 (0x7)>
  [3] #209.1.1.num.int <6 (0x6)>
  [4] #208.1.1.num.int <5 (0x5)>
  [5] #207.1.1.num.int <4 (0x4)>
  [6] #206.1.1.num.int <3 (0x3)>
  [7] #205.1.1.num.int <2 (0x2)>
  [8] #204.1.1.num.int <1 (0x1)>
IP: #201:0x11, type 8, 18[4]
GC: --#212.1.1.num.int
GC: --#211.1.1.num.int
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x16 (0x11), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #209.1.1.num.int <6 (0x6)>
  [1] #208.1.1.num.int <5 (0x5)>
  [2] #207.1.1.num.int <4 (0x4)>
  [3] #206.1.1.num.int <3 (0x3)>
  [4] #205.1.1.num.int <2 (0x2)>
  [5] #204.1.1.num.int <1 (0x1)>
  [6] #210.1.1.num.int <7 (0x7)>
IP: #201:0x16, type 1, 5 (0x5)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x17 (0x16), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #214.1.1.num.int <5 (0x5)>
  [1] #209.1.1.num.int <6 (0x6)>
  [2] #208.1.1.num.int <5 (0x5)>
  [3] #207.1.1.num.int <4 (0x4)>
  [4] #206.1.1.num.int <3 (0x3)>
  [5] #205.1.1.num.int <2 (0x2)>
  [6] #204.1.1.num.int <1 (0x1)>
  [7] #210.1.1.num.int <7 (0x7)>
IP: #201:0x17, type 1, -2 (0xfffffffffffffffe)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x19 (0x17), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #215.1.1.num.int <-2 (0xfffffffffffffffe)>
  [1] #214.1.1.num.int <5 (0x5)>
  [2] #209.1.1.num.int <6 (0x6)>
  [3] #208.1.1.num.int <5 (0x5)>
  [4] #207.1.1.num.int <4 (0x4)>
  [5] #206.1.1.num.int <3 (0x3)>
  [6] #205.1.1.num.int <2 (0x2)>
  [7] #204.1.1.num.int <1 (0x1)>
  [8] #210.1.1.num.int <7 (0x7)>
IP: #201:0x19, type 8, 26[4]
GC: --#215.1.1.num.int
GC: --#214.1.1.num.int
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x1e (0x19), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #206.1.1.num.int <3 (0x3)>
  [1] #205.1.1.num.int <2 (0x2)>
  [2] #209.1.1.num.int <6 (0x6)>
  [3] #208.1.1.num.int <5 (0x5)>
  [4] #207.1.1.num.int <4 (0x4)>
  [5] #204.1.1.num.int <1 (0x1)>
  [6] #210.1.1.num.int <7 (0x7)>
IP: #201:0x1e, type 1, 0 (0x0)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x1f (0x1e), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #216.1.1.num.int <0 (0x0)>
  [1] #206.1.1.num.int <3 (0x3)>
  [2] #205.1.1.num.int <2 (0x2)>
  [3] #209.1.1.num.int <6 (0x6)>
  [4] #208.1.1.num.int <5 (0x5)>
  [5] #207.1.1.num.int <4 (0x4)>
  [6] #204.1.1.num.int <1 (0x1)>
  [7] #210.1.1.num.int <7 (0x7)>
IP: #201:0x1f, type 1, 0 (0x0)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x20 (0x1f), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #217.1.1.num.int <0 (0x0)>
  [1] #216.1.1.num.int <0 (0x0)>
  [2] #206.1.1.num.int <3 (0x3)>
  [3] #205.1.1.num.int <2 (0x2)>
  [4] #209.1.1.num.int <6 (0x6)>
  [5] #208.1.1.num.int <5 (0x5)>
  [6] #207.1.1.num.int <4 (0x4)>
  [7] #204.1.1.num.int <1 (0x1)>
  [8] #210.1.1.num.int <7 (0x7)>
IP: #201:0x20, type 8, 33[4]
GC: --#217.1.1.num.int
GC: --#216.1.1.num.int
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x25 (0x20), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #206.1.1.num.int <3 (0x3)>
  [1] #205.1.1.num.int <2 (0x2)>
  [2] #209.1.1.num.int <6 (0x6)>
  [3] #208.1.1.num.int <5 (0x5)>
  [4] #207.1.1.num.int <4 (0x4)>
  [5] #204.1.1.num.int <1 (0x1)>
  [6] #210.1.1.num.int <7 (0x7)>
IP: #201:0x25, type 1, 7 (0x7)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x26 (0x25), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #218.1.1.num.int <7 (0x7)>
  [1] #206.1.1.num.int <3 (0x3)>
  [2] #205.1.1.num.int <2 (0x2)>
  [3] #209.1.1.num.int <6 (0x6)>
  [4] #208.1.1.num.int <5 (0x5)>
  [5] #207.1.1.num.int <4 (0x4)>
  [6] #204.1.1.num.int <1 (0x1)>
  [7] #210.1.1.num.int <7 (0x7)>
IP: #201:0x26, type 1, 0 (0x0)
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x27 (0x26), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #219.1.1.num.int <0 (0x0)>
  [1] #218.1.1.num.int <7 (0x7)>
  [2] #206.1.1.num.int <3 (0x3)>
  [3] #205.1.1.num.int <2 (0x2)>
  [4] #209.1.1.num.int <6 (0x6)>
  [5] #208.1.1.num.int <5 (0x5)>
  [6] #207.1.1.num.int <4 (0x4)>
  [7] #204.1.1.num.int <1 (0x1)>
  [8] #210.1.1.num.int <7 (0x7)>
IP: #201:0x27, type 8, 40[4]
GC: --#219.1.1.num.int
GC: --#218.1.1.num.int
== backtrace ==
  [0] #203.1.1.ctx.func <code #201.1.1.mem.ro, ip 0x2c (0x27), dict #8.1.2.hash>
== stack (#202.1.1.array) ==
  [0] #206.1.1.num.int <3 (0x3)>
  [1] #205.1.1.num.int <2 (0x2)>
  [2] #209.1.1.num.int <6 (0x6)>
  [3] #208.1.1.num.int <5 (0x5)>
  [4] #207.1.1.num.int <4 (0x4)>
  [5] #204.1.1.num.int <1 (0x1)>
  [6] #210.1.1.num.int <7 (0x7)>
