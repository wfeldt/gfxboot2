# ---  trace  ---
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.2.mem.ro, "foo_1">
GC: ++#xxxx.1.2.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.3.mem.ro>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.3.mem.ro, "foo_1">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.3.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.4.mem.ro, "foo_2">
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo_1">
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo_2">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.mem.ref.ro
GC: --#xxxx.1.2.mem.ref.ro
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.5.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.6.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.6.mem.ro, "foo_3">
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.6.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <50 (0x32)>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.6.mem.ro, "foo_3">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.num.int
GC: --#xxxx.1.2.num.int
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.6.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.6.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.7.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.7.mem.ro, "foo_4">
GC: ++#xxxx.1.1.num.prim
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.7.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.num.prim <4 (0x4)>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.7.mem.ro, "foo_4">
GC: ++#xxxx.1.7.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.8.mem.ro, "foo_5">
  [1] #xxxx.1.2.num.prim <4 (0x4)>
  [2] #xxxx.1.1.mem.ref.ro <#xxxx.1.8.mem.ro, "foo_4">
GC: ++#xxxx.1.8.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [1] #xxxx.1.1.mem.str.ro <#xxxx.1.9.mem.ro, "foo_5">
  [2] #xxxx.1.2.num.prim <4 (0x4)>
  [3] #xxxx.1.1.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_4">
GC: --#xxxx.1.2.num.prim
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.hash <size 1, max 1>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_4">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.hash
GC: --#xxxx.1.2.hash
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.9.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.1.mem.ref.ro
GC: --#xxxx.1.10.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.func
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.2.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.9.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.10.mem.ro>
  [1] #xxxx.1.1.num.int <20 (0x14)>
  [2] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <300 (0x12c)>
  [1] #xxxx.1.1.num.int <20 (0x14)>
  [2] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <400 (0x190)>
  [1] #xxxx.1.1.num.int <300 (0x12c)>
  [2] #xxxx.1.1.num.int <20 (0x14)>
  [3] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.func
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.10.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <400 (0x190)>
  [1] #xxxx.1.1.num.int <300 (0x12c)>
  [2] #xxxx.1.1.num.int <20 (0x14)>
  [3] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.9.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_2">
  [1] #xxxx.1.1.num.int <400 (0x190)>
  [2] #xxxx.1.1.num.int <300 (0x12c)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.ref.ro
GC: --#xxxx.1.1.mem.ref.ro
GC: --#xxxx.1.10.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [1] #xxxx.1.1.num.int <400 (0x190)>
  [2] #xxxx.1.1.num.int <300 (0x12c)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.3.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [1] #xxxx.1.3.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [2] #xxxx.1.1.num.int <400 (0x190)>
  [3] #xxxx.1.1.num.int <300 (0x12c)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.3.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [1] #xxxx.1.1.num.int <400 (0x190)>
  [2] #xxxx.1.1.num.int <300 (0x12c)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <10 (0xa)>
  [1] #xxxx.1.2.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [2] #xxxx.1.1.num.int <400 (0x190)>
  [3] #xxxx.1.1.num.int <300 (0x12c)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
  [2] #xxxx.1.2.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [3] #xxxx.1.1.num.int <400 (0x190)>
  [4] #xxxx.1.1.num.int <300 (0x12c)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.func
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.2.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
  [2] #xxxx.1.2.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [3] #xxxx.1.1.num.int <400 (0x190)>
  [4] #xxxx.1.1.num.int <300 (0x12c)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.9.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_3">
  [1] #xxxx.1.1.num.int <20 (0x14)>
  [2] #xxxx.1.1.num.int <10 (0xa)>
  [3] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [4] #xxxx.1.1.num.int <400 (0x190)>
  [5] #xxxx.1.1.num.int <300 (0x12c)>
  [6] #xxxx.1.1.num.int <20 (0x14)>
  [7] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.num.int
GC: --#xxxx.1.1.mem.ref.ro
GC: --#xxxx.1.10.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.9.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.num.int <50 (0x32)>
  [1] #xxxx.1.1.num.int <20 (0x14)>
  [2] #xxxx.1.1.num.int <10 (0xa)>
  [3] #xxxx.1.2.mem.ref.ro <#xxxx.1.9.mem.ro, "foo_1">
  [4] #xxxx.1.1.num.int <400 (0x190)>
  [5] #xxxx.1.1.num.int <300 (0x12c)>
  [6] #xxxx.1.1.num.int <20 (0x14)>
  [7] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.9.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [1] #xxxx.1.2.num.int <50 (0x32)>
  [2] #xxxx.1.1.num.int <20 (0x14)>
  [3] #xxxx.1.1.num.int <10 (0xa)>
  [4] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [5] #xxxx.1.1.num.int <400 (0x190)>
  [6] #xxxx.1.1.num.int <300 (0x12c)>
  [7] #xxxx.1.1.num.int <20 (0x14)>
  [8] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.str.ro
GC: --#xxxx.1.2.mem.str.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [1] #xxxx.1.2.num.int <50 (0x32)>
  [2] #xxxx.1.1.num.int <20 (0x14)>
  [3] #xxxx.1.1.num.int <10 (0xa)>
  [4] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [5] #xxxx.1.1.num.int <400 (0x190)>
  [6] #xxxx.1.1.num.int <300 (0x12c)>
  [7] #xxxx.1.1.num.int <20 (0x14)>
  [8] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <30 (0x1e)>
  [1] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [2] #xxxx.1.2.num.int <50 (0x32)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
  [5] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [6] #xxxx.1.1.num.int <400 (0x190)>
  [7] #xxxx.1.1.num.int <300 (0x12c)>
  [8] #xxxx.1.1.num.int <20 (0x14)>
  [9] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.num.int
GC: --#xxxx.1.2.num.int
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <30 (0x1e)>
  [1] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [2] #xxxx.1.2.num.int <50 (0x32)>
  [3] #xxxx.1.1.num.int <20 (0x14)>
  [4] #xxxx.1.1.num.int <10 (0xa)>
  [5] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [6] #xxxx.1.1.num.int <400 (0x190)>
  [7] #xxxx.1.1.num.int <300 (0x12c)>
  [8] #xxxx.1.1.num.int <20 (0x14)>
  [9] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #xxxx.1.1.num.int <30 (0x1e)>
  [2] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [3] #xxxx.1.2.num.int <50 (0x32)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
  [6] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [7] #xxxx.1.1.num.int <400 (0x190)>
  [8] #xxxx.1.1.num.int <300 (0x12c)>
  [9] #xxxx.1.1.num.int <20 (0x14)>
  [10] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #xxxx.1.1.num.int <30 (0x1e)>
  [2] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [3] #xxxx.1.2.num.int <50 (0x32)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
  [6] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [7] #xxxx.1.1.num.int <400 (0x190)>
  [8] #xxxx.1.1.num.int <300 (0x12c)>
  [9] #xxxx.1.1.num.int <20 (0x14)>
  [10] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.hash <size 1, max 1>
  [1] #0.0.nil <nil>
  [2] #xxxx.1.1.num.int <30 (0x1e)>
  [3] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [4] #xxxx.1.2.num.int <50 (0x32)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
  [7] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [8] #xxxx.1.1.num.int <400 (0x190)>
  [9] #xxxx.1.1.num.int <300 (0x12c)>
  [10] #xxxx.1.1.num.int <20 (0x14)>
  [11] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.10.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.11.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.11.mem.ro, "foo_5">
  [1] #xxxx.1.2.hash <size 1, max 1>
  [2] #0.0.nil <nil>
  [3] #xxxx.1.1.num.int <30 (0x1e)>
  [4] #xxxx.1.1.mem.str.ro <#xxxx.1.11.mem.ro, "abc">
  [5] #xxxx.1.2.num.int <50 (0x32)>
  [6] #xxxx.1.1.num.int <20 (0x14)>
  [7] #xxxx.1.1.num.int <10 (0xa)>
  [8] #xxxx.1.2.mem.ref.ro <#xxxx.1.11.mem.ro, "foo_1">
  [9] #xxxx.1.1.num.int <400 (0x190)>
  [10] #xxxx.1.1.num.int <300 (0x12c)>
  [11] #xxxx.1.1.num.int <20 (0x14)>
  [12] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.ref.ro
GC: --#xxxx.1.1.mem.str.ro
GC: --#xxxx.1.11.mem.ro
GC: --#xxxx.1.2.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [1] #0.0.nil <nil>
  [2] #xxxx.1.1.num.int <30 (0x1e)>
  [3] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [4] #xxxx.1.2.num.int <50 (0x32)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
  [7] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [8] #xxxx.1.1.num.int <400 (0x190)>
  [9] #xxxx.1.1.num.int <300 (0x12c)>
  [10] #xxxx.1.1.num.int <20 (0x14)>
  [11] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #xxxx.1.1.num.int <30 (0x1e)>
  [2] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [3] #xxxx.1.2.num.int <50 (0x32)>
  [4] #xxxx.1.1.num.int <20 (0x14)>
  [5] #xxxx.1.1.num.int <10 (0xa)>
  [6] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [7] #xxxx.1.1.num.int <400 (0x190)>
  [8] #xxxx.1.1.num.int <300 (0x12c)>
  [9] #xxxx.1.1.num.int <20 (0x14)>
  [10] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <10 (0xa)>
  [1] #0.0.nil <nil>
  [2] #xxxx.1.1.num.int <30 (0x1e)>
  [3] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [4] #xxxx.1.2.num.int <50 (0x32)>
  [5] #xxxx.1.1.num.int <20 (0x14)>
  [6] #xxxx.1.1.num.int <10 (0xa)>
  [7] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [8] #xxxx.1.1.num.int <400 (0x190)>
  [9] #xxxx.1.1.num.int <300 (0x12c)>
  [10] #xxxx.1.1.num.int <20 (0x14)>
  [11] #xxxx.1.1.num.int <10 (0xa)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
  [2] #0.0.nil <nil>
  [3] #xxxx.1.1.num.int <30 (0x1e)>
  [4] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [5] #xxxx.1.2.num.int <50 (0x32)>
  [6] #xxxx.1.1.num.int <20 (0x14)>
  [7] #xxxx.1.1.num.int <10 (0xa)>
  [8] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [9] #xxxx.1.1.num.int <400 (0x190)>
  [10] #xxxx.1.1.num.int <300 (0x12c)>
  [11] #xxxx.1.1.num.int <20 (0x14)>
  [12] #xxxx.1.1.num.int <10 (0xa)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.func
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.2.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.10.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <20 (0x14)>
  [1] #xxxx.1.1.num.int <10 (0xa)>
  [2] #0.0.nil <nil>
  [3] #xxxx.1.1.num.int <30 (0x1e)>
  [4] #xxxx.1.1.mem.str.ro <#xxxx.1.10.mem.ro, "abc">
  [5] #xxxx.1.2.num.int <50 (0x32)>
  [6] #xxxx.1.1.num.int <20 (0x14)>
  [7] #xxxx.1.1.num.int <10 (0xa)>
  [8] #xxxx.1.2.mem.ref.ro <#xxxx.1.10.mem.ro, "foo_1">
  [9] #xxxx.1.1.num.int <400 (0x190)>
  [10] #xxxx.1.1.num.int <300 (0x12c)>
  [11] #xxxx.1.1.num.int <20 (0x14)>
  [12] #xxxx.1.1.num.int <10 (0xa)>
