# ---  trace  ---
IP: #203:0x0, type 5, 1[7]
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x8, type 9, 9[5]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xe (0x8), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #206.1.1.mem.ref.ro <#203.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #203:0xe, type 6, 15[5]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x14 (0xe), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #207.1.1.mem.code.ro <#203.1.3.mem.ro, ofs 0xf, size 5>
  [1] #206.1.1.mem.ref.ro <#203.1.3.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #203:0x14, type 8, 21[3]
GC: ++#206.1.1.mem.ref.ro
GC: ++#207.1.1.mem.code.ro
GC: --#207.1.2.mem.code.ro
GC: --#206.1.2.mem.ref.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x18 (0x14), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x18, type 9, 25[5]
GC: ++#203.1.3.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.4.mem.ro, ip 0x1e (0x18), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #208.1.1.mem.ref.ro <#203.1.4.mem.ro, ofs 0x19, size 5, "foo_2">
IP: #203:0x1e, type 9, 31[5]
GC: ++#203.1.4.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x24 (0x1e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.1.mem.ref.ro <#203.1.5.mem.ro, ofs 0x1f, size 5, "foo_1">
  [1] #208.1.1.mem.ref.ro <#203.1.5.mem.ro, ofs 0x19, size 5, "foo_2">
IP: #203:0x24, type 8, 37[3]
GC: ++#208.1.1.mem.ref.ro
GC: ++#209.1.1.mem.ref.ro
GC: --#209.1.2.mem.ref.ro
GC: --#208.1.2.mem.ref.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x28 (0x24), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x28, type 9, 41[5]
GC: ++#203.1.5.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x2e (0x28), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #210.1.1.mem.ref.ro <#203.1.6.mem.ro, ofs 0x29, size 5, "foo_3">
IP: #203:0x2e, type 1, 50 (0x32)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x30 (0x2e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #211.1.1.num.int <50 (0x32)>
  [1] #210.1.1.mem.ref.ro <#203.1.6.mem.ro, ofs 0x29, size 5, "foo_3">
IP: #203:0x30, type 8, 49[3]
GC: ++#210.1.1.mem.ref.ro
GC: ++#211.1.1.num.int
GC: --#211.1.2.num.int
GC: --#210.1.2.mem.ref.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x34 (0x30), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x34, type 9, 53[5]
GC: ++#203.1.6.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.7.mem.ro, ip 0x3a (0x34), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #212.1.1.mem.ref.ro <#203.1.7.mem.ro, ofs 0x35, size 5, "foo_4">
IP: #203:0x3a, type 8, 59[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.7.mem.ro, ip 0x3c (0x3a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #212.1.1.mem.ref.ro <#203.1.7.mem.ro, ofs 0x35, size 5, "foo_4">
IP: #203:0x3c, type 7, 61[5]
GC: ++#203.1.7.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.8.mem.ro, ip 0x42 (0x3c), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #213.1.1.mem.str.ro <#203.1.8.mem.ro, ofs 0x3d, size 5, "foo_5">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #212.1.1.mem.ref.ro <#203.1.8.mem.ro, ofs 0x35, size 5, "foo_4">
IP: #203:0x42, type 9, 67[5]
GC: ++#203.1.8.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x48 (0x42), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #214.1.1.mem.ref.ro <#203.1.9.mem.ro, ofs 0x43, size 5, "foo_1">
  [1] #213.1.1.mem.str.ro <#203.1.9.mem.ro, ofs 0x3d, size 5, "foo_5">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #212.1.1.mem.ref.ro <#203.1.9.mem.ro, ofs 0x35, size 5, "foo_4">
IP: #203:0x48, type 8, 73[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x4a (0x48), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #215.1.1.hash <size 1, max 1>
  [1] #212.1.1.mem.ref.ro <#203.1.9.mem.ro, ofs 0x35, size 5, "foo_4">
IP: #203:0x4a, type 8, 75[3]
GC: ++#212.1.1.mem.ref.ro
GC: ++#215.1.1.hash
GC: --#215.1.2.hash
GC: --#212.1.2.mem.ref.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x4e (0x4a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x4e, type 9, 79[5]
GC: ++#203.1.9.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x54 (0x4e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #216.1.1.mem.ref.ro <#203.1.10.mem.ro, ofs 0x4f, size 5, "foo_1">
IP: #203:0x54, type 8, 85[4]
GC: ++#207.1.1.mem.code.ro
GC: --#216.1.1.mem.ref.ro
GC: --#203.1.10.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x59 (0x54), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #207:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #217.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x2 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x59 (0x54), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #219.1.1.num.int <10 (0xa)>
IP: #207:0x2, type 1, 20 (0x14)
== backtrace ==
  [0] #217.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x4 (0x2)>
  [1] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x59 (0x54), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #220.1.1.num.int <20 (0x14)>
  [1] #219.1.1.num.int <10 (0xa)>
IP: #207:0x4, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#217.1.1.ctx.func
GC: --#205.1.2.ctx.func
GC: --#207.1.2.mem.code.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x59 (0x54), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #220.1.1.num.int <20 (0x14)>
  [1] #219.1.1.num.int <10 (0xa)>
IP: #203:0x59, type 6, 90[7]
GC: ++#203.1.9.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x61 (0x59), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #221.1.1.mem.code.ro <#203.1.10.mem.ro, ofs 0x5a, size 7>
  [1] #220.1.1.num.int <20 (0x14)>
  [2] #219.1.1.num.int <10 (0xa)>
IP: #203:0x61, type 8, 98[4]
GC: ++#221.1.1.mem.code.ro
GC: --#221.1.2.mem.code.ro
== backtrace ==
  [0] #222.1.1.ctx.func <code #221.1.1.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x66 (0x61), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #220.1.1.num.int <20 (0x14)>
  [1] #219.1.1.num.int <10 (0xa)>
IP: #221:0x0, type 1, 300 (0x12c)
== backtrace ==
  [0] #222.1.1.ctx.func <code #221.1.1.mem.code.ro, ip 0x3 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x66 (0x61), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #223.1.1.num.int <300 (0x12c)>
  [1] #220.1.1.num.int <20 (0x14)>
  [2] #219.1.1.num.int <10 (0xa)>
IP: #221:0x3, type 1, 400 (0x190)
== backtrace ==
  [0] #222.1.1.ctx.func <code #221.1.1.mem.code.ro, ip 0x6 (0x3)>
  [1] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x66 (0x61), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #224.1.1.num.int <400 (0x190)>
  [1] #223.1.1.num.int <300 (0x12c)>
  [2] #220.1.1.num.int <20 (0x14)>
  [3] #219.1.1.num.int <10 (0xa)>
IP: #221:0x6, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#222.1.1.ctx.func
GC: --#205.1.2.ctx.func
GC: --#221.1.1.mem.code.ro
GC: --#203.1.10.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x66 (0x61), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #224.1.1.num.int <400 (0x190)>
  [1] #223.1.1.num.int <300 (0x12c)>
  [2] #220.1.1.num.int <20 (0x14)>
  [3] #219.1.1.num.int <10 (0xa)>
IP: #203:0x66, type 9, 103[5]
GC: ++#203.1.9.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x6c (0x66), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #225.1.1.mem.ref.ro <#203.1.10.mem.ro, ofs 0x67, size 5, "foo_2">
  [1] #224.1.1.num.int <400 (0x190)>
  [2] #223.1.1.num.int <300 (0x12c)>
  [3] #220.1.1.num.int <20 (0x14)>
  [4] #219.1.1.num.int <10 (0xa)>
IP: #203:0x6c, type 8, 109[4]
GC: ++#209.1.1.mem.ref.ro
GC: --#225.1.1.mem.ref.ro
GC: --#203.1.10.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x71 (0x6c), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.2.mem.ref.ro <#203.1.9.mem.ro, ofs 0x1f, size 5, "foo_1">
  [1] #224.1.1.num.int <400 (0x190)>
  [2] #223.1.1.num.int <300 (0x12c)>
  [3] #220.1.1.num.int <20 (0x14)>
  [4] #219.1.1.num.int <10 (0xa)>
IP: #203:0x71, type 8, 114[5]
GC: ++#209.1.2.mem.ref.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x77 (0x71), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.3.mem.ref.ro <#203.1.9.mem.ro, ofs 0x1f, size 5, "foo_1">
  [1] #209.1.3.mem.ref.ro <#203.1.9.mem.ro, ofs 0x1f, size 5, "foo_1">
  [2] #224.1.1.num.int <400 (0x190)>
  [3] #223.1.1.num.int <300 (0x12c)>
  [4] #220.1.1.num.int <20 (0x14)>
  [5] #219.1.1.num.int <10 (0xa)>
IP: #203:0x77, type 8, 120[4]
GC: ++#207.1.1.mem.code.ro
GC: --#209.1.3.mem.ref.ro
== backtrace ==
  [0] #226.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x7c (0x77), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.2.mem.ref.ro <#203.1.9.mem.ro, ofs 0x1f, size 5, "foo_1">
  [1] #224.1.1.num.int <400 (0x190)>
  [2] #223.1.1.num.int <300 (0x12c)>
  [3] #220.1.1.num.int <20 (0x14)>
  [4] #219.1.1.num.int <10 (0xa)>
IP: #207:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #226.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x2 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x7c (0x77), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #227.1.1.num.int <10 (0xa)>
  [1] #209.1.2.mem.ref.ro <#203.1.9.mem.ro, ofs 0x1f, size 5, "foo_1">
  [2] #224.1.1.num.int <400 (0x190)>
  [3] #223.1.1.num.int <300 (0x12c)>
  [4] #220.1.1.num.int <20 (0x14)>
  [5] #219.1.1.num.int <10 (0xa)>
IP: #207:0x2, type 1, 20 (0x14)
== backtrace ==
  [0] #226.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x4 (0x2)>
  [1] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x7c (0x77), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #228.1.1.num.int <20 (0x14)>
  [1] #227.1.1.num.int <10 (0xa)>
  [2] #209.1.2.mem.ref.ro <#203.1.9.mem.ro, ofs 0x1f, size 5, "foo_1">
  [3] #224.1.1.num.int <400 (0x190)>
  [4] #223.1.1.num.int <300 (0x12c)>
  [5] #220.1.1.num.int <20 (0x14)>
  [6] #219.1.1.num.int <10 (0xa)>
IP: #207:0x4, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#226.1.1.ctx.func
GC: --#205.1.2.ctx.func
GC: --#207.1.2.mem.code.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x7c (0x77), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #228.1.1.num.int <20 (0x14)>
  [1] #227.1.1.num.int <10 (0xa)>
  [2] #209.1.2.mem.ref.ro <#203.1.9.mem.ro, ofs 0x1f, size 5, "foo_1">
  [3] #224.1.1.num.int <400 (0x190)>
  [4] #223.1.1.num.int <300 (0x12c)>
  [5] #220.1.1.num.int <20 (0x14)>
  [6] #219.1.1.num.int <10 (0xa)>
IP: #203:0x7c, type 9, 125[5]
GC: ++#203.1.9.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x82 (0x7c), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #229.1.1.mem.ref.ro <#203.1.10.mem.ro, ofs 0x7d, size 5, "foo_3">
  [1] #228.1.1.num.int <20 (0x14)>
  [2] #227.1.1.num.int <10 (0xa)>
  [3] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [4] #224.1.1.num.int <400 (0x190)>
  [5] #223.1.1.num.int <300 (0x12c)>
  [6] #220.1.1.num.int <20 (0x14)>
  [7] #219.1.1.num.int <10 (0xa)>
IP: #203:0x82, type 8, 131[4]
GC: ++#211.1.1.num.int
GC: --#229.1.1.mem.ref.ro
GC: --#203.1.10.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.9.mem.ro, ip 0x87 (0x82), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #211.1.2.num.int <50 (0x32)>
  [1] #228.1.1.num.int <20 (0x14)>
  [2] #227.1.1.num.int <10 (0xa)>
  [3] #209.1.2.mem.ref.ro <#203.1.9.mem.ro, ofs 0x1f, size 5, "foo_1">
  [4] #224.1.1.num.int <400 (0x190)>
  [5] #223.1.1.num.int <300 (0x12c)>
  [6] #220.1.1.num.int <20 (0x14)>
  [7] #219.1.1.num.int <10 (0xa)>
IP: #203:0x87, type 7, 136[3]
GC: ++#203.1.9.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x8b (0x87), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [1] #211.1.2.num.int <50 (0x32)>
  [2] #228.1.1.num.int <20 (0x14)>
  [3] #227.1.1.num.int <10 (0xa)>
  [4] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [5] #224.1.1.num.int <400 (0x190)>
  [6] #223.1.1.num.int <300 (0x12c)>
  [7] #220.1.1.num.int <20 (0x14)>
  [8] #219.1.1.num.int <10 (0xa)>
IP: #203:0x8b, type 8, 140[4]
GC: ++#230.1.1.mem.str.ro
GC: --#230.1.2.mem.str.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x90 (0x8b), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [1] #211.1.2.num.int <50 (0x32)>
  [2] #228.1.1.num.int <20 (0x14)>
  [3] #227.1.1.num.int <10 (0xa)>
  [4] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [5] #224.1.1.num.int <400 (0x190)>
  [6] #223.1.1.num.int <300 (0x12c)>
  [7] #220.1.1.num.int <20 (0x14)>
  [8] #219.1.1.num.int <10 (0xa)>
IP: #203:0x90, type 1, 30 (0x1e)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x92 (0x90), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #231.1.1.num.int <30 (0x1e)>
  [1] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [2] #211.1.2.num.int <50 (0x32)>
  [3] #228.1.1.num.int <20 (0x14)>
  [4] #227.1.1.num.int <10 (0xa)>
  [5] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [6] #224.1.1.num.int <400 (0x190)>
  [7] #223.1.1.num.int <300 (0x12c)>
  [8] #220.1.1.num.int <20 (0x14)>
  [9] #219.1.1.num.int <10 (0xa)>
IP: #203:0x92, type 8, 147[4]
GC: ++#231.1.1.num.int
GC: --#231.1.2.num.int
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x97 (0x92), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #231.1.1.num.int <30 (0x1e)>
  [1] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [2] #211.1.2.num.int <50 (0x32)>
  [3] #228.1.1.num.int <20 (0x14)>
  [4] #227.1.1.num.int <10 (0xa)>
  [5] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [6] #224.1.1.num.int <400 (0x190)>
  [7] #223.1.1.num.int <300 (0x12c)>
  [8] #220.1.1.num.int <20 (0x14)>
  [9] #219.1.1.num.int <10 (0xa)>
IP: #203:0x97, type 0, 0 (0x0)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x98 (0x97), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #231.1.1.num.int <30 (0x1e)>
  [2] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [3] #211.1.2.num.int <50 (0x32)>
  [4] #228.1.1.num.int <20 (0x14)>
  [5] #227.1.1.num.int <10 (0xa)>
  [6] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [7] #224.1.1.num.int <400 (0x190)>
  [8] #223.1.1.num.int <300 (0x12c)>
  [9] #220.1.1.num.int <20 (0x14)>
  [10] #219.1.1.num.int <10 (0xa)>
IP: #203:0x98, type 8, 153[4]
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0x9d (0x98), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #231.1.1.num.int <30 (0x1e)>
  [2] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [3] #211.1.2.num.int <50 (0x32)>
  [4] #228.1.1.num.int <20 (0x14)>
  [5] #227.1.1.num.int <10 (0xa)>
  [6] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [7] #224.1.1.num.int <400 (0x190)>
  [8] #223.1.1.num.int <300 (0x12c)>
  [9] #220.1.1.num.int <20 (0x14)>
  [10] #219.1.1.num.int <10 (0xa)>
IP: #203:0x9d, type 8, 158[5]
GC: ++#215.1.1.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0xa3 (0x9d), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #215.1.2.hash <size 1, max 1>
  [1] #0.0.nil <nil>
  [2] #231.1.1.num.int <30 (0x1e)>
  [3] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [4] #211.1.2.num.int <50 (0x32)>
  [5] #228.1.1.num.int <20 (0x14)>
  [6] #227.1.1.num.int <10 (0xa)>
  [7] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [8] #224.1.1.num.int <400 (0x190)>
  [9] #223.1.1.num.int <300 (0x12c)>
  [10] #220.1.1.num.int <20 (0x14)>
  [11] #219.1.1.num.int <10 (0xa)>
IP: #203:0xa3, type 7, 164[5]
GC: ++#203.1.10.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.11.mem.ro, ip 0xa9 (0xa3), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #232.1.1.mem.str.ro <#203.1.11.mem.ro, ofs 0xa4, size 5, "foo_5">
  [1] #215.1.2.hash <size 1, max 1>
  [2] #0.0.nil <nil>
  [3] #231.1.1.num.int <30 (0x1e)>
  [4] #230.1.1.mem.str.ro <#203.1.11.mem.ro, ofs 0x88, size 3, "abc">
  [5] #211.1.2.num.int <50 (0x32)>
  [6] #228.1.1.num.int <20 (0x14)>
  [7] #227.1.1.num.int <10 (0xa)>
  [8] #209.1.2.mem.ref.ro <#203.1.11.mem.ro, ofs 0x1f, size 5, "foo_1">
  [9] #224.1.1.num.int <400 (0x190)>
  [10] #223.1.1.num.int <300 (0x12c)>
  [11] #220.1.1.num.int <20 (0x14)>
  [12] #219.1.1.num.int <10 (0xa)>
IP: #203:0xa9, type 8, 170[3]
GC: ++#214.1.1.mem.ref.ro
GC: --#232.1.1.mem.str.ro
GC: --#203.1.11.mem.ro
GC: --#215.1.2.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0xad (0xa9), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #214.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x43, size 5, "foo_1">
  [1] #0.0.nil <nil>
  [2] #231.1.1.num.int <30 (0x1e)>
  [3] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [4] #211.1.2.num.int <50 (0x32)>
  [5] #228.1.1.num.int <20 (0x14)>
  [6] #227.1.1.num.int <10 (0xa)>
  [7] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [8] #224.1.1.num.int <400 (0x190)>
  [9] #223.1.1.num.int <300 (0x12c)>
  [10] #220.1.1.num.int <20 (0x14)>
  [11] #219.1.1.num.int <10 (0xa)>
IP: #203:0xad, type 8, 174[4]
GC: ++#207.1.1.mem.code.ro
GC: --#214.1.2.mem.ref.ro
== backtrace ==
  [0] #233.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x0 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0xb2 (0xad), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #231.1.1.num.int <30 (0x1e)>
  [2] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [3] #211.1.2.num.int <50 (0x32)>
  [4] #228.1.1.num.int <20 (0x14)>
  [5] #227.1.1.num.int <10 (0xa)>
  [6] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [7] #224.1.1.num.int <400 (0x190)>
  [8] #223.1.1.num.int <300 (0x12c)>
  [9] #220.1.1.num.int <20 (0x14)>
  [10] #219.1.1.num.int <10 (0xa)>
IP: #207:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #233.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x2 (0x0)>
  [1] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0xb2 (0xad), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #234.1.1.num.int <10 (0xa)>
  [1] #0.0.nil <nil>
  [2] #231.1.1.num.int <30 (0x1e)>
  [3] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [4] #211.1.2.num.int <50 (0x32)>
  [5] #228.1.1.num.int <20 (0x14)>
  [6] #227.1.1.num.int <10 (0xa)>
  [7] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [8] #224.1.1.num.int <400 (0x190)>
  [9] #223.1.1.num.int <300 (0x12c)>
  [10] #220.1.1.num.int <20 (0x14)>
  [11] #219.1.1.num.int <10 (0xa)>
IP: #207:0x2, type 1, 20 (0x14)
== backtrace ==
  [0] #233.1.1.ctx.func <code #207.1.2.mem.code.ro, ip 0x4 (0x2)>
  [1] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0xb2 (0xad), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #235.1.1.num.int <20 (0x14)>
  [1] #234.1.1.num.int <10 (0xa)>
  [2] #0.0.nil <nil>
  [3] #231.1.1.num.int <30 (0x1e)>
  [4] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [5] #211.1.2.num.int <50 (0x32)>
  [6] #228.1.1.num.int <20 (0x14)>
  [7] #227.1.1.num.int <10 (0xa)>
  [8] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [9] #224.1.1.num.int <400 (0x190)>
  [10] #223.1.1.num.int <300 (0x12c)>
  [11] #220.1.1.num.int <20 (0x14)>
  [12] #219.1.1.num.int <10 (0xa)>
IP: #207:0x4, type 3, 1 (0x1)
GC: ++#205.1.1.ctx.func
GC: --#233.1.1.ctx.func
GC: --#205.1.2.ctx.func
GC: --#207.1.2.mem.code.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.10.mem.ro, ip 0xb2 (0xad), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #235.1.1.num.int <20 (0x14)>
  [1] #234.1.1.num.int <10 (0xa)>
  [2] #0.0.nil <nil>
  [3] #231.1.1.num.int <30 (0x1e)>
  [4] #230.1.1.mem.str.ro <#203.1.10.mem.ro, ofs 0x88, size 3, "abc">
  [5] #211.1.2.num.int <50 (0x32)>
  [6] #228.1.1.num.int <20 (0x14)>
  [7] #227.1.1.num.int <10 (0xa)>
  [8] #209.1.2.mem.ref.ro <#203.1.10.mem.ro, ofs 0x1f, size 5, "foo_1">
  [9] #224.1.1.num.int <400 (0x190)>
  [10] #223.1.1.num.int <300 (0x12c)>
  [11] #220.1.1.num.int <20 (0x14)>
  [12] #219.1.1.num.int <10 (0xa)>
