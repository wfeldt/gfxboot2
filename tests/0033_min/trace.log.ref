# ---  trace  ---
IP: #186:0x0, type 5, 1[7]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x8, type 1, 100 (0x64)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0xa (0x8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #189.1.1.num.int <100 (0x64)>
IP: #186:0xa, type 1, 200 (0xc8)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0xd (0xa), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.num.int <200 (0xc8)>
  [1] #189.1.1.num.int <100 (0x64)>
IP: #186:0xd, type 8, 14[3]
GC: --#190.1.1.num.int
GC: --#189.1.1.num.int
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x11 (0xd), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #191.1.1.num.int <100 (0x64)>
IP: #186:0x11, type 1, 200 (0xc8)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x14 (0x11), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <200 (0xc8)>
  [1] #191.1.1.num.int <100 (0x64)>
IP: #186:0x14, type 1, 100 (0x64)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x16 (0x14), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.1.num.int <100 (0x64)>
  [1] #193.1.1.num.int <200 (0xc8)>
  [2] #191.1.1.num.int <100 (0x64)>
IP: #186:0x16, type 8, 23[3]
GC: --#194.1.1.num.int
GC: --#193.1.1.num.int
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x1a (0x16), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.1.num.int <100 (0x64)>
  [1] #191.1.1.num.int <100 (0x64)>
IP: #186:0x1a, type 2, 1 (0x1)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x1b (0x1a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #196.1.1.num.bool <1 (0x1)>
  [1] #195.1.1.num.int <100 (0x64)>
  [2] #191.1.1.num.int <100 (0x64)>
IP: #186:0x1b, type 2, 0 (0x0)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x1c (0x1b), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #197.1.1.num.bool <0 (0x0)>
  [1] #196.1.1.num.bool <1 (0x1)>
  [2] #195.1.1.num.int <100 (0x64)>
  [3] #191.1.1.num.int <100 (0x64)>
IP: #186:0x1c, type 8, 29[3]
GC: --#197.1.1.num.bool
GC: --#196.1.1.num.bool
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x20 (0x1c), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.num.bool <0 (0x0)>
  [1] #195.1.1.num.int <100 (0x64)>
  [2] #191.1.1.num.int <100 (0x64)>
IP: #186:0x20, type 2, 0 (0x0)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x21 (0x20), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #199.1.1.num.bool <0 (0x0)>
  [1] #198.1.1.num.bool <0 (0x0)>
  [2] #195.1.1.num.int <100 (0x64)>
  [3] #191.1.1.num.int <100 (0x64)>
IP: #186:0x21, type 2, 1 (0x1)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x22 (0x21), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #200.1.1.num.bool <1 (0x1)>
  [1] #199.1.1.num.bool <0 (0x0)>
  [2] #198.1.1.num.bool <0 (0x0)>
  [3] #195.1.1.num.int <100 (0x64)>
  [4] #191.1.1.num.int <100 (0x64)>
IP: #186:0x22, type 8, 35[3]
GC: --#200.1.1.num.bool
GC: --#199.1.1.num.bool
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x26 (0x22), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #201.1.1.num.bool <0 (0x0)>
  [1] #198.1.1.num.bool <0 (0x0)>
  [2] #195.1.1.num.int <100 (0x64)>
  [3] #191.1.1.num.int <100 (0x64)>
IP: #186:0x26, type 2, 1 (0x1)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x27 (0x26), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #202.1.1.num.bool <1 (0x1)>
  [1] #201.1.1.num.bool <0 (0x0)>
  [2] #198.1.1.num.bool <0 (0x0)>
  [3] #195.1.1.num.int <100 (0x64)>
  [4] #191.1.1.num.int <100 (0x64)>
IP: #186:0x27, type 1, 100 (0x64)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x29 (0x27), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #203.1.1.num.int <100 (0x64)>
  [1] #202.1.1.num.bool <1 (0x1)>
  [2] #201.1.1.num.bool <0 (0x0)>
  [3] #198.1.1.num.bool <0 (0x0)>
  [4] #195.1.1.num.int <100 (0x64)>
  [5] #191.1.1.num.int <100 (0x64)>
IP: #186:0x29, type 8, 42[3]
GC: --#203.1.1.num.int
GC: --#202.1.1.num.bool
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x2d (0x29), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #204.1.1.num.bool <1 (0x1)>
  [1] #201.1.1.num.bool <0 (0x0)>
  [2] #198.1.1.num.bool <0 (0x0)>
  [3] #195.1.1.num.int <100 (0x64)>
  [4] #191.1.1.num.int <100 (0x64)>
IP: #186:0x2d, type 1, 100 (0x64)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x2f (0x2d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #205.1.1.num.int <100 (0x64)>
  [1] #204.1.1.num.bool <1 (0x1)>
  [2] #201.1.1.num.bool <0 (0x0)>
  [3] #198.1.1.num.bool <0 (0x0)>
  [4] #195.1.1.num.int <100 (0x64)>
  [5] #191.1.1.num.int <100 (0x64)>
IP: #186:0x2f, type 2, 1 (0x1)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x30 (0x2f), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #206.1.1.num.bool <1 (0x1)>
  [1] #205.1.1.num.int <100 (0x64)>
  [2] #204.1.1.num.bool <1 (0x1)>
  [3] #201.1.1.num.bool <0 (0x0)>
  [4] #198.1.1.num.bool <0 (0x0)>
  [5] #195.1.1.num.int <100 (0x64)>
  [6] #191.1.1.num.int <100 (0x64)>
IP: #186:0x30, type 8, 49[3]
GC: --#206.1.1.num.bool
GC: --#205.1.1.num.int
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x34 (0x30), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #207.1.1.num.int <1 (0x1)>
  [1] #204.1.1.num.bool <1 (0x1)>
  [2] #201.1.1.num.bool <0 (0x0)>
  [3] #198.1.1.num.bool <0 (0x0)>
  [4] #195.1.1.num.int <100 (0x64)>
  [5] #191.1.1.num.int <100 (0x64)>
