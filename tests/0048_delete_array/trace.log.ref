# ---  trace  ---
IP: #186:0x0, type 5, 1[7]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x8, type 9, 9[3]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xc (0x8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0xc, type 8, 13[1]
GC: ++#9.1.1.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xe (0xc), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #9.1.2.num.prim <2 (0x2)>
  [1] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0xe, type 7, 15[2]
GC: ++#186.1.2.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x11 (0xe), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.mem.str.ro <#186.1.3.mem.ro, ofs 0xf, size 2, "aa">
  [1] #9.1.2.num.prim <2 (0x2)>
  [2] #189.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0x11, type 7, 18[2]
GC: ++#186.1.3.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x14 (0x11), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #191.1.1.mem.str.ro <#186.1.4.mem.ro, ofs 0x12, size 2, "bb">
  [1] #190.1.1.mem.str.ro <#186.1.4.mem.ro, ofs 0xf, size 2, "aa">
  [2] #9.1.2.num.prim <2 (0x2)>
  [3] #189.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0x14, type 7, 21[2]
GC: ++#186.1.4.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x17 (0x14), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x15, size 2, "cc">
  [1] #191.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x12, size 2, "bb">
  [2] #190.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0xf, size 2, "aa">
  [3] #9.1.2.num.prim <2 (0x2)>
  [4] #189.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0x17, type 7, 24[2]
GC: ++#186.1.5.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x1a (0x17), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x18, size 2, "dd">
  [1] #192.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x15, size 2, "cc">
  [2] #191.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0x12, size 2, "bb">
  [3] #190.1.1.mem.str.ro <#186.1.6.mem.ro, ofs 0xf, size 2, "aa">
  [4] #9.1.2.num.prim <2 (0x2)>
  [5] #189.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0x1a, type 8, 27[1]
GC: --#9.1.2.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x1c (0x1a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.1.array <size 4, max 4>
  [1] #189.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0x1c, type 8, 29[3]
GC: ++#189.1.1.mem.ref.ro
GC: ++#194.1.1.array
GC: --#194.1.2.array
GC: --#189.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x20 (0x1c), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x20, type 8, 33[3]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x24 (0x20), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 4, max 4>
IP: #186:0x24, type 1, 2 (0x2)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x25 (0x24), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.1.num.int <2 (0x2)>
  [1] #194.1.2.array <size 4, max 4>
IP: #186:0x25, type 8, 38[6]
GC: --#192.1.1.mem.str.ro
GC: --#186.1.6.mem.ro
GC: --#195.1.1.num.int
GC: --#194.1.2.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x2c (0x25), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x2c, type 8, 45[3]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x30 (0x2c), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 3, max 4>
IP: #186:0x30, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x32 (0x30), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #197.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #194.1.2.array <size 3, max 4>
IP: #186:0x32, type 8, 51[6]
GC: --#193.1.1.mem.str.ro
GC: --#186.1.5.mem.ro
GC: --#197.1.1.num.int
GC: --#194.1.2.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x39 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x39, type 8, 58[3]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x3d (0x39), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 2, max 4>
IP: #186:0x3d, type 1, 1 (0x1)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x3e (0x3d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.num.int <1 (0x1)>
  [1] #194.1.2.array <size 2, max 4>
IP: #186:0x3e, type 8, 63[6]
GC: --#191.1.1.mem.str.ro
GC: --#186.1.4.mem.ro
GC: --#198.1.1.num.int
GC: --#194.1.2.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x45 (0x3e), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x45, type 8, 70[3]
GC: ++#194.1.1.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x49 (0x45), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.array <size 1, max 4>
IP: #186:0x49, type 1, 0 (0x0)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x4a (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #199.1.1.num.int <0 (0x0)>
  [1] #194.1.2.array <size 1, max 4>
IP: #186:0x4a, type 8, 75[6]
GC: --#190.1.1.mem.str.ro
GC: --#186.1.3.mem.ro
GC: --#199.1.1.num.int
GC: --#194.1.2.array
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x51 (0x4a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
