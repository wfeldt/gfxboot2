# ---  trace  ---
IP: #217:0x0, type 5, 1[7]
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x8, type 9, 9[3]
GC: ++#217.1.1.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0xc (0x8), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0xc, type 7, 13[6]
GC: ++#217.1.2.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.3.mem.ro, ip 0x13 (0xc), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #221.1.1.mem.str.ro <#217.1.3.mem.ro, ofs 0xd, size 6, "abcdef">
  [1] #220.1.1.mem.ref.ro <#217.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0x13, type 8, 20[6]
GC: --#221.1.1.mem.str.ro
GC: --#217.1.3.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x1a (0x13), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.1.mem.str <size 6, "abcdef">
  [1] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #217:0x1a, type 8, 27[3]
GC: ++#220.1.1.mem.ref.ro
GC: ++#222.1.1.mem.str
GC: --#222.1.2.mem.str
GC: --#220.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x1e (0x1a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x1e, type 8, 31[3]
GC: ++#222.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x22 (0x1e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.2.mem.str <size 6, "abcdef">
IP: #217:0x22, type 1, 2 (0x2)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x23 (0x22), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #224.1.1.num.int <2 (0x2)>
  [1] #222.1.2.mem.str <size 6, "abcdef">
IP: #217:0x23, type 8, 36[6]
GC: --#224.1.1.num.int
GC: --#222.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x2a (0x23), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x2a, type 8, 43[3]
GC: ++#222.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x2e (0x2a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.2.mem.str <size 5, "abdef">
IP: #217:0x2e, type 1, 0 (0x0)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x2f (0x2e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.1.num.int <0 (0x0)>
  [1] #222.1.2.mem.str <size 5, "abdef">
IP: #217:0x2f, type 8, 48[6]
GC: --#225.1.1.num.int
GC: --#222.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x36 (0x2f), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x36, type 9, 55[3]
GC: ++#217.1.2.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.3.mem.ro, ip 0x3a (0x36), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #226.1.1.mem.ref.ro <#217.1.3.mem.ro, ofs 0x37, size 3, "bar">
IP: #217:0x3a, type 8, 59[6]
GC: --#226.1.1.mem.ref.ro
GC: --#217.1.3.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x41 (0x3a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #227.1.1.mem.ref <size 3, "bar">
IP: #217:0x41, type 7, 66[6]
GC: ++#217.1.2.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.3.mem.ro, ip 0x48 (0x41), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #228.1.1.mem.str.ro <#217.1.3.mem.ro, ofs 0x42, size 6, "xyz123">
  [1] #227.1.1.mem.ref <size 3, "bar">
IP: #217:0x48, type 8, 73[6]
GC: --#228.1.1.mem.str.ro
GC: --#217.1.3.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x4f (0x48), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.1.1.mem.str <size 6, "xyz123">
  [1] #227.1.1.mem.ref <size 3, "bar">
IP: #217:0x4f, type 8, 80[3]
GC: ++#229.1.1.mem.str
GC: --#227.1.1.mem.ref
GC: --#229.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x53 (0x4f), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x53, type 8, 84[3]
GC: ++#229.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x57 (0x53), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.1.2.mem.str <size 6, "xyz123">
IP: #217:0x57, type 1, 0 (0x0)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x58 (0x57), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #231.1.1.num.int <0 (0x0)>
  [1] #229.1.2.mem.str <size 6, "xyz123">
IP: #217:0x58, type 8, 89[6]
GC: --#231.1.1.num.int
GC: --#229.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x5f (0x58), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x5f, type 8, 96[3]
GC: ++#229.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x63 (0x5f), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.1.2.mem.str <size 5, "yz123">
IP: #217:0x63, type 1, -2 (0xfffffffffffffffe)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x65 (0x63), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #232.1.1.num.int <-2 (0xfffffffffffffffe)>
  [1] #229.1.2.mem.str <size 5, "yz123">
IP: #217:0x65, type 8, 102[6]
GC: --#232.1.1.num.int
GC: --#229.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x6c (0x65), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x6c, type 8, 109[3]
GC: ++#222.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x70 (0x6c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.2.mem.str <size 4, "bdef">
IP: #217:0x70, type 8, 113[3]
GC: ++#229.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x74 (0x70), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.1.2.mem.str <size 4, "yz13">
  [1] #222.1.2.mem.str <size 4, "bdef">
