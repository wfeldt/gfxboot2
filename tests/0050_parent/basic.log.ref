# ---  trace  ---
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.2.mem.ro, "foo">
GC: ++#xxxx.1.1.num.prim
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.num.prim <4 (0x4)>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.2.mem.ro, "foo">
GC: ++#xxxx.1.2.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.3.mem.ro, "aa">
  [1] #xxxx.1.2.num.prim <4 (0x4)>
  [2] #xxxx.1.1.mem.ref.ro <#xxxx.1.3.mem.ro, "foo">
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <11 (0xb)>
  [1] #xxxx.1.1.mem.str.ro <#xxxx.1.3.mem.ro, "aa">
  [2] #xxxx.1.2.num.prim <4 (0x4)>
  [3] #xxxx.1.1.mem.ref.ro <#xxxx.1.3.mem.ro, "foo">
GC: ++#xxxx.1.3.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.4.mem.ro, "bb">
  [1] #xxxx.1.1.num.int <11 (0xb)>
  [2] #xxxx.1.1.mem.str.ro <#xxxx.1.4.mem.ro, "aa">
  [3] #xxxx.1.2.num.prim <4 (0x4)>
  [4] #xxxx.1.1.mem.ref.ro <#xxxx.1.4.mem.ro, "foo">
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <22 (0x16)>
  [1] #xxxx.1.1.mem.str.ro <#xxxx.1.4.mem.ro, "bb">
  [2] #xxxx.1.1.num.int <11 (0xb)>
  [3] #xxxx.1.1.mem.str.ro <#xxxx.1.4.mem.ro, "aa">
  [4] #xxxx.1.2.num.prim <4 (0x4)>
  [5] #xxxx.1.1.mem.ref.ro <#xxxx.1.4.mem.ro, "foo">
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.5.mem.ro, "cc">
  [1] #xxxx.1.1.num.int <22 (0x16)>
  [2] #xxxx.1.1.mem.str.ro <#xxxx.1.5.mem.ro, "bb">
  [3] #xxxx.1.1.num.int <11 (0xb)>
  [4] #xxxx.1.1.mem.str.ro <#xxxx.1.5.mem.ro, "aa">
  [5] #xxxx.1.2.num.prim <4 (0x4)>
  [6] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo">
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <33 (0x21)>
  [1] #xxxx.1.1.mem.str.ro <#xxxx.1.5.mem.ro, "cc">
  [2] #xxxx.1.1.num.int <22 (0x16)>
  [3] #xxxx.1.1.mem.str.ro <#xxxx.1.5.mem.ro, "bb">
  [4] #xxxx.1.1.num.int <11 (0xb)>
  [5] #xxxx.1.1.mem.str.ro <#xxxx.1.5.mem.ro, "aa">
  [6] #xxxx.1.2.num.prim <4 (0x4)>
  [7] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo">
GC: --#xxxx.1.2.num.prim
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.hash <size 3, max 3>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.hash
GC: --#xxxx.1.2.hash
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.5.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.6.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.6.mem.ro, "bar">
GC: ++#xxxx.1.1.num.prim
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.6.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.num.prim <4 (0x4)>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.6.mem.ro, "bar">
GC: ++#xxxx.1.6.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.7.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.7.mem.ro, "xx">
  [1] #xxxx.1.2.num.prim <4 (0x4)>
  [2] #xxxx.1.1.mem.ref.ro <#xxxx.1.7.mem.ro, "bar">
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.7.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <88 (0x58)>
  [1] #xxxx.1.1.mem.str.ro <#xxxx.1.7.mem.ro, "xx">
  [2] #xxxx.1.2.num.prim <4 (0x4)>
  [3] #xxxx.1.1.mem.ref.ro <#xxxx.1.7.mem.ro, "bar">
GC: ++#xxxx.1.7.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.8.mem.ro, "yy">
  [1] #xxxx.1.1.num.int <88 (0x58)>
  [2] #xxxx.1.1.mem.str.ro <#xxxx.1.8.mem.ro, "xx">
  [3] #xxxx.1.2.num.prim <4 (0x4)>
  [4] #xxxx.1.1.mem.ref.ro <#xxxx.1.8.mem.ro, "bar">
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <99 (0x63)>
  [1] #xxxx.1.1.mem.str.ro <#xxxx.1.8.mem.ro, "yy">
  [2] #xxxx.1.1.num.int <88 (0x58)>
  [3] #xxxx.1.1.mem.str.ro <#xxxx.1.8.mem.ro, "xx">
  [4] #xxxx.1.2.num.prim <4 (0x4)>
  [5] #xxxx.1.1.mem.ref.ro <#xxxx.1.8.mem.ro, "bar">
GC: --#xxxx.1.2.num.prim
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.hash <size 2, max 2>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.8.mem.ro, "bar">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.hash
GC: --#xxxx.1.2.hash
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.hash <size 3, max 3>
GC: ++#xxxx.1.2.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.3.hash <size 3, max 3>
  [1] #xxxx.1.3.hash <size 3, max 3>
GC: ++#xxxx.1.1.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.hash <size 2, max 2>
  [1] #xxxx.1.3.hash <size 3, max 3>
  [2] #xxxx.1.3.hash <size 3, max 3>
GC: ++#xxxx.1.2.hash
GC: --#xxxx.1.3.hash
GC: --#xxxx.1.3.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.hash <size 3, max 3, parent #xxxx.1.2.hash>
GC: ++#xxxx.1.2.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.3.hash <size 3, max 3, parent #xxxx.1.2.hash>
  [1] #xxxx.1.3.hash <size 3, max 3, parent #xxxx.1.2.hash>
GC: --#xxxx.1.3.hash
GC: ++#xxxx.1.2.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.3.hash <size 2, max 2>
  [1] #xxxx.1.2.hash <size 3, max 3, parent #xxxx.1.3.hash>
GC: ++#xxxx.1.2.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.3.hash <size 3, max 3, parent #xxxx.1.3.hash>
  [1] #xxxx.1.3.hash <size 2, max 2>
  [2] #xxxx.1.3.hash <size 3, max 3, parent #xxxx.1.3.hash>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #xxxx.1.3.hash <size 3, max 3, parent #xxxx.1.3.hash>
  [2] #xxxx.1.3.hash <size 2, max 2>
  [3] #xxxx.1.3.hash <size 3, max 3, parent #xxxx.1.3.hash>
GC: --#xxxx.1.3.hash
GC: --#xxxx.1.3.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.hash <size 2, max 2>
  [1] #xxxx.1.2.hash <size 3, max 3>
GC: ++#xxxx.1.2.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.3.hash <size 3, max 3>
  [1] #xxxx.1.2.hash <size 2, max 2>
  [2] #xxxx.1.3.hash <size 3, max 3>
GC: --#xxxx.1.3.hash
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.8.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #xxxx.1.2.hash <size 2, max 2>
  [2] #xxxx.1.2.hash <size 3, max 3>
