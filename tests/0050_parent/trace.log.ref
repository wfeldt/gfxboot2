# ---  trace  ---
IP: #209:0x0, type 5, 1[7]
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
IP: #209:0x8, type 9, 9[3]
GC: ++#209.1.1.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.2.mem.ro, ip 0xc (0x8), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #212.1.1.mem.ref.ro <#209.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0xc, type 8, 13[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.2.mem.ro, ip 0xe (0xc), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #212.1.1.mem.ref.ro <#209.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0xe, type 7, 15[2]
GC: ++#209.1.2.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.3.mem.ro, ip 0x11 (0xe), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #213.1.1.mem.str.ro <#209.1.3.mem.ro, ofs 0xf, size 2, "aa">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #212.1.1.mem.ref.ro <#209.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0x11, type 1, 11 (0xb)
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.3.mem.ro, ip 0x13 (0x11), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #214.1.1.num.int <11 (0xb)>
  [1] #213.1.1.mem.str.ro <#209.1.3.mem.ro, ofs 0xf, size 2, "aa">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #212.1.1.mem.ref.ro <#209.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0x13, type 7, 20[2]
GC: ++#209.1.3.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.4.mem.ro, ip 0x16 (0x13), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #215.1.1.mem.str.ro <#209.1.4.mem.ro, ofs 0x14, size 2, "bb">
  [1] #214.1.1.num.int <11 (0xb)>
  [2] #213.1.1.mem.str.ro <#209.1.4.mem.ro, ofs 0xf, size 2, "aa">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #212.1.1.mem.ref.ro <#209.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0x16, type 1, 22 (0x16)
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.4.mem.ro, ip 0x18 (0x16), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #216.1.1.num.int <22 (0x16)>
  [1] #215.1.1.mem.str.ro <#209.1.4.mem.ro, ofs 0x14, size 2, "bb">
  [2] #214.1.1.num.int <11 (0xb)>
  [3] #213.1.1.mem.str.ro <#209.1.4.mem.ro, ofs 0xf, size 2, "aa">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #212.1.1.mem.ref.ro <#209.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0x18, type 7, 25[2]
GC: ++#209.1.4.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.5.mem.ro, ip 0x1b (0x18), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #217.1.1.mem.str.ro <#209.1.5.mem.ro, ofs 0x19, size 2, "cc">
  [1] #216.1.1.num.int <22 (0x16)>
  [2] #215.1.1.mem.str.ro <#209.1.5.mem.ro, ofs 0x14, size 2, "bb">
  [3] #214.1.1.num.int <11 (0xb)>
  [4] #213.1.1.mem.str.ro <#209.1.5.mem.ro, ofs 0xf, size 2, "aa">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #212.1.1.mem.ref.ro <#209.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0x1b, type 1, 33 (0x21)
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.5.mem.ro, ip 0x1d (0x1b), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #218.1.1.num.int <33 (0x21)>
  [1] #217.1.1.mem.str.ro <#209.1.5.mem.ro, ofs 0x19, size 2, "cc">
  [2] #216.1.1.num.int <22 (0x16)>
  [3] #215.1.1.mem.str.ro <#209.1.5.mem.ro, ofs 0x14, size 2, "bb">
  [4] #214.1.1.num.int <11 (0xb)>
  [5] #213.1.1.mem.str.ro <#209.1.5.mem.ro, ofs 0xf, size 2, "aa">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #212.1.1.mem.ref.ro <#209.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0x1d, type 8, 30[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.5.mem.ro, ip 0x1f (0x1d), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #219.1.1.hash <size 3, max 3>
  [1] #212.1.1.mem.ref.ro <#209.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #209:0x1f, type 8, 32[3]
GC: ++#212.1.1.mem.ref.ro
GC: ++#219.1.1.hash
GC: --#219.1.2.hash
GC: --#212.1.2.mem.ref.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.5.mem.ro, ip 0x23 (0x1f), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
IP: #209:0x23, type 9, 36[3]
GC: ++#209.1.5.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.6.mem.ro, ip 0x27 (0x23), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #220.1.1.mem.ref.ro <#209.1.6.mem.ro, ofs 0x24, size 3, "bar">
IP: #209:0x27, type 8, 40[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.6.mem.ro, ip 0x29 (0x27), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #220.1.1.mem.ref.ro <#209.1.6.mem.ro, ofs 0x24, size 3, "bar">
IP: #209:0x29, type 7, 42[2]
GC: ++#209.1.6.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.7.mem.ro, ip 0x2c (0x29), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #221.1.1.mem.str.ro <#209.1.7.mem.ro, ofs 0x2a, size 2, "xx">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #220.1.1.mem.ref.ro <#209.1.7.mem.ro, ofs 0x24, size 3, "bar">
IP: #209:0x2c, type 1, 88 (0x58)
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.7.mem.ro, ip 0x2e (0x2c), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #222.1.1.num.int <88 (0x58)>
  [1] #221.1.1.mem.str.ro <#209.1.7.mem.ro, ofs 0x2a, size 2, "xx">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #220.1.1.mem.ref.ro <#209.1.7.mem.ro, ofs 0x24, size 3, "bar">
IP: #209:0x2e, type 7, 47[2]
GC: ++#209.1.7.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x31 (0x2e), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #223.1.1.mem.str.ro <#209.1.8.mem.ro, ofs 0x2f, size 2, "yy">
  [1] #222.1.1.num.int <88 (0x58)>
  [2] #221.1.1.mem.str.ro <#209.1.8.mem.ro, ofs 0x2a, size 2, "xx">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #220.1.1.mem.ref.ro <#209.1.8.mem.ro, ofs 0x24, size 3, "bar">
IP: #209:0x31, type 1, 99 (0x63)
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x33 (0x31), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #224.1.1.num.int <99 (0x63)>
  [1] #223.1.1.mem.str.ro <#209.1.8.mem.ro, ofs 0x2f, size 2, "yy">
  [2] #222.1.1.num.int <88 (0x58)>
  [3] #221.1.1.mem.str.ro <#209.1.8.mem.ro, ofs 0x2a, size 2, "xx">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #220.1.1.mem.ref.ro <#209.1.8.mem.ro, ofs 0x24, size 3, "bar">
IP: #209:0x33, type 8, 52[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x35 (0x33), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #225.1.1.hash <size 2, max 2>
  [1] #220.1.1.mem.ref.ro <#209.1.8.mem.ro, ofs 0x24, size 3, "bar">
IP: #209:0x35, type 8, 54[3]
GC: ++#220.1.1.mem.ref.ro
GC: ++#225.1.1.hash
GC: --#225.1.2.hash
GC: --#220.1.2.mem.ref.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x39 (0x35), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
IP: #209:0x39, type 8, 58[3]
GC: ++#219.1.1.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x3d (0x39), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #219.1.2.hash <size 3, max 3>
IP: #209:0x3d, type 8, 62[3]
GC: ++#219.1.2.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x41 (0x3d), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #219.1.3.hash <size 3, max 3>
  [1] #219.1.3.hash <size 3, max 3>
IP: #209:0x41, type 8, 66[3]
GC: ++#225.1.1.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x45 (0x41), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #225.1.2.hash <size 2, max 2>
  [1] #219.1.3.hash <size 3, max 3>
  [2] #219.1.3.hash <size 3, max 3>
IP: #209:0x45, type 8, 70[9]
GC: ++#225.1.2.hash
GC: --#225.1.3.hash
GC: --#219.1.3.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x4f (0x45), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #219.1.2.hash <size 3, max 3, parent #225.1.2.hash>
IP: #209:0x4f, type 8, 80[3]
GC: ++#219.1.2.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x53 (0x4f), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #219.1.3.hash <size 3, max 3, parent #225.1.2.hash>
  [1] #219.1.3.hash <size 3, max 3, parent #225.1.2.hash>
IP: #209:0x53, type 8, 84[9]
GC: --#219.1.3.hash
GC: ++#225.1.2.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x5d (0x53), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #225.1.3.hash <size 2, max 2>
  [1] #219.1.2.hash <size 3, max 3, parent #225.1.3.hash>
IP: #209:0x5d, type 8, 94[3]
GC: ++#219.1.2.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x61 (0x5d), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #219.1.3.hash <size 3, max 3, parent #225.1.3.hash>
  [1] #225.1.3.hash <size 2, max 2>
  [2] #219.1.3.hash <size 3, max 3, parent #225.1.3.hash>
IP: #209:0x61, type 0, 0 (0x0)
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x62 (0x61), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #219.1.3.hash <size 3, max 3, parent #225.1.3.hash>
  [2] #225.1.3.hash <size 2, max 2>
  [3] #219.1.3.hash <size 3, max 3, parent #225.1.3.hash>
IP: #209:0x62, type 8, 99[9]
GC: --#225.1.3.hash
GC: --#219.1.3.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x6c (0x62), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #225.1.2.hash <size 2, max 2>
  [1] #219.1.2.hash <size 3, max 3>
IP: #209:0x6c, type 8, 109[3]
GC: ++#219.1.2.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x70 (0x6c), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #219.1.3.hash <size 3, max 3>
  [1] #225.1.2.hash <size 2, max 2>
  [2] #219.1.3.hash <size 3, max 3>
IP: #209:0x70, type 8, 113[9]
GC: --#219.1.3.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #209.1.8.mem.ro, ip 0x7a (0x70), dict #8.1.2.hash>
== stack (#210.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #225.1.2.hash <size 2, max 2>
  [2] #219.1.2.hash <size 3, max 3>
