# ---  trace  ---
IP: #188:0x0, type 5, 1[7]
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
IP: #188:0x8, type 9, 9[3]
GC: ++#188.1.1.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0xc (0x8), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #191.1.1.mem.ref.ro <#188.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0xc, type 8, 13[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.2.mem.ro, ip 0xe (0xc), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #191.1.1.mem.ref.ro <#188.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0xe, type 7, 15[2]
GC: ++#188.1.2.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x11 (0xe), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #192.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0xf, size 2, "aa">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #191.1.1.mem.ref.ro <#188.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x11, type 1, 11 (0xb)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.3.mem.ro, ip 0x13 (0x11), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #193.1.1.num.int <11 (0xb)>
  [1] #192.1.1.mem.str.ro <#188.1.3.mem.ro, ofs 0xf, size 2, "aa">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #191.1.1.mem.ref.ro <#188.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x13, type 7, 20[2]
GC: ++#188.1.3.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.4.mem.ro, ip 0x16 (0x13), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #194.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x14, size 2, "bb">
  [1] #193.1.1.num.int <11 (0xb)>
  [2] #192.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0xf, size 2, "aa">
  [3] #13.1.2.num.prim <4 (0x4)>
  [4] #191.1.1.mem.ref.ro <#188.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x16, type 1, 22 (0x16)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.4.mem.ro, ip 0x18 (0x16), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #195.1.1.num.int <22 (0x16)>
  [1] #194.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0x14, size 2, "bb">
  [2] #193.1.1.num.int <11 (0xb)>
  [3] #192.1.1.mem.str.ro <#188.1.4.mem.ro, ofs 0xf, size 2, "aa">
  [4] #13.1.2.num.prim <4 (0x4)>
  [5] #191.1.1.mem.ref.ro <#188.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x18, type 7, 25[2]
GC: ++#188.1.4.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x1b (0x18), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #196.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0x19, size 2, "cc">
  [1] #195.1.1.num.int <22 (0x16)>
  [2] #194.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0x14, size 2, "bb">
  [3] #193.1.1.num.int <11 (0xb)>
  [4] #192.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0xf, size 2, "aa">
  [5] #13.1.2.num.prim <4 (0x4)>
  [6] #191.1.1.mem.ref.ro <#188.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x1b, type 1, 33 (0x21)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x1d (0x1b), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #197.1.1.num.int <33 (0x21)>
  [1] #196.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0x19, size 2, "cc">
  [2] #195.1.1.num.int <22 (0x16)>
  [3] #194.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0x14, size 2, "bb">
  [4] #193.1.1.num.int <11 (0xb)>
  [5] #192.1.1.mem.str.ro <#188.1.5.mem.ro, ofs 0xf, size 2, "aa">
  [6] #13.1.2.num.prim <4 (0x4)>
  [7] #191.1.1.mem.ref.ro <#188.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x1d, type 8, 30[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x1f (0x1d), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.1.hash <size 3, max 3>
  [1] #191.1.1.mem.ref.ro <#188.1.5.mem.ro, ofs 0x9, size 3, "foo">
IP: #188:0x1f, type 8, 32[3]
GC: ++#191.1.1.mem.ref.ro
GC: ++#198.1.1.hash
GC: --#198.1.2.hash
GC: --#191.1.2.mem.ref.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.5.mem.ro, ip 0x23 (0x1f), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
IP: #188:0x23, type 9, 36[3]
GC: ++#188.1.5.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.6.mem.ro, ip 0x27 (0x23), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #199.1.1.mem.ref.ro <#188.1.6.mem.ro, ofs 0x24, size 3, "bar">
IP: #188:0x27, type 8, 40[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.6.mem.ro, ip 0x29 (0x27), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #199.1.1.mem.ref.ro <#188.1.6.mem.ro, ofs 0x24, size 3, "bar">
IP: #188:0x29, type 7, 42[2]
GC: ++#188.1.6.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.7.mem.ro, ip 0x2c (0x29), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #200.1.1.mem.str.ro <#188.1.7.mem.ro, ofs 0x2a, size 2, "xx">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #199.1.1.mem.ref.ro <#188.1.7.mem.ro, ofs 0x24, size 3, "bar">
IP: #188:0x2c, type 1, 88 (0x58)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.7.mem.ro, ip 0x2e (0x2c), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #201.1.1.num.int <88 (0x58)>
  [1] #200.1.1.mem.str.ro <#188.1.7.mem.ro, ofs 0x2a, size 2, "xx">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #199.1.1.mem.ref.ro <#188.1.7.mem.ro, ofs 0x24, size 3, "bar">
IP: #188:0x2e, type 7, 47[2]
GC: ++#188.1.7.mem.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x31 (0x2e), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #202.1.1.mem.str.ro <#188.1.8.mem.ro, ofs 0x2f, size 2, "yy">
  [1] #201.1.1.num.int <88 (0x58)>
  [2] #200.1.1.mem.str.ro <#188.1.8.mem.ro, ofs 0x2a, size 2, "xx">
  [3] #13.1.2.num.prim <4 (0x4)>
  [4] #199.1.1.mem.ref.ro <#188.1.8.mem.ro, ofs 0x24, size 3, "bar">
IP: #188:0x31, type 1, 99 (0x63)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x33 (0x31), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #203.1.1.num.int <99 (0x63)>
  [1] #202.1.1.mem.str.ro <#188.1.8.mem.ro, ofs 0x2f, size 2, "yy">
  [2] #201.1.1.num.int <88 (0x58)>
  [3] #200.1.1.mem.str.ro <#188.1.8.mem.ro, ofs 0x2a, size 2, "xx">
  [4] #13.1.2.num.prim <4 (0x4)>
  [5] #199.1.1.mem.ref.ro <#188.1.8.mem.ro, ofs 0x24, size 3, "bar">
IP: #188:0x33, type 8, 52[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x35 (0x33), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #204.1.1.hash <size 2, max 2>
  [1] #199.1.1.mem.ref.ro <#188.1.8.mem.ro, ofs 0x24, size 3, "bar">
IP: #188:0x35, type 8, 54[3]
GC: ++#199.1.1.mem.ref.ro
GC: ++#204.1.1.hash
GC: --#204.1.2.hash
GC: --#199.1.2.mem.ref.ro
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x39 (0x35), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
IP: #188:0x39, type 8, 58[3]
GC: ++#198.1.1.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x3d (0x39), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.2.hash <size 3, max 3>
IP: #188:0x3d, type 8, 62[3]
GC: ++#198.1.2.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x41 (0x3d), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.3.hash <size 3, max 3>
  [1] #198.1.3.hash <size 3, max 3>
IP: #188:0x41, type 8, 66[3]
GC: ++#204.1.1.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x45 (0x41), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #204.1.2.hash <size 2, max 2>
  [1] #198.1.3.hash <size 3, max 3>
  [2] #198.1.3.hash <size 3, max 3>
IP: #188:0x45, type 8, 70[9]
GC: ++#204.1.2.hash
GC: --#204.1.3.hash
GC: --#198.1.3.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x4f (0x45), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.2.hash <size 3, max 3, parent #204.1.2.hash>
IP: #188:0x4f, type 8, 80[3]
GC: ++#198.1.2.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x53 (0x4f), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.3.hash <size 3, max 3, parent #204.1.2.hash>
  [1] #198.1.3.hash <size 3, max 3, parent #204.1.2.hash>
IP: #188:0x53, type 8, 84[9]
GC: --#198.1.3.hash
GC: ++#204.1.2.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x5d (0x53), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #204.1.3.hash <size 2, max 2>
  [1] #198.1.2.hash <size 3, max 3, parent #204.1.3.hash>
IP: #188:0x5d, type 8, 94[3]
GC: ++#198.1.2.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x61 (0x5d), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.3.hash <size 3, max 3, parent #204.1.3.hash>
  [1] #204.1.3.hash <size 2, max 2>
  [2] #198.1.3.hash <size 3, max 3, parent #204.1.3.hash>
IP: #188:0x61, type 0, 0 (0x0)
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x62 (0x61), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #198.1.3.hash <size 3, max 3, parent #204.1.3.hash>
  [2] #204.1.3.hash <size 2, max 2>
  [3] #198.1.3.hash <size 3, max 3, parent #204.1.3.hash>
IP: #188:0x62, type 8, 99[9]
GC: --#204.1.3.hash
GC: --#198.1.3.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x6c (0x62), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #204.1.2.hash <size 2, max 2>
  [1] #198.1.2.hash <size 3, max 3>
IP: #188:0x6c, type 8, 109[3]
GC: ++#198.1.2.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x70 (0x6c), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #198.1.3.hash <size 3, max 3>
  [1] #204.1.2.hash <size 2, max 2>
  [2] #198.1.3.hash <size 3, max 3>
IP: #188:0x70, type 8, 113[9]
GC: --#198.1.3.hash
== backtrace ==
  [0] #190.1.1.ctx.func <code #188.1.8.mem.ro, ip 0x7a (0x70), dict #4.1.2.hash>
== stack (#189.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #204.1.2.hash <size 2, max 2>
  [2] #198.1.2.hash <size 3, max 3>
