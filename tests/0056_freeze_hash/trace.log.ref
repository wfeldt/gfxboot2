# ---  trace  ---
IP: #186:0x0, type 5, 1[7]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x8, type 9, 9[3]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xc (0x8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 3, "bar">
IP: #186:0xc, type 8, 13[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xe (0xc), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 3, "bar">
IP: #186:0xe, type 7, 15[2]
GC: ++#186.1.2.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x11 (0xe), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.mem.str.ro <#186.1.3.mem.ro, ofs 0xf, size 2, "aa">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #189.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x9, size 3, "bar">
IP: #186:0x11, type 1, 11 (0xb)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x13 (0x11), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #191.1.1.num.int <11 (0xb)>
  [1] #190.1.1.mem.str.ro <#186.1.3.mem.ro, ofs 0xf, size 2, "aa">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #189.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x9, size 3, "bar">
IP: #186:0x13, type 7, 20[2]
GC: ++#186.1.3.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x16 (0x13), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.1.mem.str.ro <#186.1.4.mem.ro, ofs 0x14, size 2, "bb">
  [1] #191.1.1.num.int <11 (0xb)>
  [2] #190.1.1.mem.str.ro <#186.1.4.mem.ro, ofs 0xf, size 2, "aa">
  [3] #13.1.2.num.prim <4 (0x4)>
  [4] #189.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x9, size 3, "bar">
IP: #186:0x16, type 1, 22 (0x16)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x18 (0x16), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <22 (0x16)>
  [1] #192.1.1.mem.str.ro <#186.1.4.mem.ro, ofs 0x14, size 2, "bb">
  [2] #191.1.1.num.int <11 (0xb)>
  [3] #190.1.1.mem.str.ro <#186.1.4.mem.ro, ofs 0xf, size 2, "aa">
  [4] #13.1.2.num.prim <4 (0x4)>
  [5] #189.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x9, size 3, "bar">
IP: #186:0x18, type 8, 25[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x1a (0x18), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.1.hash <size 2, max 2>
  [1] #189.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x9, size 3, "bar">
IP: #186:0x1a, type 8, 27[3]
GC: ++#189.1.1.mem.ref.ro
GC: ++#194.1.1.hash
GC: --#194.1.2.hash
GC: --#189.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x1e (0x1a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x1e, type 8, 31[3]
GC: ++#194.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x22 (0x1e), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.hash <size 2, max 2>
IP: #186:0x22, type 8, 35[6]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x29 (0x22), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.2.hash.ro <size 2, max 2>
IP: #186:0x29, type 8, 42[3]
GC: ++#194.1.2.hash.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x2d (0x29), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.3.hash.ro <size 2, max 2>
  [1] #194.1.3.hash.ro <size 2, max 2>
IP: #186:0x2d, type 7, 46[2]
GC: ++#186.1.4.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x30 (0x2d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x2e, size 2, "bb">
  [1] #194.1.3.hash.ro <size 2, max 2>
  [2] #194.1.3.hash.ro <size 2, max 2>
IP: #186:0x30, type 1, 33 (0x21)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x32 (0x30), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #196.1.1.num.int <33 (0x21)>
  [1] #195.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x2e, size 2, "bb">
  [2] #194.1.3.hash.ro <size 2, max 2>
  [3] #194.1.3.hash.ro <size 2, max 2>
IP: #186:0x32, type 8, 51[3]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x36 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #196.1.1.num.int <33 (0x21)>
  [1] #195.1.1.mem.str.ro <#186.1.5.mem.ro, ofs 0x2e, size 2, "bb">
  [2] #194.1.3.hash.ro <size 2, max 2>
  [3] #194.1.3.hash.ro <size 2, max 2>
error 12 (readonly), ip = #186:0x32
