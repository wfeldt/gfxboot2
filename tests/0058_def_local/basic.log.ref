# ---  trace  ---
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.2.mem.ro, "error ok">
GC: --#xxxx.1.1.mem.str.ro
GC: --#xxxx.1.2.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.2.mem.ro, "foo_1">
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <99 (0x63)>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.2.mem.ro, "foo_1">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.num.int
GC: --#xxxx.1.2.num.int
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.2.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.3.mem.ro, "bar">
GC: ++#xxxx.1.3.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.code.ro <#xxxx.1.4.mem.ro>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.4.mem.ro, "bar">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.mem.code.ro
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.mem.code.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.num.int
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.num.int <99 (0x63)>
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo_1">
  [1] #xxxx.1.2.num.int <99 (0x63)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <11 (0xb)>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo_1">
  [2] #xxxx.1.2.num.int <99 (0x63)>
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.num.int
GC: --#xxxx.1.1.mem.ref.ro
GC: --#xxxx.1.5.mem.ro
GC: --#xxxx.1.2.num.int
GC: --#xxxx.1.2.num.int
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <99 (0x63)>
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo_2">
  [1] #xxxx.1.1.num.int <99 (0x63)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <22 (0x16)>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "foo_2">
  [2] #xxxx.1.1.num.int <99 (0x63)>
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.num.int
GC: --#xxxx.1.2.num.int
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro, dict #xxxx.1.1.hash>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <99 (0x63)>
GC: ++#xxxx.1.1.num.int
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro, dict #xxxx.1.1.hash>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.num.int <11 (0xb)>
  [1] #xxxx.1.1.num.int <99 (0x63)>
GC: ++#xxxx.1.1.num.int
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.code.ro, dict #xxxx.1.1.hash>
  [1] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.num.int <22 (0x16)>
  [1] #xxxx.1.2.num.int <11 (0xb)>
  [2] #xxxx.1.1.num.int <99 (0x63)>
GC: ++#xxxx.1.1.ctx.func
GC: --#xxxx.1.1.ctx.func
GC: --#xxxx.1.2.ctx.func
GC: --#xxxx.1.2.mem.code.ro
GC: --#xxxx.1.1.hash
GC: --#xxxx.1.1.mem.ref.ro
GC: --#xxxx.1.2.num.int
GC: --#xxxx.1.5.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.int <22 (0x16)>
  [1] #xxxx.1.2.num.int <11 (0xb)>
  [2] #xxxx.1.1.num.int <99 (0x63)>
GC: ++#xxxx.1.2.num.int
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.3.num.int <11 (0xb)>
  [1] #xxxx.1.1.num.int <22 (0x16)>
  [2] #xxxx.1.3.num.int <11 (0xb)>
  [3] #xxxx.1.1.num.int <99 (0x63)>
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.3.num.int <11 (0xb)>
  [1] #xxxx.1.1.num.int <22 (0x16)>
  [2] #xxxx.1.3.num.int <11 (0xb)>
  [3] #xxxx.1.1.num.int <99 (0x63)>
error 1 (invalid code), ip = #213
