# ---  trace  ---
IP: #186:0x0, type 5, 1[7]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x8, type 9, 9[5]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xe (0x8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0xe, type 1, 99 (0x63)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x10 (0xe), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.num.int <99 (0x63)>
  [1] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #186:0x10, type 8, 17[3]
GC: ++#189.1.1.mem.ref.ro
GC: ++#190.1.1.num.int
GC: --#190.1.2.num.int
GC: --#189.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x14 (0x10), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x14, type 9, 21[3]
GC: ++#186.1.2.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x18 (0x14), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #191.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x15, size 3, "bar">
IP: #186:0x18, type 6, 26[43]
GC: ++#186.1.3.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x45 (0x18), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.1.mem.code.ro <#186.1.4.mem.ro, ofs 0x1a, size 43>
  [1] #191.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x15, size 3, "bar">
IP: #186:0x45, type 8, 70[3]
GC: ++#191.1.1.mem.ref.ro
GC: ++#192.1.1.mem.code.ro
GC: --#192.1.2.mem.code.ro
GC: --#191.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x49 (0x45), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x49, type 8, 74[3]
GC: ++#192.1.1.mem.code.ro
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0x0 (0x0)>
  [1] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #192:0x0, type 8, 1[5]
GC: ++#190.1.1.num.int
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0x6 (0x0)>
  [1] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.2.num.int <99 (0x63)>
IP: #192:0x6, type 9, 7[5]
GC: ++#186.1.4.mem.ro
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0xc (0x6)>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x21, size 5, "foo_1">
  [1] #190.1.2.num.int <99 (0x63)>
IP: #192:0xc, type 1, 11 (0xb)
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0xe (0xc)>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.1.num.int <11 (0xb)>
  [1] #194.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x21, size 5, "foo_1">
  [2] #190.1.2.num.int <99 (0x63)>
IP: #192:0xe, type 8, 15[3]
GC: ++#194.1.1.mem.ref.ro
GC: ++#195.1.1.num.int
GC: --#189.1.1.mem.ref.ro
GC: --#186.1.5.mem.ro
GC: --#190.1.2.num.int
GC: --#195.1.2.num.int
GC: --#194.1.2.mem.ref.ro
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0x12 (0xe)>
  [1] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.num.int <99 (0x63)>
IP: #192:0x12, type 9, 19[5]
GC: ++#186.1.4.mem.ro
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0x18 (0x12)>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #197.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x2d, size 5, "foo_2">
  [1] #190.1.1.num.int <99 (0x63)>
IP: #192:0x18, type 1, 22 (0x16)
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0x1a (0x18)>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.num.int <22 (0x16)>
  [1] #197.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x2d, size 5, "foo_2">
  [2] #190.1.1.num.int <99 (0x63)>
IP: #192:0x1a, type 8, 27[3]
GC: ++#197.1.1.mem.ref.ro
GC: ++#198.1.1.num.int
GC: --#198.1.2.num.int
GC: --#197.1.2.mem.ref.ro
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0x1e (0x1a), dict #199.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.num.int <99 (0x63)>
IP: #192:0x1e, type 8, 31[5]
GC: ++#195.1.1.num.int
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0x24 (0x1e), dict #199.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.2.num.int <11 (0xb)>
  [1] #190.1.1.num.int <99 (0x63)>
IP: #192:0x24, type 8, 37[5]
GC: ++#198.1.1.num.int
== backtrace ==
  [0] #193.1.1.ctx.func <code #192.1.2.mem.code.ro, ip 0x2a (0x24), dict #199.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.2.num.int <22 (0x16)>
  [1] #195.1.2.num.int <11 (0xb)>
  [2] #190.1.1.num.int <99 (0x63)>
IP: #192:0x2a, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#193.1.1.ctx.func
GC: --#188.1.2.ctx.func
GC: --#192.1.2.mem.code.ro
GC: --#199.1.1.hash
GC: --#197.1.1.mem.ref.ro
GC: --#198.1.2.num.int
GC: --#186.1.5.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x4d (0x49), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.num.int <22 (0x16)>
  [1] #195.1.2.num.int <11 (0xb)>
  [2] #190.1.1.num.int <99 (0x63)>
IP: #186:0x4d, type 8, 78[5]
GC: ++#195.1.2.num.int
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x53 (0x4d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.3.num.int <11 (0xb)>
  [1] #198.1.1.num.int <22 (0x16)>
  [2] #195.1.3.num.int <11 (0xb)>
  [3] #190.1.1.num.int <99 (0x63)>
IP: #186:0x53, type 8, 84[5]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x59 (0x53), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.3.num.int <11 (0xb)>
  [1] #198.1.1.num.int <22 (0x16)>
  [2] #195.1.3.num.int <11 (0xb)>
  [3] #190.1.1.num.int <99 (0x63)>
error 1 (invalid code), ip = #186:0x53
