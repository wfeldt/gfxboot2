# ---  trace  ---
IP: #197:0x0, type 5, 1[7]
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x8 (0x0), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x8, type 9, 9[3]
GC: ++#197.1.1.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0xc (0x8), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #200.1.1.mem.ref.ro <#197.1.2.mem.ro, ofs 0x9, size 3, "bar">
IP: #197:0xc, type 1, 10 (0xa)
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0xe (0xc), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #201.1.1.num.int <10 (0xa)>
  [1] #200.1.1.mem.ref.ro <#197.1.2.mem.ro, ofs 0x9, size 3, "bar">
IP: #197:0xe, type 8, 15[3]
GC: ++#200.1.1.mem.ref.ro
GC: ++#201.1.1.num.int
GC: --#201.1.2.num.int
GC: --#200.1.2.mem.ref.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0x12 (0xe), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x12, type 9, 19[4]
GC: ++#197.1.2.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x17 (0x12), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #202.1.1.mem.ref.ro <#197.1.3.mem.ro, ofs 0x13, size 4, "foo1">
IP: #197:0x17, type 6, 24[11]
GC: ++#197.1.3.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.4.mem.ro, ip 0x23 (0x17), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #203.1.1.mem.code.ro <#197.1.4.mem.ro, ofs 0x18, size 11>
  [1] #202.1.1.mem.ref.ro <#197.1.4.mem.ro, ofs 0x13, size 4, "foo1">
IP: #197:0x23, type 8, 36[3]
GC: ++#202.1.1.mem.ref.ro
GC: ++#203.1.1.mem.code.ro
GC: --#203.1.2.mem.code.ro
GC: --#202.1.2.mem.ref.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.4.mem.ro, ip 0x27 (0x23), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x27, type 9, 40[4]
GC: ++#197.1.4.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.5.mem.ro, ip 0x2c (0x27), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #204.1.1.mem.ref.ro <#197.1.5.mem.ro, ofs 0x28, size 4, "foo2">
IP: #197:0x2c, type 6, 46[24]
GC: ++#197.1.5.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x46 (0x2c), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #205.1.1.mem.code.ro <#197.1.6.mem.ro, ofs 0x2e, size 24>
  [1] #204.1.1.mem.ref.ro <#197.1.6.mem.ro, ofs 0x28, size 4, "foo2">
IP: #197:0x46, type 8, 71[3]
GC: ++#204.1.1.mem.ref.ro
GC: ++#205.1.1.mem.code.ro
GC: --#205.1.2.mem.code.ro
GC: --#204.1.2.mem.ref.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x4a (0x46), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x4a, type 8, 75[3]
GC: ++#201.1.1.num.int
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x4e (0x4a), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #201.1.2.num.int <10 (0xa)>
IP: #197:0x4e, type 8, 79[4]
GC: ++#205.1.1.mem.code.ro
== backtrace ==
  [0] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x0 (0x0)>
  [1] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #201.1.2.num.int <10 (0xa)>
IP: #205:0x0, type 9, 1[3]
GC: ++#197.1.6.mem.ro
== backtrace ==
  [0] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x4 (0x0)>
  [1] #199.1.1.ctx.func <code #197.1.7.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #207.1.1.mem.ref.ro <#197.1.7.mem.ro, ofs 0x2f, size 3, "bar">
  [1] #201.1.2.num.int <10 (0xa)>
IP: #205:0x4, type 1, 30 (0x1e)
== backtrace ==
  [0] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x6 (0x4)>
  [1] #199.1.1.ctx.func <code #197.1.7.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.1.num.int <30 (0x1e)>
  [1] #207.1.1.mem.ref.ro <#197.1.7.mem.ro, ofs 0x2f, size 3, "bar">
  [2] #201.1.2.num.int <10 (0xa)>
IP: #205:0x6, type 8, 7[3]
GC: ++#207.1.1.mem.ref.ro
GC: ++#208.1.1.num.int
GC: --#200.1.1.mem.ref.ro
GC: --#197.1.7.mem.ro
GC: --#201.1.2.num.int
GC: --#208.1.2.num.int
GC: --#207.1.2.mem.ref.ro
== backtrace ==
  [0] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0xa (0x6)>
  [1] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #201.1.1.num.int <10 (0xa)>
IP: #205:0xa, type 8, 11[3]
GC: ++#208.1.1.num.int
== backtrace ==
  [0] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0xe (0xa)>
  [1] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.2.num.int <30 (0x1e)>
  [1] #201.1.1.num.int <10 (0xa)>
IP: #205:0xe, type 8, 15[4]
GC: ++#203.1.1.mem.code.ro
== backtrace ==
  [0] #210.1.1.ctx.func <code #203.1.2.mem.code.ro, ip 0x0 (0x0)>
  [1] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x13 (0xe)>
  [2] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.2.num.int <30 (0x1e)>
  [1] #201.1.1.num.int <10 (0xa)>
IP: #203:0x0, type 9, 1[3]
GC: ++#197.1.6.mem.ro
== backtrace ==
  [0] #210.1.1.ctx.func <code #203.1.2.mem.code.ro, ip 0x4 (0x0)>
  [1] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x13 (0xe)>
  [2] #199.1.1.ctx.func <code #197.1.7.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #211.1.1.mem.ref.ro <#197.1.7.mem.ro, ofs 0x19, size 3, "bar">
  [1] #208.1.2.num.int <30 (0x1e)>
  [2] #201.1.1.num.int <10 (0xa)>
IP: #203:0x4, type 1, 20 (0x14)
== backtrace ==
  [0] #210.1.1.ctx.func <code #203.1.2.mem.code.ro, ip 0x6 (0x4)>
  [1] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x13 (0xe)>
  [2] #199.1.1.ctx.func <code #197.1.7.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #212.1.1.num.int <20 (0x14)>
  [1] #211.1.1.mem.ref.ro <#197.1.7.mem.ro, ofs 0x19, size 3, "bar">
  [2] #208.1.2.num.int <30 (0x1e)>
  [3] #201.1.1.num.int <10 (0xa)>
IP: #203:0x6, type 8, 7[3]
GC: ++#211.1.1.mem.ref.ro
GC: ++#212.1.1.num.int
GC: --#207.1.1.mem.ref.ro
GC: --#197.1.7.mem.ro
GC: --#208.1.2.num.int
GC: --#212.1.2.num.int
GC: --#211.1.2.mem.ref.ro
== backtrace ==
  [0] #210.1.1.ctx.func <code #203.1.2.mem.code.ro, ip 0xa (0x6)>
  [1] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x13 (0xe)>
  [2] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.1.num.int <30 (0x1e)>
  [1] #201.1.1.num.int <10 (0xa)>
IP: #203:0xa, type 3, 1 (0x1)
GC: ++#206.1.1.ctx.func
GC: --#210.1.1.ctx.func
GC: --#206.1.2.ctx.func
GC: --#203.1.2.mem.code.ro
== backtrace ==
  [0] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x13 (0xe)>
  [1] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.1.num.int <30 (0x1e)>
  [1] #201.1.1.num.int <10 (0xa)>
IP: #205:0x13, type 8, 20[3]
GC: ++#212.1.1.num.int
== backtrace ==
  [0] #206.1.1.ctx.func <code #205.1.2.mem.code.ro, ip 0x17 (0x13)>
  [1] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #212.1.2.num.int <20 (0x14)>
  [1] #208.1.1.num.int <30 (0x1e)>
  [2] #201.1.1.num.int <10 (0xa)>
IP: #205:0x17, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#206.1.1.ctx.func
GC: --#199.1.2.ctx.func
GC: --#205.1.2.mem.code.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x53 (0x4e), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #212.1.2.num.int <20 (0x14)>
  [1] #208.1.1.num.int <30 (0x1e)>
  [2] #201.1.1.num.int <10 (0xa)>
IP: #197:0x53, type 8, 84[3]
GC: ++#212.1.2.num.int
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x57 (0x53), dict #5.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #212.1.3.num.int <20 (0x14)>
  [1] #212.1.3.num.int <20 (0x14)>
  [2] #208.1.1.num.int <30 (0x1e)>
  [3] #201.1.1.num.int <10 (0xa)>
