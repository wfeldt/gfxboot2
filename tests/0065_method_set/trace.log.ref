# ---  trace  ---
IP: #186:0x0, type 5, 1[7]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x8, type 9, 9[3]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xc (0x8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0xc, type 8, 13[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0xe (0xc), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0xe, type 9, 15[2]
GC: ++#186.1.2.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x11 (0xe), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0xf, size 2, "3x">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #189.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0x11, type 6, 18[8]
GC: ++#186.1.3.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x1a (0x11), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #191.1.1.mem.code.ro <#186.1.4.mem.ro, ofs 0x12, size 8>
  [1] #190.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0xf, size 2, "3x">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #189.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0x1a, type 8, 27[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x1c (0x1a), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.1.hash <size 1, max 1>
  [1] #189.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x9, size 3, "foo">
IP: #186:0x1c, type 8, 29[3]
GC: ++#189.1.1.mem.ref.ro
GC: ++#192.1.1.hash
GC: --#192.1.2.hash
GC: --#189.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x20 (0x1c), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x20, type 8, 33[3]
GC: ++#192.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x24 (0x20), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.2.hash <size 1, max 1>
IP: #186:0x24, type 1, 100 (0x64)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x26 (0x24), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.num.int <100 (0x64)>
  [1] #192.1.2.hash <size 1, max 1>
IP: #186:0x26, type 11, 39[1]
GC: ++#186.1.4.mem.ro
GC: ++#194.1.1.mem.ref.ro
GC: ++#193.1.1.num.int
GC: --#193.1.2.num.int
GC: --#192.1.2.hash
GC: --#194.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x28 (0x26), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x28, type 8, 41[3]
GC: ++#192.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x2c (0x28), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.2.hash <size 2, max 17>
IP: #186:0x2c, type 10, 45[1]
GC: ++#193.1.1.num.int
GC: --#192.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x2e (0x2c), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.2.num.int <100 (0x64)>
IP: #186:0x2e, type 8, 47[3]
GC: ++#192.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x32 (0x2e), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.2.hash <size 2, max 17>
  [1] #193.1.2.num.int <100 (0x64)>
IP: #186:0x32, type 10, 51[2]
GC: ++#191.1.1.mem.code.ro
GC: ++#192.1.2.hash
GC: --#192.1.3.hash
== backtrace ==
  [0] #195.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x0 (0x0), dict #196.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x35 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.2.num.int <100 (0x64)>
IP: #191:0x0, type 8, 1[1]
GC: ++#193.1.2.num.int
== backtrace ==
  [0] #195.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x2 (0x0), dict #196.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x35 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.3.num.int <100 (0x64)>
  [1] #193.1.3.num.int <100 (0x64)>
IP: #191:0x2, type 1, 3 (0x3)
== backtrace ==
  [0] #195.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x3 (0x2), dict #196.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x35 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #197.1.1.num.int <3 (0x3)>
  [1] #193.1.3.num.int <100 (0x64)>
  [2] #193.1.3.num.int <100 (0x64)>
IP: #191:0x3, type 8, 4[3]
GC: --#197.1.1.num.int
GC: --#193.1.3.num.int
== backtrace ==
  [0] #195.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x7 (0x3), dict #196.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x35 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.num.int <300 (0x12c)>
  [1] #193.1.2.num.int <100 (0x64)>
IP: #191:0x7, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#195.1.1.ctx.func
GC: --#188.1.2.ctx.func
GC: --#191.1.2.mem.code.ro
GC: --#196.1.1.hash
GC: --#192.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x35 (0x32), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.num.int <300 (0x12c)>
  [1] #193.1.2.num.int <100 (0x64)>
