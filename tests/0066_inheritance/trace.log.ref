# ---  trace  ---
IP: #186:0x0, type 5, 1[7]
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x8 (0x0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x8, type 8, 9[9]
GC: ++#2.1.1.gstate
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x12 (0x8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #2.1.2.gstate <region 0x0_800x600>
IP: #186:0x12, type 8, 20[16]
GC: ++#3.1.1.gstate
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x24 (0x12), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #3.1.2.gstate <region 80x100_640x400>
  [1] #2.1.2.gstate <region 0x0_800x600>
IP: #186:0x24, type 8, 37[7]
GC: --#3.1.2.gstate
GC: ++#184.1.1.font
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x2c (0x24), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #184.1.2.font <glyphs 256, size 8x16, line height 16>
  [1] #2.1.2.gstate <region 0x0_800x600>
IP: #186:0x2c, type 8, 45[7]
GC: ++#184.1.2.font
GC: --#184.1.3.font
GC: --#2.1.2.gstate
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.1.mem.ro, ip 0x34 (0x2c), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x34, type 9, 53[6]
GC: ++#186.1.1.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x3b (0x34), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x35, size 6, "widget">
IP: #186:0x3b, type 8, 60[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.2.mem.ro, ip 0x3d (0x3b), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #189.1.1.mem.ref.ro <#186.1.2.mem.ro, ofs 0x35, size 6, "widget">
IP: #186:0x3d, type 9, 62[5]
GC: ++#186.1.2.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.3.mem.ro, ip 0x43 (0x3d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #190.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x3e, size 5, "draw1">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #189.1.1.mem.ref.ro <#186.1.3.mem.ro, ofs 0x35, size 6, "widget">
IP: #186:0x43, type 6, 69[22]
GC: ++#186.1.3.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x5b (0x43), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #191.1.1.mem.code.ro <#186.1.4.mem.ro, ofs 0x45, size 22>
  [1] #190.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x3e, size 5, "draw1">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #189.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x35, size 6, "widget">
IP: #186:0x5b, type 8, 92[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x5d (0x5b), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.1.hash <size 1, max 1>
  [1] #189.1.1.mem.ref.ro <#186.1.4.mem.ro, ofs 0x35, size 6, "widget">
IP: #186:0x5d, type 8, 94[3]
GC: ++#189.1.1.mem.ref.ro
GC: ++#192.1.1.hash
GC: --#192.1.2.hash
GC: --#189.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.4.mem.ro, ip 0x61 (0x5d), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0x61, type 9, 98[3]
GC: ++#186.1.4.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x65 (0x61), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #193.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0x65, type 8, 102[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.5.mem.ro, ip 0x67 (0x65), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #13.1.2.num.prim <4 (0x4)>
  [1] #193.1.1.mem.ref.ro <#186.1.5.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0x67, type 9, 104[1]
GC: ++#186.1.5.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x69 (0x67), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #194.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x68, size 1, "y">
  [1] #13.1.2.num.prim <4 (0x4)>
  [2] #193.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0x69, type 1, 20 (0x14)
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.6.mem.ro, ip 0x6b (0x69), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.1.num.int <20 (0x14)>
  [1] #194.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x68, size 1, "y">
  [2] #13.1.2.num.prim <4 (0x4)>
  [3] #193.1.1.mem.ref.ro <#186.1.6.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0x6b, type 9, 108[4]
GC: ++#186.1.6.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.7.mem.ro, ip 0x70 (0x6b), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #196.1.1.mem.ref.ro <#186.1.7.mem.ro, ofs 0x6c, size 4, "text">
  [1] #195.1.1.num.int <20 (0x14)>
  [2] #194.1.1.mem.ref.ro <#186.1.7.mem.ro, ofs 0x68, size 1, "y">
  [3] #13.1.2.num.prim <4 (0x4)>
  [4] #193.1.1.mem.ref.ro <#186.1.7.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0x70, type 7, 113[2]
GC: ++#186.1.7.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.8.mem.ro, ip 0x73 (0x70), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #197.1.1.mem.str.ro <#186.1.8.mem.ro, ofs 0x71, size 2, "XX">
  [1] #196.1.1.mem.ref.ro <#186.1.8.mem.ro, ofs 0x6c, size 4, "text">
  [2] #195.1.1.num.int <20 (0x14)>
  [3] #194.1.1.mem.ref.ro <#186.1.8.mem.ro, ofs 0x68, size 1, "y">
  [4] #13.1.2.num.prim <4 (0x4)>
  [5] #193.1.1.mem.ref.ro <#186.1.8.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0x73, type 9, 116[5]
GC: ++#186.1.8.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0x79 (0x73), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #198.1.1.mem.ref.ro <#186.1.9.mem.ro, ofs 0x74, size 5, "draw2">
  [1] #197.1.1.mem.str.ro <#186.1.9.mem.ro, ofs 0x71, size 2, "XX">
  [2] #196.1.1.mem.ref.ro <#186.1.9.mem.ro, ofs 0x6c, size 4, "text">
  [3] #195.1.1.num.int <20 (0x14)>
  [4] #194.1.1.mem.ref.ro <#186.1.9.mem.ro, ofs 0x68, size 1, "y">
  [5] #13.1.2.num.prim <4 (0x4)>
  [6] #193.1.1.mem.ref.ro <#186.1.9.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0x79, type 6, 123[58]
GC: ++#186.1.9.mem.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xb5 (0x79), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #199.1.1.mem.code.ro <#186.1.10.mem.ro, ofs 0x7b, size 58>
  [1] #198.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x74, size 5, "draw2">
  [2] #197.1.1.mem.str.ro <#186.1.10.mem.ro, ofs 0x71, size 2, "XX">
  [3] #196.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x6c, size 4, "text">
  [4] #195.1.1.num.int <20 (0x14)>
  [5] #194.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x68, size 1, "y">
  [6] #13.1.2.num.prim <4 (0x4)>
  [7] #193.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0xb5, type 8, 182[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xb7 (0xb5), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #200.1.1.hash <size 3, max 3>
  [1] #193.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x62, size 3, "win">
IP: #186:0xb7, type 8, 184[3]
GC: ++#193.1.1.mem.ref.ro
GC: ++#200.1.1.hash
GC: --#200.1.2.hash
GC: --#193.1.2.mem.ref.ro
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xbb (0xb7), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xbb, type 8, 188[3]
GC: ++#200.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xbf (0xbb), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #200.1.2.hash <size 3, max 3>
IP: #186:0xbf, type 8, 192[6]
GC: ++#192.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xc6 (0xbf), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #192.1.2.hash <size 1, max 1>
  [1] #200.1.2.hash <size 3, max 3>
IP: #186:0xc6, type 8, 199[9]
GC: ++#192.1.2.hash
GC: --#192.1.3.hash
GC: --#200.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xd0 (0xc6), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xd0, type 8, 209[3]
GC: ++#200.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xd4 (0xd0), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #200.1.2.hash <size 3, max 3, parent #192.1.2.hash>
IP: #186:0xd4, type 10, 213[5]
GC: ++#199.1.1.mem.code.ro
GC: ++#200.1.2.hash
GC: --#200.1.3.hash
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x0 (0x0), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x2 (0x0), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #203.1.1.num.int <10 (0xa)>
IP: #199:0x2, type 8, 3[1]
GC: ++#195.1.1.num.int
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x4 (0x2), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.2.num.int <20 (0x14)>
  [1] #203.1.1.num.int <10 (0xa)>
IP: #199:0x4, type 8, 5[6]
GC: --#195.1.2.num.int
GC: --#203.1.1.num.int
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0xb (0x4), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0xb, type 8, 12[4]
GC: ++#197.1.1.mem.str.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x10 (0xb), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #197.1.2.mem.str.ro <#186.1.10.mem.ro, ofs 0x71, size 2, "XX">
IP: #199:0x10, type 8, 17[4]
GC: --#197.1.2.mem.str.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x15 (0x10), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x15, type 9, 22[1]
GC: ++#186.1.10.mem.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x17 (0x15), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #205.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x17, type 8, 24[1]
GC: ++#195.1.1.num.int
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x19 (0x17), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #195.1.2.num.int <20 (0x14)>
  [1] #205.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x1b (0x19), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #206.1.1.num.int <20 (0x14)>
  [1] #195.1.2.num.int <20 (0x14)>
  [2] #205.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x1b, type 8, 28[3]
GC: --#206.1.1.num.int
GC: --#195.1.2.num.int
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x1f (0x1b), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #207.1.1.num.int <40 (0x28)>
  [1] #205.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x1f, type 8, 32[3]
GC: ++#205.1.1.mem.ref.ro
GC: ++#207.1.1.num.int
GC: --#194.1.1.mem.ref.ro
GC: --#186.1.11.mem.ro
GC: --#195.1.1.num.int
GC: --#207.1.2.num.int
GC: --#205.1.2.mem.ref.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x23 (0x1f), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x23, type 9, 36[4]
GC: ++#186.1.10.mem.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x28 (0x23), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #208.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x28, type 8, 41[4]
GC: ++#197.1.1.mem.str.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x2d (0x28), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #197.1.2.mem.str.ro <#186.1.11.mem.ro, ofs 0x71, size 2, "XX">
  [1] #208.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x2d, type 7, 46[3]
GC: ++#186.1.11.mem.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x31 (0x2d), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.12.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #209.1.1.mem.str.ro <#186.1.12.mem.ro, ofs 0xa9, size 3, " XX">
  [1] #197.1.2.mem.str.ro <#186.1.12.mem.ro, ofs 0x71, size 2, "XX">
  [2] #208.1.1.mem.ref.ro <#186.1.12.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x31, type 8, 50[3]
GC: --#209.1.1.mem.str.ro
GC: --#186.1.12.mem.ro
GC: --#197.1.2.mem.str.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x35 (0x31), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #210.1.1.mem.str <size 5, "XX XX">
  [1] #208.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x35, type 8, 54[3]
GC: ++#208.1.1.mem.ref.ro
GC: ++#210.1.1.mem.str
GC: --#196.1.1.mem.ref.ro
GC: --#186.1.11.mem.ro
GC: --#197.1.1.mem.str.ro
GC: --#186.1.10.mem.ro
GC: --#210.1.2.mem.str
GC: --#208.1.2.mem.ref.ro
== backtrace ==
  [0] #201.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x39 (0x35), dict #202.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x39, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#201.1.1.ctx.func
GC: --#188.1.2.ctx.func
GC: --#199.1.2.mem.code.ro
GC: --#202.1.1.hash
GC: --#200.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xda (0xd4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xda, type 8, 219[3]
GC: ++#200.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xde (0xda), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #200.1.2.hash <size 3, max 3, parent #192.1.2.hash>
IP: #186:0xde, type 10, 223[5]
GC: ++#199.1.1.mem.code.ro
GC: ++#200.1.2.hash
GC: --#200.1.3.hash
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x0 (0x0), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x2 (0x0), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #213.1.1.num.int <10 (0xa)>
IP: #199:0x2, type 8, 3[1]
GC: ++#207.1.1.num.int
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x4 (0x2), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #207.1.2.num.int <40 (0x28)>
  [1] #213.1.1.num.int <10 (0xa)>
IP: #199:0x4, type 8, 5[6]
GC: --#207.1.2.num.int
GC: --#213.1.1.num.int
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0xb (0x4), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0xb, type 8, 12[4]
GC: ++#210.1.1.mem.str
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x10 (0xb), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #210.1.2.mem.str <size 5, "XX XX">
IP: #199:0x10, type 8, 17[4]
GC: --#210.1.2.mem.str
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x15 (0x10), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x15, type 9, 22[1]
GC: ++#186.1.9.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x17 (0x15), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #214.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x17, type 8, 24[1]
GC: ++#207.1.1.num.int
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x19 (0x17), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #207.1.2.num.int <40 (0x28)>
  [1] #214.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x1b (0x19), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #215.1.1.num.int <20 (0x14)>
  [1] #207.1.2.num.int <40 (0x28)>
  [2] #214.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x1b, type 8, 28[3]
GC: --#215.1.1.num.int
GC: --#207.1.2.num.int
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x1f (0x1b), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #216.1.1.num.int <60 (0x3c)>
  [1] #214.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x1f, type 8, 32[3]
GC: ++#214.1.1.mem.ref.ro
GC: ++#216.1.1.num.int
GC: --#205.1.1.mem.ref.ro
GC: --#186.1.10.mem.ro
GC: --#207.1.1.num.int
GC: --#216.1.2.num.int
GC: --#214.1.2.mem.ref.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x23 (0x1f), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x23, type 9, 36[4]
GC: ++#186.1.9.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x28 (0x23), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #217.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x28, type 8, 41[4]
GC: ++#210.1.1.mem.str
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x2d (0x28), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #210.1.2.mem.str <size 5, "XX XX">
  [1] #217.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x2d, type 7, 46[3]
GC: ++#186.1.10.mem.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x31 (0x2d), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #218.1.1.mem.str.ro <#186.1.11.mem.ro, ofs 0xa9, size 3, " XX">
  [1] #210.1.2.mem.str <size 5, "XX XX">
  [2] #217.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x31, type 8, 50[3]
GC: --#218.1.1.mem.str.ro
GC: --#186.1.11.mem.ro
GC: --#210.1.2.mem.str
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x35 (0x31), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #219.1.1.mem.str <size 8, "XX XX XX">
  [1] #217.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x35, type 8, 54[3]
GC: ++#217.1.1.mem.ref.ro
GC: ++#219.1.1.mem.str
GC: --#208.1.1.mem.ref.ro
GC: --#186.1.10.mem.ro
GC: --#210.1.1.mem.str
GC: --#219.1.2.mem.str
GC: --#217.1.2.mem.ref.ro
== backtrace ==
  [0] #211.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x39 (0x35), dict #212.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x39, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#211.1.1.ctx.func
GC: --#188.1.2.ctx.func
GC: --#199.1.2.mem.code.ro
GC: --#212.1.1.hash
GC: --#200.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe4 (0xde), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xe4, type 8, 229[3]
GC: ++#200.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xe8 (0xe4), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #200.1.2.hash <size 3, max 3, parent #192.1.2.hash>
IP: #186:0xe8, type 10, 233[5]
GC: ++#199.1.1.mem.code.ro
GC: ++#200.1.2.hash
GC: --#200.1.3.hash
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x0 (0x0), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x2 (0x0), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #222.1.1.num.int <10 (0xa)>
IP: #199:0x2, type 8, 3[1]
GC: ++#216.1.1.num.int
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x4 (0x2), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #216.1.2.num.int <60 (0x3c)>
  [1] #222.1.1.num.int <10 (0xa)>
IP: #199:0x4, type 8, 5[6]
GC: --#216.1.2.num.int
GC: --#222.1.1.num.int
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0xb (0x4), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0xb, type 8, 12[4]
GC: ++#219.1.1.mem.str
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x10 (0xb), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #219.1.2.mem.str <size 8, "XX XX XX">
IP: #199:0x10, type 8, 17[4]
GC: --#219.1.2.mem.str
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x15 (0x10), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x15, type 9, 22[1]
GC: ++#186.1.9.mem.ro
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x17 (0x15), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #223.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x17, type 8, 24[1]
GC: ++#216.1.1.num.int
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x19 (0x17), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #216.1.2.num.int <60 (0x3c)>
  [1] #223.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x1b (0x19), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #224.1.1.num.int <20 (0x14)>
  [1] #216.1.2.num.int <60 (0x3c)>
  [2] #223.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x1b, type 8, 28[3]
GC: --#224.1.1.num.int
GC: --#216.1.2.num.int
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x1f (0x1b), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #225.1.1.num.int <80 (0x50)>
  [1] #223.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x91, size 1, "y">
IP: #199:0x1f, type 8, 32[3]
GC: ++#223.1.1.mem.ref.ro
GC: ++#225.1.1.num.int
GC: --#214.1.1.mem.ref.ro
GC: --#186.1.10.mem.ro
GC: --#216.1.1.num.int
GC: --#225.1.2.num.int
GC: --#223.1.2.mem.ref.ro
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x23 (0x1f), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x23, type 9, 36[4]
GC: ++#186.1.9.mem.ro
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x28 (0x23), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #226.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x28, type 8, 41[4]
GC: ++#219.1.1.mem.str
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x2d (0x28), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #219.1.2.mem.str <size 8, "XX XX XX">
  [1] #226.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x2d, type 7, 46[3]
GC: ++#186.1.10.mem.ro
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x31 (0x2d), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.11.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #227.1.1.mem.str.ro <#186.1.11.mem.ro, ofs 0xa9, size 3, " XX">
  [1] #219.1.2.mem.str <size 8, "XX XX XX">
  [2] #226.1.1.mem.ref.ro <#186.1.11.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x31, type 8, 50[3]
GC: --#227.1.1.mem.str.ro
GC: --#186.1.11.mem.ro
GC: --#219.1.2.mem.str
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x35 (0x31), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.10.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #228.1.1.mem.str <size 11, "XX XX XX XX">
  [1] #226.1.1.mem.ref.ro <#186.1.10.mem.ro, ofs 0x9f, size 4, "text">
IP: #199:0x35, type 8, 54[3]
GC: ++#226.1.1.mem.ref.ro
GC: ++#228.1.1.mem.str
GC: --#217.1.1.mem.ref.ro
GC: --#186.1.10.mem.ro
GC: --#219.1.1.mem.str
GC: --#228.1.2.mem.str
GC: --#226.1.2.mem.ref.ro
== backtrace ==
  [0] #220.1.1.ctx.func <code #199.1.2.mem.code.ro, ip 0x39 (0x35), dict #221.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #199:0x39, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#220.1.1.ctx.func
GC: --#188.1.2.ctx.func
GC: --#199.1.2.mem.code.ro
GC: --#221.1.1.hash
GC: --#200.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xee (0xe8), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #186:0xee, type 8, 239[3]
GC: ++#200.1.1.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf2 (0xee), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #200.1.2.hash <size 3, max 3, parent #192.1.2.hash>
IP: #186:0xf2, type 10, 243[5]
GC: ++#191.1.1.mem.code.ro
GC: ++#200.1.2.hash
GC: --#200.1.3.hash
== backtrace ==
  [0] #229.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x0 (0x0), dict #230.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf8 (0xf2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #191:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #229.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x2 (0x0), dict #230.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf8 (0xf2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #231.1.1.num.int <10 (0xa)>
IP: #191:0x2, type 8, 3[1]
GC: ++#225.1.1.num.int
== backtrace ==
  [0] #229.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x4 (0x2), dict #230.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf8 (0xf2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #225.1.2.num.int <80 (0x50)>
  [1] #231.1.1.num.int <10 (0xa)>
IP: #191:0x4, type 8, 5[6]
GC: --#225.1.2.num.int
GC: --#231.1.1.num.int
== backtrace ==
  [0] #229.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0xb (0x4), dict #230.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf8 (0xf2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #191:0xb, type 8, 12[4]
GC: ++#228.1.1.mem.str
== backtrace ==
  [0] #229.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x10 (0xb), dict #230.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf8 (0xf2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
  [0] #228.1.2.mem.str <size 11, "XX XX XX XX">
IP: #191:0x10, type 8, 17[4]
GC: --#228.1.2.mem.str
== backtrace ==
  [0] #229.1.1.ctx.func <code #191.1.2.mem.code.ro, ip 0x15 (0x10), dict #230.1.1.hash>
  [1] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf8 (0xf2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
IP: #191:0x15, type 3, 1 (0x1)
GC: ++#188.1.1.ctx.func
GC: --#229.1.1.ctx.func
GC: --#188.1.2.ctx.func
GC: --#191.1.2.mem.code.ro
GC: --#230.1.1.hash
GC: --#200.1.2.hash
== backtrace ==
  [0] #188.1.1.ctx.func <code #186.1.9.mem.ro, ip 0xf8 (0xf2), dict #4.1.2.hash>
== stack (#187.1.1.array) ==
