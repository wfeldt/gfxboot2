# ---  trace  ---
IP: #213:0x0, type 5, 1[7]
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #213:0x8, type 8, 9[9]
GC: ++#5.1.2.canv
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.1.mem.ro, ip 0x12 (0x8), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #213:0x12, type 8, 19[10]
GC: ++#6.1.1.canv
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.1.mem.ro, ip 0x1d (0x12), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #6.1.2.canv <geo 80x100_640x400, region 0x0_640x400, chk 0x8ccedc00>
  [1] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #213:0x1d, type 8, 30[9]
GC: ++#6.1.2.canv
GC: --#5.1.3.canv
GC: --#6.1.3.canv
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.1.mem.ro, ip 0x27 (0x1d), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #213:0x27, type 8, 40[7]
GC: ++#2.1.1.font
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.1.mem.ro, ip 0x2f (0x27), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
  [1] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #213:0x2f, type 8, 48[4]
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.1.mem.ro, ip 0x34 (0x2f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
  [1] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
IP: #213:0x34, type 8, 53[9]
GC: ++#5.1.2.canv
GC: --#6.1.2.canv
GC: --#5.1.3.canv
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.1.mem.ro, ip 0x3e (0x34), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
IP: #213:0x3e, type 8, 63[7]
GC: ++#2.1.2.font
GC: --#2.1.3.font
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.1.mem.ro, ip 0x46 (0x3e), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #213:0x46, type 9, 71[7]
GC: ++#213.1.1.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.2.mem.ro, ip 0x4e (0x46), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #216.1.1.mem.ref.ro <#213.1.2.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #213:0x4e, type 8, 79[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.2.mem.ro, ip 0x50 (0x4e), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #216.1.1.mem.ref.ro <#213.1.2.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #213:0x50, type 9, 81[5]
GC: ++#213.1.2.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.3.mem.ro, ip 0x56 (0x50), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #217.1.1.mem.ref.ro <#213.1.3.mem.ro, ofs 0x51, size 5, "draw1">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #216.1.1.mem.ref.ro <#213.1.3.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #213:0x56, type 6, 88[22]
GC: ++#213.1.3.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.4.mem.ro, ip 0x6e (0x56), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #218.1.1.mem.code.ro <#213.1.4.mem.ro, ofs 0x58, size 22>
  [1] #217.1.1.mem.ref.ro <#213.1.4.mem.ro, ofs 0x51, size 5, "draw1">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #216.1.1.mem.ref.ro <#213.1.4.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #213:0x6e, type 8, 111[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.4.mem.ro, ip 0x70 (0x6e), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #219.1.1.hash <size 1, max 1>
  [1] #216.1.1.mem.ref.ro <#213.1.4.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #213:0x70, type 8, 113[5]
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.4.mem.ro, ip 0x76 (0x70), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #219.1.1.hash.class.ro <size 2, max 17>
  [1] #216.1.1.mem.ref.ro <#213.1.4.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #213:0x76, type 8, 119[3]
GC: ++#216.1.1.mem.ref.ro
GC: ++#219.1.1.hash.class.ro
GC: --#219.1.2.hash.class.ro
GC: --#216.1.2.mem.ref.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.4.mem.ro, ip 0x7a (0x76), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #213:0x7a, type 9, 123[7]
GC: ++#213.1.4.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.5.mem.ro, ip 0x82 (0x7a), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #222.1.1.mem.ref.ro <#213.1.5.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0x82, type 8, 131[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.5.mem.ro, ip 0x84 (0x82), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #222.1.1.mem.ref.ro <#213.1.5.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0x84, type 9, 133[1]
GC: ++#213.1.5.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.6.mem.ro, ip 0x86 (0x84), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #223.1.1.mem.ref.ro <#213.1.6.mem.ro, ofs 0x85, size 1, "y">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #222.1.1.mem.ref.ro <#213.1.6.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0x86, type 1, 0 (0x0)
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.6.mem.ro, ip 0x87 (0x86), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #224.1.1.num.int <0 (0x0)>
  [1] #223.1.1.mem.ref.ro <#213.1.6.mem.ro, ofs 0x85, size 1, "y">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #222.1.1.mem.ref.ro <#213.1.6.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0x87, type 9, 136[4]
GC: ++#213.1.6.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.7.mem.ro, ip 0x8c (0x87), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #225.1.1.mem.ref.ro <#213.1.7.mem.ro, ofs 0x88, size 4, "text">
  [1] #224.1.1.num.int <0 (0x0)>
  [2] #223.1.1.mem.ref.ro <#213.1.7.mem.ro, ofs 0x85, size 1, "y">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #222.1.1.mem.ref.ro <#213.1.7.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0x8c, type 7, 141[0]
GC: ++#213.1.7.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.8.mem.ro, ip 0x8d (0x8c), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #226.1.1.mem.str.ro <#213.1.8.mem.ro, ofs 0x8d, size 0, "">
  [1] #225.1.1.mem.ref.ro <#213.1.8.mem.ro, ofs 0x88, size 4, "text">
  [2] #224.1.1.num.int <0 (0x0)>
  [3] #223.1.1.mem.ref.ro <#213.1.8.mem.ro, ofs 0x85, size 1, "y">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #222.1.1.mem.ref.ro <#213.1.8.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0x8d, type 9, 142[5]
GC: ++#213.1.8.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.9.mem.ro, ip 0x93 (0x8d), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #227.1.1.mem.ref.ro <#213.1.9.mem.ro, ofs 0x8e, size 5, "draw2">
  [1] #226.1.1.mem.str.ro <#213.1.9.mem.ro, ofs 0x8d, size 0, "">
  [2] #225.1.1.mem.ref.ro <#213.1.9.mem.ro, ofs 0x88, size 4, "text">
  [3] #224.1.1.num.int <0 (0x0)>
  [4] #223.1.1.mem.ref.ro <#213.1.9.mem.ro, ofs 0x85, size 1, "y">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #222.1.1.mem.ref.ro <#213.1.9.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0x93, type 6, 149[58]
GC: ++#213.1.9.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.10.mem.ro, ip 0xcf (0x93), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #228.1.1.mem.code.ro <#213.1.10.mem.ro, ofs 0x95, size 58>
  [1] #227.1.1.mem.ref.ro <#213.1.10.mem.ro, ofs 0x8e, size 5, "draw2">
  [2] #226.1.1.mem.str.ro <#213.1.10.mem.ro, ofs 0x8d, size 0, "">
  [3] #225.1.1.mem.ref.ro <#213.1.10.mem.ro, ofs 0x88, size 4, "text">
  [4] #224.1.1.num.int <0 (0x0)>
  [5] #223.1.1.mem.ref.ro <#213.1.10.mem.ro, ofs 0x85, size 1, "y">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #222.1.1.mem.ref.ro <#213.1.10.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0xcf, type 9, 208[4]
GC: ++#213.1.10.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.11.mem.ro, ip 0xd4 (0xcf), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #229.1.1.mem.ref.ro <#213.1.11.mem.ro, ofs 0xd0, size 4, "init">
  [1] #228.1.1.mem.code.ro <#213.1.11.mem.ro, ofs 0x95, size 58>
  [2] #227.1.1.mem.ref.ro <#213.1.11.mem.ro, ofs 0x8e, size 5, "draw2">
  [3] #226.1.1.mem.str.ro <#213.1.11.mem.ro, ofs 0x8d, size 0, "">
  [4] #225.1.1.mem.ref.ro <#213.1.11.mem.ro, ofs 0x88, size 4, "text">
  [5] #224.1.1.num.int <0 (0x0)>
  [6] #223.1.1.mem.ref.ro <#213.1.11.mem.ro, ofs 0x85, size 1, "y">
  [7] #17.1.2.num.prim <4 (0x4)>
  [8] #222.1.1.mem.ref.ro <#213.1.11.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0xd4, type 6, 214[13]
GC: ++#213.1.11.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.12.mem.ro, ip 0xe3 (0xd4), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #230.1.1.mem.code.ro <#213.1.12.mem.ro, ofs 0xd6, size 13>
  [1] #229.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0xd0, size 4, "init">
  [2] #228.1.1.mem.code.ro <#213.1.12.mem.ro, ofs 0x95, size 58>
  [3] #227.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x8e, size 5, "draw2">
  [4] #226.1.1.mem.str.ro <#213.1.12.mem.ro, ofs 0x8d, size 0, "">
  [5] #225.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x88, size 4, "text">
  [6] #224.1.1.num.int <0 (0x0)>
  [7] #223.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x85, size 1, "y">
  [8] #17.1.2.num.prim <4 (0x4)>
  [9] #222.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0xe3, type 8, 228[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.12.mem.ro, ip 0xe5 (0xe3), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #231.1.1.hash <size 4, max 4>
  [1] #222.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0xe5, type 8, 230[3]
GC: ++#231.1.1.hash
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.12.mem.ro, ip 0xe9 (0xe5), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #231.1.2.hash <size 4, max 4>
  [1] #231.1.2.hash <size 4, max 4>
  [2] #222.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0xe9, type 8, 234[7]
GC: ++#219.1.1.hash.class.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.12.mem.ro, ip 0xf1 (0xe9), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #219.1.2.hash.class.ro <size 2, max 17>
  [1] #231.1.2.hash <size 4, max 4>
  [2] #231.1.2.hash <size 4, max 4>
  [3] #222.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0xf1, type 8, 242[9]
GC: ++#219.1.2.hash.class.ro
GC: --#219.1.3.hash.class.ro
GC: --#231.1.2.hash
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.12.mem.ro, ip 0xfb (0xf1), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #231.1.1.hash <size 4, max 4, parent #219.1.2.hash.class.ro>
  [1] #222.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0xfb, type 8, 252[5]
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.12.mem.ro, ip 0x101 (0xfb), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #231.1.1.hash.class.ro <size 5, max 20, parent #219.1.2.hash.class.ro>
  [1] #222.1.1.mem.ref.ro <#213.1.12.mem.ro, ofs 0x7b, size 7, "Widget2">
IP: #213:0x101, type 8, 258[3]
GC: ++#222.1.1.mem.ref.ro
GC: ++#231.1.1.hash.class.ro
GC: --#231.1.2.hash.class.ro
GC: --#222.1.2.mem.ref.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.12.mem.ro, ip 0x105 (0x101), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #213:0x105, type 9, 262[3]
GC: ++#213.1.12.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.13.mem.ro, ip 0x109 (0x105), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #234.1.1.mem.ref.ro <#213.1.13.mem.ro, ofs 0x106, size 3, "win">
IP: #213:0x109, type 8, 266[7]
GC: ++#231.1.1.hash.class.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.13.mem.ro, ip 0x111 (0x109), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #231.1.2.hash.class.ro <size 5, max 20, parent #219.1.2.hash.class.ro>
  [1] #234.1.1.mem.ref.ro <#213.1.13.mem.ro, ofs 0x106, size 3, "win">
IP: #213:0x111, type 8, 274[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.13.mem.ro, ip 0x113 (0x111), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #231.1.2.hash.class.ro <size 5, max 20, parent #219.1.2.hash.class.ro>
  [2] #234.1.1.mem.ref.ro <#213.1.13.mem.ro, ofs 0x106, size 3, "win">
IP: #213:0x113, type 9, 276[1]
GC: ++#213.1.13.mem.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.14.mem.ro, ip 0x115 (0x113), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #235.1.1.mem.ref.ro <#213.1.14.mem.ro, ofs 0x114, size 1, "y">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #231.1.2.hash.class.ro <size 5, max 20, parent #219.1.2.hash.class.ro>
  [3] #234.1.1.mem.ref.ro <#213.1.14.mem.ro, ofs 0x106, size 3, "win">
IP: #213:0x115, type 1, 20 (0x14)
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.14.mem.ro, ip 0x117 (0x115), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #236.1.1.num.int <20 (0x14)>
  [1] #235.1.1.mem.ref.ro <#213.1.14.mem.ro, ofs 0x114, size 1, "y">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #231.1.2.hash.class.ro <size 5, max 20, parent #219.1.2.hash.class.ro>
  [4] #234.1.1.mem.ref.ro <#213.1.14.mem.ro, ofs 0x106, size 3, "win">
IP: #213:0x117, type 8, 280[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.14.mem.ro, ip 0x119 (0x117), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #237.1.1.hash <size 1, max 1>
  [1] #231.1.2.hash.class.ro <size 5, max 20, parent #219.1.2.hash.class.ro>
  [2] #234.1.1.mem.ref.ro <#213.1.14.mem.ro, ofs 0x106, size 3, "win">
IP: #213:0x119, type 8, 282[3]
GC: ++#235.1.1.mem.ref.ro
GC: ++#236.1.1.num.int
GC: ++#231.1.2.hash.class.ro
GC: --#237.1.1.hash
GC: --#235.1.2.mem.ref.ro
GC: --#236.1.2.num.int
GC: --#231.1.3.hash.class.ro
GC: ++#230.1.1.mem.code.ro
GC: ++#238.1.1.hash.class.sticky
== backtrace ==
  [0] #240.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x0 (0x0), dict #241.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.14.mem.ro, ip 0x11d (0x119), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #238.1.2.hash.class.sticky <size 1, max 1, parent #231.1.2.hash.class.ro>
  [1] #234.1.1.mem.ref.ro <#213.1.14.mem.ro, ofs 0x106, size 3, "win">
IP: #230:0x0, type 9, 1[4]
GC: ++#213.1.14.mem.ro
== backtrace ==
  [0] #240.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x5 (0x0), dict #241.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x11d (0x119), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #242.1.1.mem.ref.ro <#213.1.15.mem.ro, ofs 0xd7, size 4, "text">
  [1] #238.1.2.hash.class.sticky <size 1, max 1, parent #231.1.2.hash.class.ro>
  [2] #234.1.1.mem.ref.ro <#213.1.15.mem.ro, ofs 0x106, size 3, "win">
IP: #230:0x5, type 7, 6[2]
GC: ++#213.1.15.mem.ro
== backtrace ==
  [0] #240.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x8 (0x5), dict #241.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x11d (0x119), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #243.1.1.mem.str.ro <#213.1.16.mem.ro, ofs 0xdc, size 2, "ZZ">
  [1] #242.1.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xd7, size 4, "text">
  [2] #238.1.2.hash.class.sticky <size 1, max 1, parent #231.1.2.hash.class.ro>
  [3] #234.1.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0x106, size 3, "win">
IP: #230:0x8, type 8, 9[3]
GC: ++#242.1.1.mem.ref.ro
GC: ++#243.1.1.mem.str.ro
GC: --#243.1.2.mem.str.ro
GC: --#242.1.2.mem.ref.ro
== backtrace ==
  [0] #240.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0xc (0x8), dict #241.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x11d (0x119), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #238.1.2.hash.class.sticky <size 2, max 17, parent #231.1.2.hash.class.ro>
  [1] #234.1.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0x106, size 3, "win">
IP: #230:0xc, type 3, 1 (0x1)
GC: ++#215.1.1.ctx.func
GC: --#240.1.1.ctx.func
GC: --#215.1.2.ctx.func
GC: --#230.1.2.mem.code.ro
GC: --#241.1.1.hash
GC: --#238.1.2.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x11d (0x119), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #238.1.1.hash.class.sticky <size 2, max 17, parent #231.1.2.hash.class.ro>
  [1] #234.1.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0x106, size 3, "win">
IP: #213:0x11d, type 8, 286[3]
GC: ++#234.1.1.mem.ref.ro
GC: ++#238.1.1.hash.class.sticky
GC: --#238.1.2.hash.class.sticky
GC: --#234.1.2.mem.ref.ro
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x121 (0x11d), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #213:0x121, type 8, 290[3]
GC: ++#238.1.1.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x125 (0x121), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #238.1.2.hash.class.sticky <size 2, max 17, parent #231.1.2.hash.class.ro>
IP: #213:0x125, type 10, 294[5]
GC: ++#228.1.1.mem.code.ro
GC: ++#238.1.2.hash.class.sticky
GC: --#238.1.3.hash.class.sticky
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x0 (0x0), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x2 (0x0), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #246.1.1.num.int <10 (0xa)>
IP: #228:0x2, type 8, 3[1]
GC: ++#236.1.1.num.int
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x4 (0x2), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #236.1.2.num.int <20 (0x14)>
  [1] #246.1.1.num.int <10 (0xa)>
IP: #228:0x4, type 8, 5[6]
GC: --#236.1.2.num.int
GC: --#246.1.1.num.int
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0xb (0x4), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0xb, type 8, 12[4]
GC: ++#243.1.1.mem.str.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x10 (0xb), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #243.1.2.mem.str.ro <#213.1.16.mem.ro, ofs 0xdc, size 2, "ZZ">
IP: #228:0x10, type 8, 17[4]
GC: --#243.1.2.mem.str.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x15 (0x10), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x15, type 9, 22[1]
GC: ++#213.1.16.mem.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x17 (0x15), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #247.1.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x17, type 8, 24[1]
GC: ++#236.1.1.num.int
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x19 (0x17), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #236.1.2.num.int <20 (0x14)>
  [1] #247.1.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x1b (0x19), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #248.1.1.num.int <20 (0x14)>
  [1] #236.1.2.num.int <20 (0x14)>
  [2] #247.1.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x1b, type 8, 28[3]
GC: --#248.1.1.num.int
GC: --#236.1.2.num.int
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x1f (0x1b), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #249.1.1.num.int <40 (0x28)>
  [1] #247.1.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x1f, type 8, 32[3]
GC: ++#247.1.1.mem.ref.ro
GC: ++#249.1.1.num.int
GC: --#235.1.1.mem.ref.ro
GC: --#213.1.17.mem.ro
GC: --#236.1.1.num.int
GC: --#249.1.2.num.int
GC: --#247.1.2.mem.ref.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x23 (0x1f), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x23, type 9, 36[4]
GC: ++#213.1.16.mem.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x28 (0x23), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #250.1.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x28, type 8, 41[4]
GC: ++#243.1.1.mem.str.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x2d (0x28), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #243.1.2.mem.str.ro <#213.1.17.mem.ro, ofs 0xdc, size 2, "ZZ">
  [1] #250.1.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x2d, type 7, 46[3]
GC: ++#213.1.17.mem.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x31 (0x2d), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.18.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #251.1.1.mem.str.ro <#213.1.18.mem.ro, ofs 0xc3, size 3, " XX">
  [1] #243.1.2.mem.str.ro <#213.1.18.mem.ro, ofs 0xdc, size 2, "ZZ">
  [2] #250.1.1.mem.ref.ro <#213.1.18.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x31, type 8, 50[3]
GC: --#251.1.1.mem.str.ro
GC: --#213.1.18.mem.ro
GC: --#243.1.2.mem.str.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x35 (0x31), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #252.1.1.mem.str <size 5, "ZZ XX">
  [1] #250.1.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x35, type 8, 54[3]
GC: ++#250.1.1.mem.ref.ro
GC: ++#252.1.1.mem.str
GC: --#242.1.1.mem.ref.ro
GC: --#213.1.17.mem.ro
GC: --#243.1.1.mem.str.ro
GC: --#213.1.16.mem.ro
GC: --#252.1.2.mem.str
GC: --#250.1.2.mem.ref.ro
== backtrace ==
  [0] #244.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x39 (0x35), dict #245.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x39, type 3, 1 (0x1)
GC: ++#215.1.1.ctx.func
GC: --#244.1.1.ctx.func
GC: --#215.1.2.ctx.func
GC: --#228.1.2.mem.code.ro
GC: --#245.1.1.hash
GC: --#238.1.2.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x12b (0x125), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #213:0x12b, type 8, 300[3]
GC: ++#238.1.1.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x12f (0x12b), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #238.1.2.hash.class.sticky <size 2, max 17, parent #231.1.2.hash.class.ro>
IP: #213:0x12f, type 10, 304[5]
GC: ++#228.1.1.mem.code.ro
GC: ++#238.1.2.hash.class.sticky
GC: --#238.1.3.hash.class.sticky
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x0 (0x0), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x2 (0x0), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #255.1.1.num.int <10 (0xa)>
IP: #228:0x2, type 8, 3[1]
GC: ++#249.1.1.num.int
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x4 (0x2), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #249.1.2.num.int <40 (0x28)>
  [1] #255.1.1.num.int <10 (0xa)>
IP: #228:0x4, type 8, 5[6]
GC: --#249.1.2.num.int
GC: --#255.1.1.num.int
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0xb (0x4), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0xb, type 8, 12[4]
GC: ++#252.1.1.mem.str
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x10 (0xb), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #252.1.2.mem.str <size 5, "ZZ XX">
IP: #228:0x10, type 8, 17[4]
GC: --#252.1.2.mem.str
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x15 (0x10), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x15, type 9, 22[1]
GC: ++#213.1.15.mem.ro
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x17 (0x15), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #256.1.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x17, type 8, 24[1]
GC: ++#249.1.1.num.int
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x19 (0x17), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #249.1.2.num.int <40 (0x28)>
  [1] #256.1.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x1b (0x19), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #257.1.1.num.int <20 (0x14)>
  [1] #249.1.2.num.int <40 (0x28)>
  [2] #256.1.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x1b, type 8, 28[3]
GC: --#257.1.1.num.int
GC: --#249.1.2.num.int
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x1f (0x1b), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #235.2.1.num.int <60 (0x3c)>
  [1] #256.1.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x1f, type 8, 32[3]
GC: ++#256.1.1.mem.ref.ro
GC: ++#235.2.1.num.int
GC: --#247.1.1.mem.ref.ro
GC: --#213.1.16.mem.ro
GC: --#249.1.1.num.int
GC: --#235.2.2.num.int
GC: --#256.1.2.mem.ref.ro
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x23 (0x1f), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x23, type 9, 36[4]
GC: ++#213.1.15.mem.ro
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x28 (0x23), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #236.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x28, type 8, 41[4]
GC: ++#252.1.1.mem.str
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x2d (0x28), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #252.1.2.mem.str <size 5, "ZZ XX">
  [1] #236.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x2d, type 7, 46[3]
GC: ++#213.1.16.mem.ro
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x31 (0x2d), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #237.2.1.mem.str.ro <#213.1.17.mem.ro, ofs 0xc3, size 3, " XX">
  [1] #252.1.2.mem.str <size 5, "ZZ XX">
  [2] #236.2.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x31, type 8, 50[3]
GC: --#237.2.1.mem.str.ro
GC: --#213.1.17.mem.ro
GC: --#252.1.2.mem.str
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x35 (0x31), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #240.2.1.mem.str <size 8, "ZZ XX XX">
  [1] #236.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x35, type 8, 54[3]
GC: ++#236.2.1.mem.ref.ro
GC: ++#240.2.1.mem.str
GC: --#250.1.1.mem.ref.ro
GC: --#213.1.16.mem.ro
GC: --#252.1.1.mem.str
GC: --#240.2.2.mem.str
GC: --#236.2.2.mem.ref.ro
== backtrace ==
  [0] #253.1.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x39 (0x35), dict #254.1.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x39, type 3, 1 (0x1)
GC: ++#215.1.1.ctx.func
GC: --#253.1.1.ctx.func
GC: --#215.1.2.ctx.func
GC: --#228.1.2.mem.code.ro
GC: --#254.1.1.hash
GC: --#238.1.2.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x135 (0x12f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #213:0x135, type 8, 310[3]
GC: ++#238.1.1.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x139 (0x135), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #238.1.2.hash.class.sticky <size 2, max 17, parent #231.1.2.hash.class.ro>
IP: #213:0x139, type 10, 314[5]
GC: ++#228.1.1.mem.code.ro
GC: ++#238.1.2.hash.class.sticky
GC: --#238.1.3.hash.class.sticky
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x0 (0x0), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x2 (0x0), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #243.2.1.num.int <10 (0xa)>
IP: #228:0x2, type 8, 3[1]
GC: ++#235.2.1.num.int
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x4 (0x2), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #235.2.2.num.int <60 (0x3c)>
  [1] #243.2.1.num.int <10 (0xa)>
IP: #228:0x4, type 8, 5[6]
GC: --#235.2.2.num.int
GC: --#243.2.1.num.int
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0xb (0x4), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0xb, type 8, 12[4]
GC: ++#240.2.1.mem.str
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x10 (0xb), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #240.2.2.mem.str <size 8, "ZZ XX XX">
IP: #228:0x10, type 8, 17[4]
GC: --#240.2.2.mem.str
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x15 (0x10), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x15, type 9, 22[1]
GC: ++#213.1.15.mem.ro
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x17 (0x15), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #244.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x17, type 8, 24[1]
GC: ++#235.2.1.num.int
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x19 (0x17), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #235.2.2.num.int <60 (0x3c)>
  [1] #244.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x1b (0x19), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #245.2.1.num.int <20 (0x14)>
  [1] #235.2.2.num.int <60 (0x3c)>
  [2] #244.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x1b, type 8, 28[3]
GC: --#245.2.1.num.int
GC: --#235.2.2.num.int
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x1f (0x1b), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #246.2.1.num.int <80 (0x50)>
  [1] #244.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xab, size 1, "y">
IP: #228:0x1f, type 8, 32[3]
GC: ++#244.2.1.mem.ref.ro
GC: ++#246.2.1.num.int
GC: --#256.1.1.mem.ref.ro
GC: --#213.1.16.mem.ro
GC: --#235.2.1.num.int
GC: --#246.2.2.num.int
GC: --#244.2.2.mem.ref.ro
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x23 (0x1f), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x23, type 9, 36[4]
GC: ++#213.1.15.mem.ro
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x28 (0x23), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #247.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x28, type 8, 41[4]
GC: ++#240.2.1.mem.str
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x2d (0x28), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #240.2.2.mem.str <size 8, "ZZ XX XX">
  [1] #247.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x2d, type 7, 46[3]
GC: ++#213.1.16.mem.ro
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x31 (0x2d), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.17.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #248.2.1.mem.str.ro <#213.1.17.mem.ro, ofs 0xc3, size 3, " XX">
  [1] #240.2.2.mem.str <size 8, "ZZ XX XX">
  [2] #247.2.1.mem.ref.ro <#213.1.17.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x31, type 8, 50[3]
GC: --#248.2.1.mem.str.ro
GC: --#213.1.17.mem.ro
GC: --#240.2.2.mem.str
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x35 (0x31), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.16.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #249.2.1.mem.str <size 11, "ZZ XX XX XX">
  [1] #247.2.1.mem.ref.ro <#213.1.16.mem.ro, ofs 0xb9, size 4, "text">
IP: #228:0x35, type 8, 54[3]
GC: ++#247.2.1.mem.ref.ro
GC: ++#249.2.1.mem.str
GC: --#236.2.1.mem.ref.ro
GC: --#213.1.16.mem.ro
GC: --#240.2.1.mem.str
GC: --#249.2.2.mem.str
GC: --#247.2.2.mem.ref.ro
== backtrace ==
  [0] #241.2.1.ctx.func <code #228.1.2.mem.code.ro, ip 0x39 (0x35), dict #242.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #228:0x39, type 3, 1 (0x1)
GC: ++#215.1.1.ctx.func
GC: --#241.2.1.ctx.func
GC: --#215.1.2.ctx.func
GC: --#228.1.2.mem.code.ro
GC: --#242.2.1.hash
GC: --#238.1.2.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x13f (0x139), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #213:0x13f, type 8, 320[3]
GC: ++#238.1.1.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x143 (0x13f), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #238.1.2.hash.class.sticky <size 2, max 17, parent #231.1.2.hash.class.ro>
IP: #213:0x143, type 10, 324[5]
GC: ++#218.1.1.mem.code.ro
GC: ++#238.1.2.hash.class.sticky
GC: --#238.1.3.hash.class.sticky
== backtrace ==
  [0] #250.2.1.ctx.func <code #218.1.2.mem.code.ro, ip 0x0 (0x0), dict #251.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x149 (0x143), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #218:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #250.2.1.ctx.func <code #218.1.2.mem.code.ro, ip 0x2 (0x0), dict #251.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x149 (0x143), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #252.2.1.num.int <10 (0xa)>
IP: #218:0x2, type 8, 3[1]
GC: ++#246.2.1.num.int
== backtrace ==
  [0] #250.2.1.ctx.func <code #218.1.2.mem.code.ro, ip 0x4 (0x2), dict #251.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x149 (0x143), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #246.2.2.num.int <80 (0x50)>
  [1] #252.2.1.num.int <10 (0xa)>
IP: #218:0x4, type 8, 5[6]
GC: --#246.2.2.num.int
GC: --#252.2.1.num.int
== backtrace ==
  [0] #250.2.1.ctx.func <code #218.1.2.mem.code.ro, ip 0xb (0x4), dict #251.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x149 (0x143), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #218:0xb, type 8, 12[4]
GC: ++#249.2.1.mem.str
== backtrace ==
  [0] #250.2.1.ctx.func <code #218.1.2.mem.code.ro, ip 0x10 (0xb), dict #251.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x149 (0x143), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
  [0] #249.2.2.mem.str <size 11, "ZZ XX XX XX">
IP: #218:0x10, type 8, 17[4]
GC: --#249.2.2.mem.str
== backtrace ==
  [0] #250.2.1.ctx.func <code #218.1.2.mem.code.ro, ip 0x15 (0x10), dict #251.2.1.hash>
  [1] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x149 (0x143), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
IP: #218:0x15, type 3, 1 (0x1)
GC: ++#215.1.1.ctx.func
GC: --#250.2.1.ctx.func
GC: --#215.1.2.ctx.func
GC: --#218.1.2.mem.code.ro
GC: --#251.2.1.hash
GC: --#238.1.2.hash.class.sticky
== backtrace ==
  [0] #215.1.1.ctx.func <code #213.1.15.mem.ro, ip 0x149 (0x143), dict #8.1.2.hash>
== stack (#214.1.1.array) ==
