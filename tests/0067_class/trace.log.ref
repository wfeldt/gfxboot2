# ---  trace  ---
IP: #215:0x0, type 5, 1[7]
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x8, type 8, 9[9]
GC: ++#5.1.2.canv
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x12 (0x8), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #215:0x12, type 8, 19[10]
GC: ++#6.1.1.canv
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x1d (0x12), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #6.1.2.canv <geo 80x100_640x400, region 0x0_640x400, chk 0x8ccedc00>
  [1] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #215:0x1d, type 8, 30[9]
GC: ++#6.1.2.canv
GC: --#5.1.3.canv
GC: --#6.1.3.canv
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x27 (0x1d), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #215:0x27, type 8, 40[7]
GC: ++#2.1.1.font
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x2f (0x27), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
  [1] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #215:0x2f, type 8, 48[4]
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x34 (0x2f), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
  [1] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
IP: #215:0x34, type 8, 53[9]
GC: ++#5.1.2.canv
GC: --#6.1.2.canv
GC: --#5.1.3.canv
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x3e (0x34), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
IP: #215:0x3e, type 8, 63[7]
GC: ++#2.1.2.font
GC: --#2.1.3.font
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x46 (0x3e), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x46, type 9, 71[7]
GC: ++#215.1.1.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x4e (0x46), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #215:0x4e, type 8, 79[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x50 (0x4e), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #215:0x50, type 9, 81[5]
GC: ++#215.1.2.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.3.mem.ro, ip 0x56 (0x50), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #219.1.1.mem.ref.ro <#215.1.3.mem.ro, ofs 0x51, size 5, "draw1">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #218.1.1.mem.ref.ro <#215.1.3.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #215:0x56, type 6, 88[22]
GC: ++#215.1.3.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.4.mem.ro, ip 0x6e (0x56), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #220.1.1.mem.code.ro <#215.1.4.mem.ro, ofs 0x58, size 22>
  [1] #219.1.1.mem.ref.ro <#215.1.4.mem.ro, ofs 0x51, size 5, "draw1">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #218.1.1.mem.ref.ro <#215.1.4.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #215:0x6e, type 8, 111[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.4.mem.ro, ip 0x70 (0x6e), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #221.1.1.hash <size 1, max 1>
  [1] #218.1.1.mem.ref.ro <#215.1.4.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #215:0x70, type 0, 0 (0x0)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.4.mem.ro, ip 0x71 (0x70), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #221.1.1.hash <size 1, max 1>
  [2] #218.1.1.mem.ref.ro <#215.1.4.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #215:0x71, type 8, 114[5]
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.4.mem.ro, ip 0x77 (0x71), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #221.1.1.hash.class.ro <size 2, max 17>
  [1] #218.1.1.mem.ref.ro <#215.1.4.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #215:0x77, type 8, 120[3]
GC: ++#218.1.1.mem.ref.ro
GC: ++#221.1.1.hash.class.ro
GC: --#221.1.2.hash.class.ro
GC: --#218.1.2.mem.ref.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.4.mem.ro, ip 0x7b (0x77), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x7b, type 9, 124[7]
GC: ++#215.1.4.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.5.mem.ro, ip 0x83 (0x7b), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #224.1.1.mem.ref.ro <#215.1.5.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0x83, type 8, 132[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.5.mem.ro, ip 0x85 (0x83), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #224.1.1.mem.ref.ro <#215.1.5.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0x85, type 9, 134[1]
GC: ++#215.1.5.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x87 (0x85), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #225.1.1.mem.ref.ro <#215.1.6.mem.ro, ofs 0x86, size 1, "y">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #224.1.1.mem.ref.ro <#215.1.6.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0x87, type 1, 0 (0x0)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x88 (0x87), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #226.1.1.num.int <0 (0x0)>
  [1] #225.1.1.mem.ref.ro <#215.1.6.mem.ro, ofs 0x86, size 1, "y">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #224.1.1.mem.ref.ro <#215.1.6.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0x88, type 9, 137[4]
GC: ++#215.1.6.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.7.mem.ro, ip 0x8d (0x88), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #227.1.1.mem.ref.ro <#215.1.7.mem.ro, ofs 0x89, size 4, "text">
  [1] #226.1.1.num.int <0 (0x0)>
  [2] #225.1.1.mem.ref.ro <#215.1.7.mem.ro, ofs 0x86, size 1, "y">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #224.1.1.mem.ref.ro <#215.1.7.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0x8d, type 7, 142[0]
GC: ++#215.1.7.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0x8e (0x8d), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #228.1.1.mem.str.ro <#215.1.8.mem.ro, ofs 0x8e, size 0, "">
  [1] #227.1.1.mem.ref.ro <#215.1.8.mem.ro, ofs 0x89, size 4, "text">
  [2] #226.1.1.num.int <0 (0x0)>
  [3] #225.1.1.mem.ref.ro <#215.1.8.mem.ro, ofs 0x86, size 1, "y">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #224.1.1.mem.ref.ro <#215.1.8.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0x8e, type 9, 143[5]
GC: ++#215.1.8.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x94 (0x8e), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #229.1.1.mem.ref.ro <#215.1.9.mem.ro, ofs 0x8f, size 5, "draw2">
  [1] #228.1.1.mem.str.ro <#215.1.9.mem.ro, ofs 0x8e, size 0, "">
  [2] #227.1.1.mem.ref.ro <#215.1.9.mem.ro, ofs 0x89, size 4, "text">
  [3] #226.1.1.num.int <0 (0x0)>
  [4] #225.1.1.mem.ref.ro <#215.1.9.mem.ro, ofs 0x86, size 1, "y">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #224.1.1.mem.ref.ro <#215.1.9.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0x94, type 6, 150[58]
GC: ++#215.1.9.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.10.mem.ro, ip 0xd0 (0x94), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #230.1.1.mem.code.ro <#215.1.10.mem.ro, ofs 0x96, size 58>
  [1] #229.1.1.mem.ref.ro <#215.1.10.mem.ro, ofs 0x8f, size 5, "draw2">
  [2] #228.1.1.mem.str.ro <#215.1.10.mem.ro, ofs 0x8e, size 0, "">
  [3] #227.1.1.mem.ref.ro <#215.1.10.mem.ro, ofs 0x89, size 4, "text">
  [4] #226.1.1.num.int <0 (0x0)>
  [5] #225.1.1.mem.ref.ro <#215.1.10.mem.ro, ofs 0x86, size 1, "y">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #224.1.1.mem.ref.ro <#215.1.10.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0xd0, type 9, 209[4]
GC: ++#215.1.10.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.11.mem.ro, ip 0xd5 (0xd0), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #231.1.1.mem.ref.ro <#215.1.11.mem.ro, ofs 0xd1, size 4, "init">
  [1] #230.1.1.mem.code.ro <#215.1.11.mem.ro, ofs 0x96, size 58>
  [2] #229.1.1.mem.ref.ro <#215.1.11.mem.ro, ofs 0x8f, size 5, "draw2">
  [3] #228.1.1.mem.str.ro <#215.1.11.mem.ro, ofs 0x8e, size 0, "">
  [4] #227.1.1.mem.ref.ro <#215.1.11.mem.ro, ofs 0x89, size 4, "text">
  [5] #226.1.1.num.int <0 (0x0)>
  [6] #225.1.1.mem.ref.ro <#215.1.11.mem.ro, ofs 0x86, size 1, "y">
  [7] #17.1.2.num.prim <4 (0x4)>
  [8] #224.1.1.mem.ref.ro <#215.1.11.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0xd5, type 6, 215[13]
GC: ++#215.1.11.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.12.mem.ro, ip 0xe4 (0xd5), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #232.1.1.mem.code.ro <#215.1.12.mem.ro, ofs 0xd7, size 13>
  [1] #231.1.1.mem.ref.ro <#215.1.12.mem.ro, ofs 0xd1, size 4, "init">
  [2] #230.1.1.mem.code.ro <#215.1.12.mem.ro, ofs 0x96, size 58>
  [3] #229.1.1.mem.ref.ro <#215.1.12.mem.ro, ofs 0x8f, size 5, "draw2">
  [4] #228.1.1.mem.str.ro <#215.1.12.mem.ro, ofs 0x8e, size 0, "">
  [5] #227.1.1.mem.ref.ro <#215.1.12.mem.ro, ofs 0x89, size 4, "text">
  [6] #226.1.1.num.int <0 (0x0)>
  [7] #225.1.1.mem.ref.ro <#215.1.12.mem.ro, ofs 0x86, size 1, "y">
  [8] #17.1.2.num.prim <4 (0x4)>
  [9] #224.1.1.mem.ref.ro <#215.1.12.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0xe4, type 8, 229[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.12.mem.ro, ip 0xe6 (0xe4), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #233.1.1.hash <size 4, max 4>
  [1] #224.1.1.mem.ref.ro <#215.1.12.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0xe6, type 8, 231[7]
GC: ++#221.1.1.hash.class.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.12.mem.ro, ip 0xee (0xe6), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #221.1.2.hash.class.ro <size 2, max 17>
  [1] #233.1.1.hash <size 4, max 4>
  [2] #224.1.1.mem.ref.ro <#215.1.12.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0xee, type 8, 239[5]
GC: ++#221.1.2.hash.class.ro
GC: --#221.1.3.hash.class.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #233.1.1.hash.class.ro <size 5, max 20, parent #221.1.2.hash.class.ro>
  [1] #224.1.1.mem.ref.ro <#215.1.12.mem.ro, ofs 0x7c, size 7, "Widget2">
IP: #215:0xf4, type 8, 245[3]
GC: ++#224.1.1.mem.ref.ro
GC: ++#233.1.1.hash.class.ro
GC: --#233.1.2.hash.class.ro
GC: --#224.1.2.mem.ref.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.12.mem.ro, ip 0xf8 (0xf4), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0xf8, type 9, 249[3]
GC: ++#215.1.12.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.13.mem.ro, ip 0xfc (0xf8), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #236.1.1.mem.ref.ro <#215.1.13.mem.ro, ofs 0xf9, size 3, "win">
IP: #215:0xfc, type 8, 253[7]
GC: ++#233.1.1.hash.class.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.13.mem.ro, ip 0x104 (0xfc), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #233.1.2.hash.class.ro <size 5, max 20, parent #221.1.2.hash.class.ro>
  [1] #236.1.1.mem.ref.ro <#215.1.13.mem.ro, ofs 0xf9, size 3, "win">
IP: #215:0x104, type 8, 261[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.13.mem.ro, ip 0x106 (0x104), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #233.1.2.hash.class.ro <size 5, max 20, parent #221.1.2.hash.class.ro>
  [2] #236.1.1.mem.ref.ro <#215.1.13.mem.ro, ofs 0xf9, size 3, "win">
IP: #215:0x106, type 9, 263[1]
GC: ++#215.1.13.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.14.mem.ro, ip 0x108 (0x106), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #237.1.1.mem.ref.ro <#215.1.14.mem.ro, ofs 0x107, size 1, "y">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #233.1.2.hash.class.ro <size 5, max 20, parent #221.1.2.hash.class.ro>
  [3] #236.1.1.mem.ref.ro <#215.1.14.mem.ro, ofs 0xf9, size 3, "win">
IP: #215:0x108, type 1, 20 (0x14)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.14.mem.ro, ip 0x10a (0x108), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #238.1.1.num.int <20 (0x14)>
  [1] #237.1.1.mem.ref.ro <#215.1.14.mem.ro, ofs 0x107, size 1, "y">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #233.1.2.hash.class.ro <size 5, max 20, parent #221.1.2.hash.class.ro>
  [4] #236.1.1.mem.ref.ro <#215.1.14.mem.ro, ofs 0xf9, size 3, "win">
IP: #215:0x10a, type 8, 267[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.14.mem.ro, ip 0x10c (0x10a), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #239.1.1.hash <size 1, max 1>
  [1] #233.1.2.hash.class.ro <size 5, max 20, parent #221.1.2.hash.class.ro>
  [2] #236.1.1.mem.ref.ro <#215.1.14.mem.ro, ofs 0xf9, size 3, "win">
IP: #215:0x10c, type 8, 269[3]
GC: ++#237.1.1.mem.ref.ro
GC: ++#238.1.1.num.int
GC: ++#233.1.2.hash.class.ro
GC: --#239.1.1.hash
GC: --#237.1.2.mem.ref.ro
GC: --#238.1.2.num.int
GC: --#233.1.3.hash.class.ro
GC: ++#232.1.1.mem.code.ro
GC: ++#240.1.1.hash.class.sticky
== backtrace ==
  [0] #242.1.1.ctx.func <code #232.1.2.mem.code.ro, ip 0x0 (0x0), dict #243.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.14.mem.ro, ip 0x110 (0x10c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash.class.sticky <size 1, max 1, parent #233.1.2.hash.class.ro>
  [1] #236.1.1.mem.ref.ro <#215.1.14.mem.ro, ofs 0xf9, size 3, "win">
IP: #232:0x0, type 9, 1[4]
GC: ++#215.1.14.mem.ro
== backtrace ==
  [0] #242.1.1.ctx.func <code #232.1.2.mem.code.ro, ip 0x5 (0x0), dict #243.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x110 (0x10c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #244.1.1.mem.ref.ro <#215.1.15.mem.ro, ofs 0xd8, size 4, "text">
  [1] #240.1.2.hash.class.sticky <size 1, max 1, parent #233.1.2.hash.class.ro>
  [2] #236.1.1.mem.ref.ro <#215.1.15.mem.ro, ofs 0xf9, size 3, "win">
IP: #232:0x5, type 7, 6[2]
GC: ++#215.1.15.mem.ro
== backtrace ==
  [0] #242.1.1.ctx.func <code #232.1.2.mem.code.ro, ip 0x8 (0x5), dict #243.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x110 (0x10c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #245.1.1.mem.str.ro <#215.1.16.mem.ro, ofs 0xdd, size 2, "ZZ">
  [1] #244.1.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xd8, size 4, "text">
  [2] #240.1.2.hash.class.sticky <size 1, max 1, parent #233.1.2.hash.class.ro>
  [3] #236.1.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xf9, size 3, "win">
IP: #232:0x8, type 8, 9[3]
GC: ++#244.1.1.mem.ref.ro
GC: ++#245.1.1.mem.str.ro
GC: --#245.1.2.mem.str.ro
GC: --#244.1.2.mem.ref.ro
== backtrace ==
  [0] #242.1.1.ctx.func <code #232.1.2.mem.code.ro, ip 0xc (0x8), dict #243.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x110 (0x10c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash.class.sticky <size 2, max 17, parent #233.1.2.hash.class.ro>
  [1] #236.1.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xf9, size 3, "win">
IP: #232:0xc, type 3, 1 (0x1)
GC: ++#217.1.1.ctx.func
GC: --#242.1.1.ctx.func
GC: --#217.1.2.ctx.func
GC: --#232.1.2.mem.code.ro
GC: --#243.1.1.hash
GC: --#240.1.2.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x110 (0x10c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.1.hash.class.sticky <size 2, max 17, parent #233.1.2.hash.class.ro>
  [1] #236.1.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xf9, size 3, "win">
IP: #215:0x110, type 8, 273[3]
GC: ++#236.1.1.mem.ref.ro
GC: ++#240.1.1.hash.class.sticky
GC: --#240.1.2.hash.class.sticky
GC: --#236.1.2.mem.ref.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x114 (0x110), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x114, type 8, 277[3]
GC: ++#240.1.1.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x118 (0x114), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash.class.sticky <size 2, max 17, parent #233.1.2.hash.class.ro>
IP: #215:0x118, type 10, 281[5]
GC: ++#230.1.1.mem.code.ro
GC: ++#240.1.2.hash.class.sticky
GC: --#240.1.3.hash.class.sticky
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x0 (0x0), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x2 (0x0), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #248.1.1.num.int <10 (0xa)>
IP: #230:0x2, type 8, 3[1]
GC: ++#238.1.1.num.int
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x4 (0x2), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #238.1.2.num.int <20 (0x14)>
  [1] #248.1.1.num.int <10 (0xa)>
IP: #230:0x4, type 8, 5[6]
GC: --#238.1.2.num.int
GC: --#248.1.1.num.int
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0xb (0x4), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0xb, type 8, 12[4]
GC: ++#245.1.1.mem.str.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x10 (0xb), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #245.1.2.mem.str.ro <#215.1.16.mem.ro, ofs 0xdd, size 2, "ZZ">
IP: #230:0x10, type 8, 17[4]
GC: --#245.1.2.mem.str.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x15 (0x10), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x15, type 9, 22[1]
GC: ++#215.1.16.mem.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x17 (0x15), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #249.1.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x17, type 8, 24[1]
GC: ++#238.1.1.num.int
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x19 (0x17), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #238.1.2.num.int <20 (0x14)>
  [1] #249.1.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x1b (0x19), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #250.1.1.num.int <20 (0x14)>
  [1] #238.1.2.num.int <20 (0x14)>
  [2] #249.1.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x1b, type 8, 28[3]
GC: --#250.1.1.num.int
GC: --#238.1.2.num.int
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x1f (0x1b), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #251.1.1.num.int <40 (0x28)>
  [1] #249.1.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x1f, type 8, 32[3]
GC: ++#249.1.1.mem.ref.ro
GC: ++#251.1.1.num.int
GC: --#237.1.1.mem.ref.ro
GC: --#215.1.17.mem.ro
GC: --#238.1.1.num.int
GC: --#251.1.2.num.int
GC: --#249.1.2.mem.ref.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x23 (0x1f), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x23, type 9, 36[4]
GC: ++#215.1.16.mem.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x28 (0x23), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #252.1.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x28, type 8, 41[4]
GC: ++#245.1.1.mem.str.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x2d (0x28), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #245.1.2.mem.str.ro <#215.1.17.mem.ro, ofs 0xdd, size 2, "ZZ">
  [1] #252.1.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x2d, type 7, 46[3]
GC: ++#215.1.17.mem.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x31 (0x2d), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.18.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #253.1.1.mem.str.ro <#215.1.18.mem.ro, ofs 0xc4, size 3, " XX">
  [1] #245.1.2.mem.str.ro <#215.1.18.mem.ro, ofs 0xdd, size 2, "ZZ">
  [2] #252.1.1.mem.ref.ro <#215.1.18.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x31, type 8, 50[3]
GC: --#253.1.1.mem.str.ro
GC: --#215.1.18.mem.ro
GC: --#245.1.2.mem.str.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x35 (0x31), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #254.1.1.mem.str <size 5, "ZZ XX">
  [1] #252.1.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x35, type 8, 54[3]
GC: ++#252.1.1.mem.ref.ro
GC: ++#254.1.1.mem.str
GC: --#244.1.1.mem.ref.ro
GC: --#215.1.17.mem.ro
GC: --#245.1.1.mem.str.ro
GC: --#215.1.16.mem.ro
GC: --#254.1.2.mem.str
GC: --#252.1.2.mem.ref.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x39 (0x35), dict #247.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x39, type 3, 1 (0x1)
GC: ++#217.1.1.ctx.func
GC: --#246.1.1.ctx.func
GC: --#217.1.2.ctx.func
GC: --#230.1.2.mem.code.ro
GC: --#247.1.1.hash
GC: --#240.1.2.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x11e, type 8, 287[3]
GC: ++#240.1.1.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x122 (0x11e), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash.class.sticky <size 2, max 17, parent #233.1.2.hash.class.ro>
IP: #215:0x122, type 10, 291[5]
GC: ++#230.1.1.mem.code.ro
GC: ++#240.1.2.hash.class.sticky
GC: --#240.1.3.hash.class.sticky
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x0 (0x0), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x2 (0x0), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #257.1.1.num.int <10 (0xa)>
IP: #230:0x2, type 8, 3[1]
GC: ++#251.1.1.num.int
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x4 (0x2), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #251.1.2.num.int <40 (0x28)>
  [1] #257.1.1.num.int <10 (0xa)>
IP: #230:0x4, type 8, 5[6]
GC: --#251.1.2.num.int
GC: --#257.1.1.num.int
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0xb (0x4), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0xb, type 8, 12[4]
GC: ++#254.1.1.mem.str
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x10 (0xb), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #254.1.2.mem.str <size 5, "ZZ XX">
IP: #230:0x10, type 8, 17[4]
GC: --#254.1.2.mem.str
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x15 (0x10), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x15, type 9, 22[1]
GC: ++#215.1.15.mem.ro
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x17 (0x15), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #237.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x17, type 8, 24[1]
GC: ++#251.1.1.num.int
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x19 (0x17), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #251.1.2.num.int <40 (0x28)>
  [1] #237.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x1b (0x19), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #238.2.1.num.int <20 (0x14)>
  [1] #251.1.2.num.int <40 (0x28)>
  [2] #237.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x1b, type 8, 28[3]
GC: --#238.2.1.num.int
GC: --#251.1.2.num.int
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x1f (0x1b), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #239.2.1.num.int <60 (0x3c)>
  [1] #237.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x1f, type 8, 32[3]
GC: ++#237.2.1.mem.ref.ro
GC: ++#239.2.1.num.int
GC: --#249.1.1.mem.ref.ro
GC: --#215.1.16.mem.ro
GC: --#251.1.1.num.int
GC: --#239.2.2.num.int
GC: --#237.2.2.mem.ref.ro
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x23 (0x1f), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x23, type 9, 36[4]
GC: ++#215.1.15.mem.ro
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x28 (0x23), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #242.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x28, type 8, 41[4]
GC: ++#254.1.1.mem.str
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x2d (0x28), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #254.1.2.mem.str <size 5, "ZZ XX">
  [1] #242.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x2d, type 7, 46[3]
GC: ++#215.1.16.mem.ro
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x31 (0x2d), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #243.2.1.mem.str.ro <#215.1.17.mem.ro, ofs 0xc4, size 3, " XX">
  [1] #254.1.2.mem.str <size 5, "ZZ XX">
  [2] #242.2.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x31, type 8, 50[3]
GC: --#243.2.1.mem.str.ro
GC: --#215.1.17.mem.ro
GC: --#254.1.2.mem.str
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x35 (0x31), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #244.2.1.mem.str <size 8, "ZZ XX XX">
  [1] #242.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x35, type 8, 54[3]
GC: ++#242.2.1.mem.ref.ro
GC: ++#244.2.1.mem.str
GC: --#252.1.1.mem.ref.ro
GC: --#215.1.16.mem.ro
GC: --#254.1.1.mem.str
GC: --#244.2.2.mem.str
GC: --#242.2.2.mem.ref.ro
== backtrace ==
  [0] #255.1.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x39 (0x35), dict #256.1.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x39, type 3, 1 (0x1)
GC: ++#217.1.1.ctx.func
GC: --#255.1.1.ctx.func
GC: --#217.1.2.ctx.func
GC: --#230.1.2.mem.code.ro
GC: --#256.1.1.hash
GC: --#240.1.2.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x128, type 8, 297[3]
GC: ++#240.1.1.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x12c (0x128), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash.class.sticky <size 2, max 17, parent #233.1.2.hash.class.ro>
IP: #215:0x12c, type 10, 301[5]
GC: ++#230.1.1.mem.code.ro
GC: ++#240.1.2.hash.class.sticky
GC: --#240.1.3.hash.class.sticky
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x0 (0x0), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x2 (0x0), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #247.2.1.num.int <10 (0xa)>
IP: #230:0x2, type 8, 3[1]
GC: ++#239.2.1.num.int
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x4 (0x2), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #239.2.2.num.int <60 (0x3c)>
  [1] #247.2.1.num.int <10 (0xa)>
IP: #230:0x4, type 8, 5[6]
GC: --#239.2.2.num.int
GC: --#247.2.1.num.int
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0xb (0x4), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0xb, type 8, 12[4]
GC: ++#244.2.1.mem.str
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x10 (0xb), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #244.2.2.mem.str <size 8, "ZZ XX XX">
IP: #230:0x10, type 8, 17[4]
GC: --#244.2.2.mem.str
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x15 (0x10), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x15, type 9, 22[1]
GC: ++#215.1.15.mem.ro
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x17 (0x15), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #248.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x17, type 8, 24[1]
GC: ++#239.2.1.num.int
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x19 (0x17), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #239.2.2.num.int <60 (0x3c)>
  [1] #248.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x1b (0x19), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #249.2.1.num.int <20 (0x14)>
  [1] #239.2.2.num.int <60 (0x3c)>
  [2] #248.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x1b, type 8, 28[3]
GC: --#249.2.1.num.int
GC: --#239.2.2.num.int
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x1f (0x1b), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #250.2.1.num.int <80 (0x50)>
  [1] #248.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xac, size 1, "y">
IP: #230:0x1f, type 8, 32[3]
GC: ++#248.2.1.mem.ref.ro
GC: ++#250.2.1.num.int
GC: --#237.2.1.mem.ref.ro
GC: --#215.1.16.mem.ro
GC: --#239.2.1.num.int
GC: --#250.2.2.num.int
GC: --#248.2.2.mem.ref.ro
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x23 (0x1f), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x23, type 9, 36[4]
GC: ++#215.1.15.mem.ro
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x28 (0x23), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #251.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x28, type 8, 41[4]
GC: ++#244.2.1.mem.str
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x2d (0x28), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #244.2.2.mem.str <size 8, "ZZ XX XX">
  [1] #251.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x2d, type 7, 46[3]
GC: ++#215.1.16.mem.ro
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x31 (0x2d), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.17.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #252.2.1.mem.str.ro <#215.1.17.mem.ro, ofs 0xc4, size 3, " XX">
  [1] #244.2.2.mem.str <size 8, "ZZ XX XX">
  [2] #251.2.1.mem.ref.ro <#215.1.17.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x31, type 8, 50[3]
GC: --#252.2.1.mem.str.ro
GC: --#215.1.17.mem.ro
GC: --#244.2.2.mem.str
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x35 (0x31), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.16.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #253.2.1.mem.str <size 11, "ZZ XX XX XX">
  [1] #251.2.1.mem.ref.ro <#215.1.16.mem.ro, ofs 0xba, size 4, "text">
IP: #230:0x35, type 8, 54[3]
GC: ++#251.2.1.mem.ref.ro
GC: ++#253.2.1.mem.str
GC: --#242.2.1.mem.ref.ro
GC: --#215.1.16.mem.ro
GC: --#244.2.1.mem.str
GC: --#253.2.2.mem.str
GC: --#251.2.2.mem.ref.ro
== backtrace ==
  [0] #245.2.1.ctx.func <code #230.1.2.mem.code.ro, ip 0x39 (0x35), dict #246.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #230:0x39, type 3, 1 (0x1)
GC: ++#217.1.1.ctx.func
GC: --#245.2.1.ctx.func
GC: --#217.1.2.ctx.func
GC: --#230.1.2.mem.code.ro
GC: --#246.2.1.hash
GC: --#240.1.2.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x132 (0x12c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x132, type 8, 307[3]
GC: ++#240.1.1.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x136 (0x132), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash.class.sticky <size 2, max 17, parent #233.1.2.hash.class.ro>
IP: #215:0x136, type 10, 311[5]
GC: ++#220.1.1.mem.code.ro
GC: ++#240.1.2.hash.class.sticky
GC: --#240.1.3.hash.class.sticky
== backtrace ==
  [0] #254.2.1.ctx.func <code #220.1.2.mem.code.ro, ip 0x0 (0x0), dict #255.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x13c (0x136), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #220:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #254.2.1.ctx.func <code #220.1.2.mem.code.ro, ip 0x2 (0x0), dict #255.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x13c (0x136), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #256.2.1.num.int <10 (0xa)>
IP: #220:0x2, type 8, 3[1]
GC: ++#250.2.1.num.int
== backtrace ==
  [0] #254.2.1.ctx.func <code #220.1.2.mem.code.ro, ip 0x4 (0x2), dict #255.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x13c (0x136), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #250.2.2.num.int <80 (0x50)>
  [1] #256.2.1.num.int <10 (0xa)>
IP: #220:0x4, type 8, 5[6]
GC: --#250.2.2.num.int
GC: --#256.2.1.num.int
== backtrace ==
  [0] #254.2.1.ctx.func <code #220.1.2.mem.code.ro, ip 0xb (0x4), dict #255.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x13c (0x136), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #220:0xb, type 8, 12[4]
GC: ++#253.2.1.mem.str
== backtrace ==
  [0] #254.2.1.ctx.func <code #220.1.2.mem.code.ro, ip 0x10 (0xb), dict #255.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x13c (0x136), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #253.2.2.mem.str <size 11, "ZZ XX XX XX">
IP: #220:0x10, type 8, 17[4]
GC: --#253.2.2.mem.str
== backtrace ==
  [0] #254.2.1.ctx.func <code #220.1.2.mem.code.ro, ip 0x15 (0x10), dict #255.2.1.hash>
  [1] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x13c (0x136), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #220:0x15, type 3, 1 (0x1)
GC: ++#217.1.1.ctx.func
GC: --#254.2.1.ctx.func
GC: --#217.1.2.ctx.func
GC: --#220.1.2.mem.code.ro
GC: --#255.2.1.hash
GC: --#240.1.2.hash.class.sticky
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.15.mem.ro, ip 0x13c (0x136), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
