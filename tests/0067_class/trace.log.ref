# ---  trace  ---
IP: #217:0x0, type 5, 1[7]
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x8, type 8, 9[9]
GC: ++#5.1.2.canv
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x12 (0x8), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #217:0x12, type 8, 19[10]
GC: ++#6.1.1.canv
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x1d (0x12), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #6.1.2.canv <geo 80x100_640x400, region 0x0_640x400, chk 0x8ccedc00>
  [1] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #217:0x1d, type 8, 30[9]
GC: ++#6.1.2.canv
GC: --#5.1.3.canv
GC: --#6.1.3.canv
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x27 (0x1d), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #217:0x27, type 8, 40[7]
GC: ++#2.1.1.font
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x2f (0x27), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
  [1] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #217:0x2f, type 8, 48[4]
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x34 (0x2f), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #5.1.2.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
  [1] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
IP: #217:0x34, type 8, 53[9]
GC: ++#5.1.2.canv
GC: --#6.1.2.canv
GC: --#5.1.3.canv
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x3e (0x34), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #2.1.2.font <glyphs 256, size 8x16, line height 16, base 0>
IP: #217:0x3e, type 8, 63[7]
GC: ++#2.1.2.font
GC: --#2.1.3.font
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x46 (0x3e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x46, type 9, 71[7]
GC: ++#217.1.1.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x4e (0x46), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x4e, type 8, 79[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x50 (0x4e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x50, type 9, 81[5]
GC: ++#217.1.2.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.3.mem.ro, ip 0x56 (0x50), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #221.1.1.mem.ref.ro <#217.1.3.mem.ro, ofs 0x51, size 5, "draw1">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #220.1.1.mem.ref.ro <#217.1.3.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x56, type 6, 88[22]
GC: ++#217.1.3.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.4.mem.ro, ip 0x6e (0x56), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.1.mem.code.ro <#217.1.4.mem.ro, ofs 0x58, size 22>
  [1] #221.1.1.mem.ref.ro <#217.1.4.mem.ro, ofs 0x51, size 5, "draw1">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #220.1.1.mem.ref.ro <#217.1.4.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x6e, type 9, 111[1]
GC: ++#217.1.4.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.5.mem.ro, ip 0x70 (0x6e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #223.1.1.mem.ref.ro <#217.1.5.mem.ro, ofs 0x6f, size 1, "f">
  [1] #222.1.1.mem.code.ro <#217.1.5.mem.ro, ofs 0x58, size 22>
  [2] #221.1.1.mem.ref.ro <#217.1.5.mem.ro, ofs 0x51, size 5, "draw1">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #220.1.1.mem.ref.ro <#217.1.5.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x70, type 6, 114[12]
GC: ++#217.1.5.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x7e (0x70), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #224.1.1.mem.code.ro <#217.1.6.mem.ro, ofs 0x72, size 12>
  [1] #223.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x6f, size 1, "f">
  [2] #222.1.1.mem.code.ro <#217.1.6.mem.ro, ofs 0x58, size 22>
  [3] #221.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x51, size 5, "draw1">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #220.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x7e, type 8, 127[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x80 (0x7e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.1.hash <size 2, max 2>
  [1] #220.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x80, type 0, 0 (0x0)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x81 (0x80), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #225.1.1.hash <size 2, max 2>
  [2] #220.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x81, type 8, 130[5]
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x87 (0x81), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.1.hash.class.ro <size 3, max 18>
  [1] #220.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x47, size 7, "Widget1">
IP: #217:0x87, type 8, 136[3]
GC: ++#220.1.1.mem.ref.ro
GC: ++#225.1.1.hash.class.ro
GC: --#225.1.2.hash.class.ro
GC: --#220.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x8b (0x87), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x8b, type 9, 140[7]
GC: ++#217.1.6.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x93 (0x8b), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #228.1.1.mem.ref.ro <#217.1.7.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0x93, type 8, 148[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x95 (0x93), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #228.1.1.mem.ref.ro <#217.1.7.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0x95, type 9, 150[1]
GC: ++#217.1.7.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x97 (0x95), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0x96, size 1, "y">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #228.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0x97, type 1, 0 (0x0)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x98 (0x97), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #230.1.1.num.int <0 (0x0)>
  [1] #229.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0x96, size 1, "y">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #228.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0x98, type 9, 153[4]
GC: ++#217.1.8.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x9d (0x98), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #231.1.1.mem.ref.ro <#217.1.9.mem.ro, ofs 0x99, size 4, "text">
  [1] #230.1.1.num.int <0 (0x0)>
  [2] #229.1.1.mem.ref.ro <#217.1.9.mem.ro, ofs 0x96, size 1, "y">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #228.1.1.mem.ref.ro <#217.1.9.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0x9d, type 7, 158[0]
GC: ++#217.1.9.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.10.mem.ro, ip 0x9e (0x9d), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #232.1.1.mem.str.ro <#217.1.10.mem.ro, ofs 0x9e, size 0, "">
  [1] #231.1.1.mem.ref.ro <#217.1.10.mem.ro, ofs 0x99, size 4, "text">
  [2] #230.1.1.num.int <0 (0x0)>
  [3] #229.1.1.mem.ref.ro <#217.1.10.mem.ro, ofs 0x96, size 1, "y">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #228.1.1.mem.ref.ro <#217.1.10.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0x9e, type 9, 159[5]
GC: ++#217.1.10.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.11.mem.ro, ip 0xa4 (0x9e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #233.1.1.mem.ref.ro <#217.1.11.mem.ro, ofs 0x9f, size 5, "draw2">
  [1] #232.1.1.mem.str.ro <#217.1.11.mem.ro, ofs 0x9e, size 0, "">
  [2] #231.1.1.mem.ref.ro <#217.1.11.mem.ro, ofs 0x99, size 4, "text">
  [3] #230.1.1.num.int <0 (0x0)>
  [4] #229.1.1.mem.ref.ro <#217.1.11.mem.ro, ofs 0x96, size 1, "y">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #228.1.1.mem.ref.ro <#217.1.11.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0xa4, type 6, 166[58]
GC: ++#217.1.11.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.12.mem.ro, ip 0xe0 (0xa4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #234.1.1.mem.code.ro <#217.1.12.mem.ro, ofs 0xa6, size 58>
  [1] #233.1.1.mem.ref.ro <#217.1.12.mem.ro, ofs 0x9f, size 5, "draw2">
  [2] #232.1.1.mem.str.ro <#217.1.12.mem.ro, ofs 0x9e, size 0, "">
  [3] #231.1.1.mem.ref.ro <#217.1.12.mem.ro, ofs 0x99, size 4, "text">
  [4] #230.1.1.num.int <0 (0x0)>
  [5] #229.1.1.mem.ref.ro <#217.1.12.mem.ro, ofs 0x96, size 1, "y">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #228.1.1.mem.ref.ro <#217.1.12.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0xe0, type 9, 225[4]
GC: ++#217.1.12.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.13.mem.ro, ip 0xe5 (0xe0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #235.1.1.mem.ref.ro <#217.1.13.mem.ro, ofs 0xe1, size 4, "init">
  [1] #234.1.1.mem.code.ro <#217.1.13.mem.ro, ofs 0xa6, size 58>
  [2] #233.1.1.mem.ref.ro <#217.1.13.mem.ro, ofs 0x9f, size 5, "draw2">
  [3] #232.1.1.mem.str.ro <#217.1.13.mem.ro, ofs 0x9e, size 0, "">
  [4] #231.1.1.mem.ref.ro <#217.1.13.mem.ro, ofs 0x99, size 4, "text">
  [5] #230.1.1.num.int <0 (0x0)>
  [6] #229.1.1.mem.ref.ro <#217.1.13.mem.ro, ofs 0x96, size 1, "y">
  [7] #17.1.2.num.prim <4 (0x4)>
  [8] #228.1.1.mem.ref.ro <#217.1.13.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0xe5, type 6, 231[13]
GC: ++#217.1.13.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.14.mem.ro, ip 0xf4 (0xe5), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #236.1.1.mem.code.ro <#217.1.14.mem.ro, ofs 0xe7, size 13>
  [1] #235.1.1.mem.ref.ro <#217.1.14.mem.ro, ofs 0xe1, size 4, "init">
  [2] #234.1.1.mem.code.ro <#217.1.14.mem.ro, ofs 0xa6, size 58>
  [3] #233.1.1.mem.ref.ro <#217.1.14.mem.ro, ofs 0x9f, size 5, "draw2">
  [4] #232.1.1.mem.str.ro <#217.1.14.mem.ro, ofs 0x9e, size 0, "">
  [5] #231.1.1.mem.ref.ro <#217.1.14.mem.ro, ofs 0x99, size 4, "text">
  [6] #230.1.1.num.int <0 (0x0)>
  [7] #229.1.1.mem.ref.ro <#217.1.14.mem.ro, ofs 0x96, size 1, "y">
  [8] #17.1.2.num.prim <4 (0x4)>
  [9] #228.1.1.mem.ref.ro <#217.1.14.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0xf4, type 8, 245[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.14.mem.ro, ip 0xf6 (0xf4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #237.1.1.hash <size 4, max 4>
  [1] #228.1.1.mem.ref.ro <#217.1.14.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0xf6, type 8, 247[7]
GC: ++#225.1.1.hash.class.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.14.mem.ro, ip 0xfe (0xf6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.hash.class.ro <size 3, max 18>
  [1] #237.1.1.hash <size 4, max 4>
  [2] #228.1.1.mem.ref.ro <#217.1.14.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0xfe, type 8, 255[5]
GC: ++#225.1.2.hash.class.ro
GC: --#225.1.3.hash.class.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.14.mem.ro, ip 0x104 (0xfe), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #237.1.1.hash.class.ro <size 5, max 20, parent #225.1.2.hash.class.ro>
  [1] #228.1.1.mem.ref.ro <#217.1.14.mem.ro, ofs 0x8c, size 7, "Widget2">
IP: #217:0x104, type 8, 261[3]
GC: ++#228.1.1.mem.ref.ro
GC: ++#237.1.1.hash.class.ro
GC: --#237.1.2.hash.class.ro
GC: --#228.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.14.mem.ro, ip 0x108 (0x104), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x108, type 9, 265[3]
GC: ++#217.1.14.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.15.mem.ro, ip 0x10c (0x108), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #240.1.1.mem.ref.ro <#217.1.15.mem.ro, ofs 0x109, size 3, "win">
IP: #217:0x10c, type 8, 269[7]
GC: ++#237.1.1.hash.class.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.15.mem.ro, ip 0x114 (0x10c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #237.1.2.hash.class.ro <size 5, max 20, parent #225.1.2.hash.class.ro>
  [1] #240.1.1.mem.ref.ro <#217.1.15.mem.ro, ofs 0x109, size 3, "win">
IP: #217:0x114, type 8, 277[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.15.mem.ro, ip 0x116 (0x114), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #237.1.2.hash.class.ro <size 5, max 20, parent #225.1.2.hash.class.ro>
  [2] #240.1.1.mem.ref.ro <#217.1.15.mem.ro, ofs 0x109, size 3, "win">
IP: #217:0x116, type 9, 279[1]
GC: ++#217.1.15.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.16.mem.ro, ip 0x118 (0x116), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.1.1.mem.ref.ro <#217.1.16.mem.ro, ofs 0x117, size 1, "y">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #237.1.2.hash.class.ro <size 5, max 20, parent #225.1.2.hash.class.ro>
  [3] #240.1.1.mem.ref.ro <#217.1.16.mem.ro, ofs 0x109, size 3, "win">
IP: #217:0x118, type 1, 20 (0x14)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.16.mem.ro, ip 0x11a (0x118), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.1.num.int <20 (0x14)>
  [1] #241.1.1.mem.ref.ro <#217.1.16.mem.ro, ofs 0x117, size 1, "y">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #237.1.2.hash.class.ro <size 5, max 20, parent #225.1.2.hash.class.ro>
  [4] #240.1.1.mem.ref.ro <#217.1.16.mem.ro, ofs 0x109, size 3, "win">
IP: #217:0x11a, type 8, 283[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.16.mem.ro, ip 0x11c (0x11a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #243.1.1.hash <size 1, max 1>
  [1] #237.1.2.hash.class.ro <size 5, max 20, parent #225.1.2.hash.class.ro>
  [2] #240.1.1.mem.ref.ro <#217.1.16.mem.ro, ofs 0x109, size 3, "win">
IP: #217:0x11c, type 8, 285[3]
GC: ++#241.1.1.mem.ref.ro
GC: ++#242.1.1.num.int
GC: ++#237.1.2.hash.class.ro
GC: --#243.1.1.hash
GC: --#241.1.2.mem.ref.ro
GC: --#242.1.2.num.int
GC: --#237.1.3.hash.class.ro
GC: ++#236.1.1.mem.code.ro
GC: ++#244.1.1.hash.class.sticky
== backtrace ==
  [0] #246.1.1.ctx.func <code #236.1.2.mem.code.ro, ip 0x0 (0x0), dict #247.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.16.mem.ro, ip 0x120 (0x11c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.hash.class.sticky <size 1, max 1, parent #237.1.2.hash.class.ro>
  [1] #240.1.1.mem.ref.ro <#217.1.16.mem.ro, ofs 0x109, size 3, "win">
IP: #236:0x0, type 9, 1[4]
GC: ++#217.1.16.mem.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #236.1.2.mem.code.ro, ip 0x5 (0x0), dict #247.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x120 (0x11c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #248.1.1.mem.ref.ro <#217.1.17.mem.ro, ofs 0xe8, size 4, "text">
  [1] #244.1.2.hash.class.sticky <size 1, max 1, parent #237.1.2.hash.class.ro>
  [2] #240.1.1.mem.ref.ro <#217.1.17.mem.ro, ofs 0x109, size 3, "win">
IP: #236:0x5, type 7, 6[2]
GC: ++#217.1.17.mem.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #236.1.2.mem.code.ro, ip 0x8 (0x5), dict #247.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x120 (0x11c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.1.mem.str.ro <#217.1.18.mem.ro, ofs 0xed, size 2, "ZZ">
  [1] #248.1.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xe8, size 4, "text">
  [2] #244.1.2.hash.class.sticky <size 1, max 1, parent #237.1.2.hash.class.ro>
  [3] #240.1.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0x109, size 3, "win">
IP: #236:0x8, type 8, 9[3]
GC: ++#248.1.1.mem.ref.ro
GC: ++#249.1.1.mem.str.ro
GC: --#249.1.2.mem.str.ro
GC: --#248.1.2.mem.ref.ro
== backtrace ==
  [0] #246.1.1.ctx.func <code #236.1.2.mem.code.ro, ip 0xc (0x8), dict #247.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x120 (0x11c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.hash.class.sticky <size 2, max 17, parent #237.1.2.hash.class.ro>
  [1] #240.1.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0x109, size 3, "win">
IP: #236:0xc, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#246.1.1.ctx.func
GC: --#219.1.2.ctx.func
GC: --#236.1.2.mem.code.ro
GC: --#247.1.1.hash
GC: --#244.1.2.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x120 (0x11c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.1.hash.class.sticky <size 2, max 17, parent #237.1.2.hash.class.ro>
  [1] #240.1.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0x109, size 3, "win">
IP: #217:0x120, type 8, 289[3]
GC: ++#240.1.1.mem.ref.ro
GC: ++#244.1.1.hash.class.sticky
GC: --#244.1.2.hash.class.sticky
GC: --#240.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x124 (0x120), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x124, type 8, 293[3]
GC: ++#244.1.1.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x128 (0x124), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.hash.class.sticky <size 2, max 17, parent #237.1.2.hash.class.ro>
IP: #217:0x128, type 10, 297[5]
GC: ++#234.1.1.mem.code.ro
GC: ++#244.1.2.hash.class.sticky
GC: --#244.1.3.hash.class.sticky
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x0 (0x0), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x2 (0x0), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #252.1.1.num.int <10 (0xa)>
IP: #234:0x2, type 8, 3[1]
GC: ++#242.1.1.num.int
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x4 (0x2), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.num.int <20 (0x14)>
  [1] #252.1.1.num.int <10 (0xa)>
IP: #234:0x4, type 8, 5[6]
GC: --#242.1.2.num.int
GC: --#252.1.1.num.int
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0xb (0x4), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0xb, type 8, 12[4]
GC: ++#249.1.1.mem.str.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x10 (0xb), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.2.mem.str.ro <#217.1.18.mem.ro, ofs 0xed, size 2, "ZZ">
IP: #234:0x10, type 8, 17[4]
GC: --#249.1.2.mem.str.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x15 (0x10), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x15, type 9, 22[1]
GC: ++#217.1.18.mem.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x17 (0x15), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #253.1.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x17, type 8, 24[1]
GC: ++#242.1.1.num.int
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x19 (0x17), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.num.int <20 (0x14)>
  [1] #253.1.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x1b (0x19), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #254.1.1.num.int <20 (0x14)>
  [1] #242.1.2.num.int <20 (0x14)>
  [2] #253.1.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x1b, type 8, 28[3]
GC: --#254.1.1.num.int
GC: --#242.1.2.num.int
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x1f (0x1b), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #255.1.1.num.int <40 (0x28)>
  [1] #253.1.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x1f, type 8, 32[3]
GC: ++#253.1.1.mem.ref.ro
GC: ++#255.1.1.num.int
GC: --#241.1.1.mem.ref.ro
GC: --#217.1.19.mem.ro
GC: --#242.1.1.num.int
GC: --#255.1.2.num.int
GC: --#253.1.2.mem.ref.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x23 (0x1f), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x23, type 9, 36[4]
GC: ++#217.1.18.mem.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x28 (0x23), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #256.1.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x28, type 8, 41[4]
GC: ++#249.1.1.mem.str.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x2d (0x28), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.2.mem.str.ro <#217.1.19.mem.ro, ofs 0xed, size 2, "ZZ">
  [1] #256.1.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x2d, type 7, 46[3]
GC: ++#217.1.19.mem.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x31 (0x2d), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.20.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #257.1.1.mem.str.ro <#217.1.20.mem.ro, ofs 0xd4, size 3, " XX">
  [1] #249.1.2.mem.str.ro <#217.1.20.mem.ro, ofs 0xed, size 2, "ZZ">
  [2] #256.1.1.mem.ref.ro <#217.1.20.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x31, type 8, 50[3]
GC: --#257.1.1.mem.str.ro
GC: --#217.1.20.mem.ro
GC: --#249.1.2.mem.str.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x35 (0x31), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.2.1.mem.str <size 5, "ZZ XX">
  [1] #256.1.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x35, type 8, 54[3]
GC: ++#256.1.1.mem.ref.ro
GC: ++#241.2.1.mem.str
GC: --#248.1.1.mem.ref.ro
GC: --#217.1.19.mem.ro
GC: --#249.1.1.mem.str.ro
GC: --#217.1.18.mem.ro
GC: --#241.2.2.mem.str
GC: --#256.1.2.mem.ref.ro
== backtrace ==
  [0] #250.1.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x39 (0x35), dict #251.1.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x39, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#250.1.1.ctx.func
GC: --#219.1.2.ctx.func
GC: --#234.1.2.mem.code.ro
GC: --#251.1.1.hash
GC: --#244.1.2.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x12e (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x12e, type 8, 303[3]
GC: ++#244.1.1.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x132 (0x12e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.hash.class.sticky <size 2, max 17, parent #237.1.2.hash.class.ro>
IP: #217:0x132, type 10, 307[5]
GC: ++#234.1.1.mem.code.ro
GC: ++#244.1.2.hash.class.sticky
GC: --#244.1.3.hash.class.sticky
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x0 (0x0), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x2 (0x0), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.2.1.num.int <10 (0xa)>
IP: #234:0x2, type 8, 3[1]
GC: ++#255.1.1.num.int
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x4 (0x2), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #255.1.2.num.int <40 (0x28)>
  [1] #246.2.1.num.int <10 (0xa)>
IP: #234:0x4, type 8, 5[6]
GC: --#255.1.2.num.int
GC: --#246.2.1.num.int
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0xb (0x4), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0xb, type 8, 12[4]
GC: ++#241.2.1.mem.str
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x10 (0xb), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.2.2.mem.str <size 5, "ZZ XX">
IP: #234:0x10, type 8, 17[4]
GC: --#241.2.2.mem.str
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x15 (0x10), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x15, type 9, 22[1]
GC: ++#217.1.17.mem.ro
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x17 (0x15), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #247.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x17, type 8, 24[1]
GC: ++#255.1.1.num.int
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x19 (0x17), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #255.1.2.num.int <40 (0x28)>
  [1] #247.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x1b (0x19), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #248.2.1.num.int <20 (0x14)>
  [1] #255.1.2.num.int <40 (0x28)>
  [2] #247.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x1b, type 8, 28[3]
GC: --#248.2.1.num.int
GC: --#255.1.2.num.int
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x1f (0x1b), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.2.1.num.int <60 (0x3c)>
  [1] #247.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x1f, type 8, 32[3]
GC: ++#247.2.1.mem.ref.ro
GC: ++#249.2.1.num.int
GC: --#253.1.1.mem.ref.ro
GC: --#217.1.18.mem.ro
GC: --#255.1.1.num.int
GC: --#249.2.2.num.int
GC: --#247.2.2.mem.ref.ro
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x23 (0x1f), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x23, type 9, 36[4]
GC: ++#217.1.17.mem.ro
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x28 (0x23), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x28, type 8, 41[4]
GC: ++#241.2.1.mem.str
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x2d (0x28), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.2.2.mem.str <size 5, "ZZ XX">
  [1] #250.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x2d, type 7, 46[3]
GC: ++#217.1.18.mem.ro
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x31 (0x2d), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #251.2.1.mem.str.ro <#217.1.19.mem.ro, ofs 0xd4, size 3, " XX">
  [1] #241.2.2.mem.str <size 5, "ZZ XX">
  [2] #250.2.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x31, type 8, 50[3]
GC: --#251.2.1.mem.str.ro
GC: --#217.1.19.mem.ro
GC: --#241.2.2.mem.str
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x35 (0x31), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #252.2.1.mem.str <size 8, "ZZ XX XX">
  [1] #250.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x35, type 8, 54[3]
GC: ++#250.2.1.mem.ref.ro
GC: ++#252.2.1.mem.str
GC: --#256.1.1.mem.ref.ro
GC: --#217.1.18.mem.ro
GC: --#241.2.1.mem.str
GC: --#252.2.2.mem.str
GC: --#250.2.2.mem.ref.ro
== backtrace ==
  [0] #242.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x39 (0x35), dict #243.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x39, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#242.2.1.ctx.func
GC: --#219.1.2.ctx.func
GC: --#234.1.2.mem.code.ro
GC: --#243.2.1.hash
GC: --#244.1.2.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x138 (0x132), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x138, type 8, 313[3]
GC: ++#244.1.1.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x13c (0x138), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.hash.class.sticky <size 2, max 17, parent #237.1.2.hash.class.ro>
IP: #217:0x13c, type 10, 317[5]
GC: ++#234.1.1.mem.code.ro
GC: ++#244.1.2.hash.class.sticky
GC: --#244.1.3.hash.class.sticky
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x0 (0x0), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x2 (0x0), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #255.2.1.num.int <10 (0xa)>
IP: #234:0x2, type 8, 3[1]
GC: ++#249.2.1.num.int
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x4 (0x2), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.2.2.num.int <60 (0x3c)>
  [1] #255.2.1.num.int <10 (0xa)>
IP: #234:0x4, type 8, 5[6]
GC: --#249.2.2.num.int
GC: --#255.2.1.num.int
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0xb (0x4), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0xb, type 8, 12[4]
GC: ++#252.2.1.mem.str
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x10 (0xb), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #252.2.2.mem.str <size 8, "ZZ XX XX">
IP: #234:0x10, type 8, 17[4]
GC: --#252.2.2.mem.str
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x15 (0x10), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x15, type 9, 22[1]
GC: ++#217.1.17.mem.ro
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x17 (0x15), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #256.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x17, type 8, 24[1]
GC: ++#249.2.1.num.int
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x19 (0x17), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.2.2.num.int <60 (0x3c)>
  [1] #256.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x1b (0x19), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #257.2.1.num.int <20 (0x14)>
  [1] #249.2.2.num.int <60 (0x3c)>
  [2] #256.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x1b, type 8, 28[3]
GC: --#257.2.1.num.int
GC: --#249.2.2.num.int
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x1f (0x1b), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.3.1.num.int <80 (0x50)>
  [1] #256.2.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xbc, size 1, "y">
IP: #234:0x1f, type 8, 32[3]
GC: ++#256.2.1.mem.ref.ro
GC: ++#241.3.1.num.int
GC: --#247.2.1.mem.ref.ro
GC: --#217.1.18.mem.ro
GC: --#249.2.1.num.int
GC: --#241.3.2.num.int
GC: --#256.2.2.mem.ref.ro
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x23 (0x1f), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x23, type 9, 36[4]
GC: ++#217.1.17.mem.ro
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x28 (0x23), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.3.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x28, type 8, 41[4]
GC: ++#252.2.1.mem.str
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x2d (0x28), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #252.2.2.mem.str <size 8, "ZZ XX XX">
  [1] #242.3.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x2d, type 7, 46[3]
GC: ++#217.1.18.mem.ro
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x31 (0x2d), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.19.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #243.3.1.mem.str.ro <#217.1.19.mem.ro, ofs 0xd4, size 3, " XX">
  [1] #252.2.2.mem.str <size 8, "ZZ XX XX">
  [2] #242.3.1.mem.ref.ro <#217.1.19.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x31, type 8, 50[3]
GC: --#243.3.1.mem.str.ro
GC: --#217.1.19.mem.ro
GC: --#252.2.2.mem.str
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x35 (0x31), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.18.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.3.1.mem.str <size 11, "ZZ XX XX XX">
  [1] #242.3.1.mem.ref.ro <#217.1.18.mem.ro, ofs 0xca, size 4, "text">
IP: #234:0x35, type 8, 54[3]
GC: ++#242.3.1.mem.ref.ro
GC: ++#246.3.1.mem.str
GC: --#250.2.1.mem.ref.ro
GC: --#217.1.18.mem.ro
GC: --#252.2.1.mem.str
GC: --#246.3.2.mem.str
GC: --#242.3.2.mem.ref.ro
== backtrace ==
  [0] #253.2.1.ctx.func <code #234.1.2.mem.code.ro, ip 0x39 (0x35), dict #254.2.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #234:0x39, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#253.2.1.ctx.func
GC: --#219.1.2.ctx.func
GC: --#234.1.2.mem.code.ro
GC: --#254.2.1.hash
GC: --#244.1.2.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x142 (0x13c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x142, type 8, 323[3]
GC: ++#244.1.1.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x146 (0x142), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.hash.class.sticky <size 2, max 17, parent #237.1.2.hash.class.ro>
IP: #217:0x146, type 10, 327[5]
GC: ++#222.1.1.mem.code.ro
GC: ++#244.1.2.hash.class.sticky
GC: --#244.1.3.hash.class.sticky
== backtrace ==
  [0] #247.3.1.ctx.func <code #222.1.2.mem.code.ro, ip 0x0 (0x0), dict #248.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x14c (0x146), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #222:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #247.3.1.ctx.func <code #222.1.2.mem.code.ro, ip 0x2 (0x0), dict #248.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x14c (0x146), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.3.1.num.int <10 (0xa)>
IP: #222:0x2, type 8, 3[1]
GC: ++#241.3.1.num.int
== backtrace ==
  [0] #247.3.1.ctx.func <code #222.1.2.mem.code.ro, ip 0x4 (0x2), dict #248.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x14c (0x146), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.3.2.num.int <80 (0x50)>
  [1] #249.3.1.num.int <10 (0xa)>
IP: #222:0x4, type 8, 5[6]
GC: --#241.3.2.num.int
GC: --#249.3.1.num.int
== backtrace ==
  [0] #247.3.1.ctx.func <code #222.1.2.mem.code.ro, ip 0xb (0x4), dict #248.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x14c (0x146), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #222:0xb, type 8, 12[4]
GC: ++#246.3.1.mem.str
== backtrace ==
  [0] #247.3.1.ctx.func <code #222.1.2.mem.code.ro, ip 0x10 (0xb), dict #248.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x14c (0x146), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.3.2.mem.str <size 11, "ZZ XX XX XX">
IP: #222:0x10, type 8, 17[4]
GC: --#246.3.2.mem.str
== backtrace ==
  [0] #247.3.1.ctx.func <code #222.1.2.mem.code.ro, ip 0x15 (0x10), dict #248.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x14c (0x146), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #222:0x15, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#247.3.1.ctx.func
GC: --#219.1.2.ctx.func
GC: --#222.1.2.mem.code.ro
GC: --#248.3.1.hash
GC: --#244.1.2.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x14c (0x146), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x14c, type 8, 333[3]
GC: ++#244.1.1.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x150 (0x14c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.hash.class.sticky <size 2, max 17, parent #237.1.2.hash.class.ro>
IP: #217:0x150, type 10, 337[1]
GC: ++#224.1.1.mem.code.ro
GC: ++#244.1.2.hash.class.sticky
GC: --#244.1.3.hash.class.sticky
== backtrace ==
  [0] #250.3.1.ctx.func <code #224.1.2.mem.code.ro, ip 0x0 (0x0), dict #251.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x152 (0x150), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #224:0x0, type 8, 1[4]
GC: ++#244.1.2.hash.class.sticky
== backtrace ==
  [0] #250.3.1.ctx.func <code #224.1.2.mem.code.ro, ip 0x5 (0x0), dict #251.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x152 (0x150), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.3.hash.class.sticky <size 2, max 17, parent #237.1.2.hash.class.ro>
IP: #224:0x5, type 10, 6[5]
GC: ++#238.1.1.mem.str.ro
GC: --#244.1.3.hash.class.sticky
== backtrace ==
  [0] #250.3.1.ctx.func <code #224.1.2.mem.code.ro, ip 0xb (0x5), dict #251.3.1.hash>
  [1] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x152 (0x150), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #238.1.2.mem.str.ro <size 7, "Widget2">
IP: #224:0xb, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#250.3.1.ctx.func
GC: --#219.1.2.ctx.func
GC: --#224.1.2.mem.code.ro
GC: --#251.3.1.hash
GC: --#244.1.2.hash.class.sticky
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.17.mem.ro, ip 0x152 (0x150), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #238.1.2.mem.str.ro <size 7, "Widget2">
