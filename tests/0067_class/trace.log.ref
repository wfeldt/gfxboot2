# ---  trace  ---
IP: #197:0x0, type 5, 1[7]
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x8, type 9, 9[5]
GC: ++#197.1.1.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.2.mem.ro, ip 0xe (0x8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #200.1.1.mem.ref.ro <#197.1.2.mem.ro, ofs 0x9, size 5, "class">
IP: #197:0xe, type 6, 16[43]
GC: ++#197.1.2.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x3b (0xe), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #201.1.1.mem.code.ro <#197.1.3.mem.ro, ofs 0x10, size 43>
  [1] #200.1.1.mem.ref.ro <#197.1.3.mem.ro, ofs 0x9, size 5, "class">
IP: #197:0x3b, type 8, 60[3]
GC: ++#200.1.1.mem.ref.ro
GC: ++#201.1.1.mem.code.ro
GC: --#201.1.2.mem.code.ro
GC: --#200.1.2.mem.ref.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x3f (0x3b), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x3f, type 8, 64[9]
GC: ++#5.1.2.canv
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x49 (0x3f), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #197:0x49, type 8, 74[10]
GC: ++#6.1.1.canv
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x54 (0x49), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #6.1.2.canv <geo 80x100_640x400, region 0x0_640x400, chk 0x8ccedc00>
  [1] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #197:0x54, type 8, 85[7]
GC: --#6.1.2.canv
GC: ++#2.1.1.font
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x5c (0x54), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #2.1.2.font <glyphs 256, size 8x16, line height 16>
  [1] #5.1.3.canv <geo 0x0_800x600, region 0x0_800x600, chk 0x5ae3d880>
IP: #197:0x5c, type 8, 93[7]
GC: ++#2.1.2.font
GC: --#2.1.3.font
GC: --#5.1.3.canv
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.3.mem.ro, ip 0x64 (0x5c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x64, type 9, 101[6]
GC: ++#197.1.3.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.4.mem.ro, ip 0x6b (0x64), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #202.1.1.mem.ref.ro <#197.1.4.mem.ro, ofs 0x65, size 6, "widget">
IP: #197:0x6b, type 8, 108[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.4.mem.ro, ip 0x6d (0x6b), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #202.1.1.mem.ref.ro <#197.1.4.mem.ro, ofs 0x65, size 6, "widget">
IP: #197:0x6d, type 9, 110[5]
GC: ++#197.1.4.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.5.mem.ro, ip 0x73 (0x6d), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #203.1.1.mem.ref.ro <#197.1.5.mem.ro, ofs 0x6e, size 5, "draw1">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #202.1.1.mem.ref.ro <#197.1.5.mem.ro, ofs 0x65, size 6, "widget">
IP: #197:0x73, type 6, 117[22]
GC: ++#197.1.5.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x8b (0x73), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #204.1.1.mem.code.ro <#197.1.6.mem.ro, ofs 0x75, size 22>
  [1] #203.1.1.mem.ref.ro <#197.1.6.mem.ro, ofs 0x6e, size 5, "draw1">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #202.1.1.mem.ref.ro <#197.1.6.mem.ro, ofs 0x65, size 6, "widget">
IP: #197:0x8b, type 8, 140[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x8d (0x8b), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #205.1.1.hash <size 1, max 1>
  [1] #202.1.1.mem.ref.ro <#197.1.6.mem.ro, ofs 0x65, size 6, "widget">
IP: #197:0x8d, type 8, 142[3]
GC: ++#202.1.1.mem.ref.ro
GC: ++#205.1.1.hash
GC: --#205.1.2.hash
GC: --#202.1.2.mem.ref.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.6.mem.ro, ip 0x91 (0x8d), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x91, type 9, 146[3]
GC: ++#197.1.6.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.7.mem.ro, ip 0x95 (0x91), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #206.1.1.mem.ref.ro <#197.1.7.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0x95, type 8, 150[6]
GC: ++#205.1.1.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.7.mem.ro, ip 0x9c (0x95), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #205.1.2.hash <size 1, max 1>
  [1] #206.1.1.mem.ref.ro <#197.1.7.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0x9c, type 8, 157[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.7.mem.ro, ip 0x9e (0x9c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #205.1.2.hash <size 1, max 1>
  [2] #206.1.1.mem.ref.ro <#197.1.7.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0x9e, type 9, 159[1]
GC: ++#197.1.7.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.8.mem.ro, ip 0xa0 (0x9e), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #207.1.1.mem.ref.ro <#197.1.8.mem.ro, ofs 0x9f, size 1, "y">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #205.1.2.hash <size 1, max 1>
  [3] #206.1.1.mem.ref.ro <#197.1.8.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0xa0, type 1, 20 (0x14)
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.8.mem.ro, ip 0xa2 (0xa0), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.1.num.int <20 (0x14)>
  [1] #207.1.1.mem.ref.ro <#197.1.8.mem.ro, ofs 0x9f, size 1, "y">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #205.1.2.hash <size 1, max 1>
  [4] #206.1.1.mem.ref.ro <#197.1.8.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0xa2, type 9, 163[4]
GC: ++#197.1.8.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.9.mem.ro, ip 0xa7 (0xa2), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #209.1.1.mem.ref.ro <#197.1.9.mem.ro, ofs 0xa3, size 4, "text">
  [1] #208.1.1.num.int <20 (0x14)>
  [2] #207.1.1.mem.ref.ro <#197.1.9.mem.ro, ofs 0x9f, size 1, "y">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #205.1.2.hash <size 1, max 1>
  [5] #206.1.1.mem.ref.ro <#197.1.9.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0xa7, type 7, 168[2]
GC: ++#197.1.9.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.10.mem.ro, ip 0xaa (0xa7), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #210.1.1.mem.str.ro <#197.1.10.mem.ro, ofs 0xa8, size 2, "XX">
  [1] #209.1.1.mem.ref.ro <#197.1.10.mem.ro, ofs 0xa3, size 4, "text">
  [2] #208.1.1.num.int <20 (0x14)>
  [3] #207.1.1.mem.ref.ro <#197.1.10.mem.ro, ofs 0x9f, size 1, "y">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #205.1.2.hash <size 1, max 1>
  [6] #206.1.1.mem.ref.ro <#197.1.10.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0xaa, type 9, 171[5]
GC: ++#197.1.10.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0xb0 (0xaa), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #211.1.1.mem.ref.ro <#197.1.11.mem.ro, ofs 0xab, size 5, "draw2">
  [1] #210.1.1.mem.str.ro <#197.1.11.mem.ro, ofs 0xa8, size 2, "XX">
  [2] #209.1.1.mem.ref.ro <#197.1.11.mem.ro, ofs 0xa3, size 4, "text">
  [3] #208.1.1.num.int <20 (0x14)>
  [4] #207.1.1.mem.ref.ro <#197.1.11.mem.ro, ofs 0x9f, size 1, "y">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #205.1.2.hash <size 1, max 1>
  [7] #206.1.1.mem.ref.ro <#197.1.11.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0xb0, type 6, 178[58]
GC: ++#197.1.11.mem.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xec (0xb0), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #212.1.1.mem.code.ro <#197.1.12.mem.ro, ofs 0xb2, size 58>
  [1] #211.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xab, size 5, "draw2">
  [2] #210.1.1.mem.str.ro <#197.1.12.mem.ro, ofs 0xa8, size 2, "XX">
  [3] #209.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xa3, size 4, "text">
  [4] #208.1.1.num.int <20 (0x14)>
  [5] #207.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0x9f, size 1, "y">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #205.1.2.hash <size 1, max 1>
  [8] #206.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0xec, type 8, 237[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xee (0xec), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.1.hash <size 3, max 3>
  [1] #205.1.2.hash <size 1, max 1>
  [2] #206.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
IP: #197:0xee, type 8, 239[5]
GC: ++#201.1.1.mem.code.ro
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0x0 (0x0)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.1.hash <size 3, max 3>
  [1] #205.1.2.hash <size 1, max 1>
  [2] #206.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
IP: #201:0x0, type 1, 2 (0x2)
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0x1 (0x0)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #215.1.1.num.int <2 (0x2)>
  [1] #213.1.1.hash <size 3, max 3>
  [2] #205.1.2.hash <size 1, max 1>
  [3] #206.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
IP: #201:0x1, type 8, 2[5]
GC: --#215.1.1.num.int
GC: ++#206.1.1.mem.ref.ro
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0x7 (0x1)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #206.1.2.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
  [1] #213.1.1.hash <size 3, max 3>
  [2] #205.1.2.hash <size 1, max 1>
  [3] #206.1.2.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
IP: #201:0x7, type 8, 8[4]
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0xc (0x7)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.1.hash <size 3, max 3>
  [1] #206.1.2.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
  [2] #205.1.2.hash <size 1, max 1>
  [3] #206.1.2.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
IP: #201:0xc, type 8, 13[4]
GC: ++#206.1.2.mem.ref.ro
GC: ++#213.1.1.hash
GC: --#213.1.2.hash
GC: --#206.1.3.mem.ref.ro
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0x11 (0xc)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #205.1.2.hash <size 1, max 1>
  [1] #206.1.2.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
IP: #201:0x11, type 8, 18[4]
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0x16 (0x11)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #206.1.2.mem.ref.ro <#197.1.12.mem.ro, ofs 0x92, size 3, "win">
  [1] #205.1.2.hash <size 1, max 1>
IP: #201:0x16, type 8, 23[4]
GC: ++#213.1.1.hash
GC: --#206.1.2.mem.ref.ro
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0x1b (0x16)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.2.hash <size 3, max 3>
  [1] #205.1.2.hash <size 1, max 1>
IP: #201:0x1b, type 8, 28[4]
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0x20 (0x1b)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #205.1.2.hash <size 1, max 1>
  [1] #213.1.2.hash <size 3, max 3>
IP: #201:0x20, type 8, 33[9]
GC: ++#205.1.2.hash
GC: --#205.1.3.hash
GC: --#213.1.2.hash
== backtrace ==
  [0] #214.1.1.ctx.func <code #201.1.2.mem.code.ro, ip 0x2a (0x20)>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #201:0x2a, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#214.1.1.ctx.func
GC: --#199.1.2.ctx.func
GC: --#201.1.2.mem.code.ro
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf4 (0xee), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0xf4, type 8, 245[3]
GC: ++#213.1.1.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xf8 (0xf4), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.2.hash <size 3, max 3, parent #205.1.2.hash>
IP: #197:0xf8, type 10, 249[5]
GC: ++#212.1.1.mem.code.ro
GC: ++#213.1.2.hash
GC: --#213.1.3.hash
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x0 (0x0), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x2 (0x0), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #219.1.1.num.int <10 (0xa)>
IP: #212:0x2, type 8, 3[1]
GC: ++#208.1.1.num.int
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x4 (0x2), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.2.num.int <20 (0x14)>
  [1] #219.1.1.num.int <10 (0xa)>
IP: #212:0x4, type 8, 5[6]
GC: --#208.1.2.num.int
GC: --#219.1.1.num.int
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0xb (0x4), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0xb, type 8, 12[4]
GC: ++#210.1.1.mem.str.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x10 (0xb), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #210.1.2.mem.str.ro <#197.1.12.mem.ro, ofs 0xa8, size 2, "XX">
IP: #212:0x10, type 8, 17[4]
GC: --#210.1.2.mem.str.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x15 (0x10), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x15, type 9, 22[1]
GC: ++#197.1.12.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x17 (0x15), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #220.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x17, type 8, 24[1]
GC: ++#208.1.1.num.int
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x19 (0x17), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #208.1.2.num.int <20 (0x14)>
  [1] #220.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x1b (0x19), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #221.1.1.num.int <20 (0x14)>
  [1] #208.1.2.num.int <20 (0x14)>
  [2] #220.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x1b, type 8, 28[3]
GC: --#221.1.1.num.int
GC: --#208.1.2.num.int
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x1f (0x1b), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #222.1.1.num.int <40 (0x28)>
  [1] #220.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x1f, type 8, 32[3]
GC: ++#220.1.1.mem.ref.ro
GC: ++#222.1.1.num.int
GC: --#207.1.1.mem.ref.ro
GC: --#197.1.13.mem.ro
GC: --#208.1.1.num.int
GC: --#222.1.2.num.int
GC: --#220.1.2.mem.ref.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x23 (0x1f), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x23, type 9, 36[4]
GC: ++#197.1.12.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x28 (0x23), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #223.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x28, type 8, 41[4]
GC: ++#210.1.1.mem.str.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x2d (0x28), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #210.1.2.mem.str.ro <#197.1.13.mem.ro, ofs 0xa8, size 2, "XX">
  [1] #223.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x2d, type 7, 46[3]
GC: ++#197.1.13.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x31 (0x2d), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.14.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #224.1.1.mem.str.ro <#197.1.14.mem.ro, ofs 0xe0, size 3, " XX">
  [1] #210.1.2.mem.str.ro <#197.1.14.mem.ro, ofs 0xa8, size 2, "XX">
  [2] #223.1.1.mem.ref.ro <#197.1.14.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x31, type 8, 50[3]
GC: --#224.1.1.mem.str.ro
GC: --#197.1.14.mem.ro
GC: --#210.1.2.mem.str.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x35 (0x31), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #225.1.1.mem.str <size 5, "XX XX">
  [1] #223.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x35, type 8, 54[3]
GC: ++#223.1.1.mem.ref.ro
GC: ++#225.1.1.mem.str
GC: --#209.1.1.mem.ref.ro
GC: --#197.1.13.mem.ro
GC: --#210.1.1.mem.str.ro
GC: --#197.1.12.mem.ro
GC: --#225.1.2.mem.str
GC: --#223.1.2.mem.ref.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x39 (0x35), dict #218.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x39, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#217.1.1.ctx.func
GC: --#199.1.2.ctx.func
GC: --#212.1.2.mem.code.ro
GC: --#218.1.1.hash
GC: --#213.1.2.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0xfe, type 8, 255[3]
GC: ++#213.1.1.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x102 (0xfe), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.2.hash <size 3, max 3, parent #205.1.2.hash>
IP: #197:0x102, type 10, 259[5]
GC: ++#212.1.1.mem.code.ro
GC: ++#213.1.2.hash
GC: --#213.1.3.hash
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x0 (0x0), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x2 (0x0), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #228.1.1.num.int <10 (0xa)>
IP: #212:0x2, type 8, 3[1]
GC: ++#222.1.1.num.int
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x4 (0x2), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #222.1.2.num.int <40 (0x28)>
  [1] #228.1.1.num.int <10 (0xa)>
IP: #212:0x4, type 8, 5[6]
GC: --#222.1.2.num.int
GC: --#228.1.1.num.int
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0xb (0x4), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0xb, type 8, 12[4]
GC: ++#225.1.1.mem.str
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x10 (0xb), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #225.1.2.mem.str <size 5, "XX XX">
IP: #212:0x10, type 8, 17[4]
GC: --#225.1.2.mem.str
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x15 (0x10), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x15, type 9, 22[1]
GC: ++#197.1.11.mem.ro
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x17 (0x15), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #229.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x17, type 8, 24[1]
GC: ++#222.1.1.num.int
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x19 (0x17), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #222.1.2.num.int <40 (0x28)>
  [1] #229.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x1b (0x19), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #230.1.1.num.int <20 (0x14)>
  [1] #222.1.2.num.int <40 (0x28)>
  [2] #229.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x1b, type 8, 28[3]
GC: --#230.1.1.num.int
GC: --#222.1.2.num.int
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x1f (0x1b), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #231.1.1.num.int <60 (0x3c)>
  [1] #229.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x1f, type 8, 32[3]
GC: ++#229.1.1.mem.ref.ro
GC: ++#231.1.1.num.int
GC: --#220.1.1.mem.ref.ro
GC: --#197.1.12.mem.ro
GC: --#222.1.1.num.int
GC: --#231.1.2.num.int
GC: --#229.1.2.mem.ref.ro
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x23 (0x1f), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x23, type 9, 36[4]
GC: ++#197.1.11.mem.ro
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x28 (0x23), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #232.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x28, type 8, 41[4]
GC: ++#225.1.1.mem.str
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x2d (0x28), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #225.1.2.mem.str <size 5, "XX XX">
  [1] #232.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x2d, type 7, 46[3]
GC: ++#197.1.12.mem.ro
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x31 (0x2d), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #233.1.1.mem.str.ro <#197.1.13.mem.ro, ofs 0xe0, size 3, " XX">
  [1] #225.1.2.mem.str <size 5, "XX XX">
  [2] #232.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x31, type 8, 50[3]
GC: --#233.1.1.mem.str.ro
GC: --#197.1.13.mem.ro
GC: --#225.1.2.mem.str
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x35 (0x31), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #234.1.1.mem.str <size 8, "XX XX XX">
  [1] #232.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x35, type 8, 54[3]
GC: ++#232.1.1.mem.ref.ro
GC: ++#234.1.1.mem.str
GC: --#223.1.1.mem.ref.ro
GC: --#197.1.12.mem.ro
GC: --#225.1.1.mem.str
GC: --#234.1.2.mem.str
GC: --#232.1.2.mem.ref.ro
== backtrace ==
  [0] #226.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x39 (0x35), dict #227.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x39, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#226.1.1.ctx.func
GC: --#199.1.2.ctx.func
GC: --#212.1.2.mem.code.ro
GC: --#227.1.1.hash
GC: --#213.1.2.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x108 (0x102), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x108, type 8, 265[3]
GC: ++#213.1.1.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x10c (0x108), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.2.hash <size 3, max 3, parent #205.1.2.hash>
IP: #197:0x10c, type 10, 269[5]
GC: ++#212.1.1.mem.code.ro
GC: ++#213.1.2.hash
GC: --#213.1.3.hash
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x0 (0x0), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x2 (0x0), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #237.1.1.num.int <10 (0xa)>
IP: #212:0x2, type 8, 3[1]
GC: ++#231.1.1.num.int
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x4 (0x2), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #231.1.2.num.int <60 (0x3c)>
  [1] #237.1.1.num.int <10 (0xa)>
IP: #212:0x4, type 8, 5[6]
GC: --#231.1.2.num.int
GC: --#237.1.1.num.int
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0xb (0x4), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0xb, type 8, 12[4]
GC: ++#234.1.1.mem.str
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x10 (0xb), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #234.1.2.mem.str <size 8, "XX XX XX">
IP: #212:0x10, type 8, 17[4]
GC: --#234.1.2.mem.str
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x15 (0x10), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x15, type 9, 22[1]
GC: ++#197.1.11.mem.ro
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x17 (0x15), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #238.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x17, type 8, 24[1]
GC: ++#231.1.1.num.int
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x19 (0x17), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #231.1.2.num.int <60 (0x3c)>
  [1] #238.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x19, type 1, 20 (0x14)
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x1b (0x19), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #239.1.1.num.int <20 (0x14)>
  [1] #231.1.2.num.int <60 (0x3c)>
  [2] #238.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x1b, type 8, 28[3]
GC: --#239.1.1.num.int
GC: --#231.1.2.num.int
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x1f (0x1b), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #240.1.1.num.int <80 (0x50)>
  [1] #238.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xc8, size 1, "y">
IP: #212:0x1f, type 8, 32[3]
GC: ++#238.1.1.mem.ref.ro
GC: ++#240.1.1.num.int
GC: --#229.1.1.mem.ref.ro
GC: --#197.1.12.mem.ro
GC: --#231.1.1.num.int
GC: --#240.1.2.num.int
GC: --#238.1.2.mem.ref.ro
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x23 (0x1f), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x23, type 9, 36[4]
GC: ++#197.1.11.mem.ro
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x28 (0x23), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #241.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x28, type 8, 41[4]
GC: ++#234.1.1.mem.str
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x2d (0x28), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #234.1.2.mem.str <size 8, "XX XX XX">
  [1] #241.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x2d, type 7, 46[3]
GC: ++#197.1.12.mem.ro
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x31 (0x2d), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.13.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #242.1.1.mem.str.ro <#197.1.13.mem.ro, ofs 0xe0, size 3, " XX">
  [1] #234.1.2.mem.str <size 8, "XX XX XX">
  [2] #241.1.1.mem.ref.ro <#197.1.13.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x31, type 8, 50[3]
GC: --#242.1.1.mem.str.ro
GC: --#197.1.13.mem.ro
GC: --#234.1.2.mem.str
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x35 (0x31), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.12.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #243.1.1.mem.str <size 11, "XX XX XX XX">
  [1] #241.1.1.mem.ref.ro <#197.1.12.mem.ro, ofs 0xd6, size 4, "text">
IP: #212:0x35, type 8, 54[3]
GC: ++#241.1.1.mem.ref.ro
GC: ++#243.1.1.mem.str
GC: --#232.1.1.mem.ref.ro
GC: --#197.1.12.mem.ro
GC: --#234.1.1.mem.str
GC: --#243.1.2.mem.str
GC: --#241.1.2.mem.ref.ro
== backtrace ==
  [0] #235.1.1.ctx.func <code #212.1.2.mem.code.ro, ip 0x39 (0x35), dict #236.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #212:0x39, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#235.1.1.ctx.func
GC: --#199.1.2.ctx.func
GC: --#212.1.2.mem.code.ro
GC: --#236.1.1.hash
GC: --#213.1.2.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x112 (0x10c), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #197:0x112, type 8, 275[3]
GC: ++#213.1.1.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x116 (0x112), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #213.1.2.hash <size 3, max 3, parent #205.1.2.hash>
IP: #197:0x116, type 10, 279[5]
GC: ++#204.1.1.mem.code.ro
GC: ++#213.1.2.hash
GC: --#213.1.3.hash
== backtrace ==
  [0] #244.1.1.ctx.func <code #204.1.2.mem.code.ro, ip 0x0 (0x0), dict #245.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x11c (0x116), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #204:0x0, type 1, 10 (0xa)
== backtrace ==
  [0] #244.1.1.ctx.func <code #204.1.2.mem.code.ro, ip 0x2 (0x0), dict #245.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x11c (0x116), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #246.1.1.num.int <10 (0xa)>
IP: #204:0x2, type 8, 3[1]
GC: ++#240.1.1.num.int
== backtrace ==
  [0] #244.1.1.ctx.func <code #204.1.2.mem.code.ro, ip 0x4 (0x2), dict #245.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x11c (0x116), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #240.1.2.num.int <80 (0x50)>
  [1] #246.1.1.num.int <10 (0xa)>
IP: #204:0x4, type 8, 5[6]
GC: --#240.1.2.num.int
GC: --#246.1.1.num.int
== backtrace ==
  [0] #244.1.1.ctx.func <code #204.1.2.mem.code.ro, ip 0xb (0x4), dict #245.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x11c (0x116), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #204:0xb, type 8, 12[4]
GC: ++#243.1.1.mem.str
== backtrace ==
  [0] #244.1.1.ctx.func <code #204.1.2.mem.code.ro, ip 0x10 (0xb), dict #245.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x11c (0x116), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
  [0] #243.1.2.mem.str <size 11, "XX XX XX XX">
IP: #204:0x10, type 8, 17[4]
GC: --#243.1.2.mem.str
== backtrace ==
  [0] #244.1.1.ctx.func <code #204.1.2.mem.code.ro, ip 0x15 (0x10), dict #245.1.1.hash>
  [1] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x11c (0x116), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
IP: #204:0x15, type 3, 1 (0x1)
GC: ++#199.1.1.ctx.func
GC: --#244.1.1.ctx.func
GC: --#199.1.2.ctx.func
GC: --#204.1.2.mem.code.ro
GC: --#245.1.1.hash
GC: --#213.1.2.hash
== backtrace ==
  [0] #199.1.1.ctx.func <code #197.1.11.mem.ro, ip 0x11c (0x116), dict #8.1.2.hash>
== stack (#198.1.1.array) ==
