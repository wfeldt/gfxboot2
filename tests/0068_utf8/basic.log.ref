# ---  trace  ---
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.1.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.2.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.2.mem.ro, "s">
GC: ++#xxxx.1.2.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str.ro <#xxxx.1.3.mem.ro, "ab   cd   Ã¶Ã¤ â‚¬ ">
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.3.mem.ro, "s">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.mem.str.ro
GC: --#xxxx.1.2.mem.str.ro
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.3.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.3.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.4.mem.ro, "a">
GC: ++#xxxx.1.1.mem.str.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.mem.str.ro <#xxxx.1.4.mem.ro, "ab   cd   Ã¶Ã¤ â‚¬ ">
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.4.mem.ro, "a">
GC: --#xxxx.1.2.mem.str.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.array <size 15, max 15>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.4.mem.ro, "a">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.array
GC: --#xxxx.1.2.array
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.4.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.4.mem.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "e">
GC: ++#xxxx.1.1.array
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.array <size 15, max 15>
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "e">
GC: --#xxxx.1.2.array
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.mem.str <size 19, "ab   cd   Ã¶Ã¤ â‚¬ ">
  [1] #xxxx.1.1.mem.ref.ro <#xxxx.1.5.mem.ro, "e">
GC: ++#xxxx.1.1.mem.ref.ro
GC: ++#xxxx.1.1.mem.str
GC: --#xxxx.1.2.mem.str
GC: --#xxxx.1.2.mem.ref.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
GC: ++#xxxx.1.1.mem.str
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.mem.str <size 19, "ab   cd   Ã¶Ã¤ â‚¬ ">
GC: ++#xxxx.1.1.mem.str.ro
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.2.mem.str.ro <#xxxx.1.5.mem.ro, "ab   cd   Ã¶Ã¤ â‚¬ ">
  [1] #xxxx.1.2.mem.str <size 19, "ab   cd   Ã¶Ã¤ â‚¬ ">
GC: --#xxxx.1.2.mem.str.ro
GC: --#xxxx.1.2.mem.str
== backtrace ==
  [0] #xxxx.1.1.ctx.func <code #xxxx.1.5.mem.ro, dict #xxxx.1.2.hash>
== stack (#xxxx.1.1.array) ==
  [0] #xxxx.1.1.num.bool <1 (0x1)>
