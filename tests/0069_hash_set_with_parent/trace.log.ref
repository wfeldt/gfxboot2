# ---  trace  ---
IP: #203:0x0, type 5, 1[7]
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x8, type 9, 9[3]
GC: ++#203.1.1.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xc (0x8), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #206.1.1.mem.ref.ro <#203.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #203:0xc, type 8, 13[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.2.mem.ro, ip 0xe (0xc), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #206.1.1.mem.ref.ro <#203.1.2.mem.ro, ofs 0x9, size 3, "foo">
IP: #203:0xe, type 7, 15[1]
GC: ++#203.1.2.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x10 (0xe), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #207.1.1.mem.str.ro <#203.1.3.mem.ro, ofs 0xf, size 1, "a">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #206.1.1.mem.ref.ro <#203.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #203:0x10, type 1, 10 (0xa)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x12 (0x10), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #208.1.1.num.int <10 (0xa)>
  [1] #207.1.1.mem.str.ro <#203.1.3.mem.ro, ofs 0xf, size 1, "a">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #206.1.1.mem.ref.ro <#203.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #203:0x12, type 8, 19[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x14 (0x12), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.1.hash <size 1, max 1>
  [1] #206.1.1.mem.ref.ro <#203.1.3.mem.ro, ofs 0x9, size 3, "foo">
IP: #203:0x14, type 8, 21[3]
GC: ++#206.1.1.mem.ref.ro
GC: ++#209.1.1.hash
GC: --#209.1.2.hash
GC: --#206.1.2.mem.ref.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.3.mem.ro, ip 0x18 (0x14), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x18, type 9, 25[3]
GC: ++#203.1.3.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.4.mem.ro, ip 0x1c (0x18), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #210.1.1.mem.ref.ro <#203.1.4.mem.ro, ofs 0x19, size 3, "bar">
IP: #203:0x1c, type 8, 29[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.4.mem.ro, ip 0x1e (0x1c), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #210.1.1.mem.ref.ro <#203.1.4.mem.ro, ofs 0x19, size 3, "bar">
IP: #203:0x1e, type 7, 31[1]
GC: ++#203.1.4.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x20 (0x1e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #211.1.1.mem.str.ro <#203.1.5.mem.ro, ofs 0x1f, size 1, "x">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #210.1.1.mem.ref.ro <#203.1.5.mem.ro, ofs 0x19, size 3, "bar">
IP: #203:0x20, type 1, 20 (0x14)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x22 (0x20), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #212.1.1.num.int <20 (0x14)>
  [1] #211.1.1.mem.str.ro <#203.1.5.mem.ro, ofs 0x1f, size 1, "x">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #210.1.1.mem.ref.ro <#203.1.5.mem.ro, ofs 0x19, size 3, "bar">
IP: #203:0x22, type 8, 35[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x24 (0x22), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #213.1.1.hash <size 1, max 1>
  [1] #210.1.1.mem.ref.ro <#203.1.5.mem.ro, ofs 0x19, size 3, "bar">
IP: #203:0x24, type 8, 37[3]
GC: ++#210.1.1.mem.ref.ro
GC: ++#213.1.1.hash
GC: --#213.1.2.hash
GC: --#210.1.2.mem.ref.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x28 (0x24), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x28, type 8, 41[3]
GC: ++#209.1.1.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x2c (0x28), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.2.hash <size 1, max 1>
IP: #203:0x2c, type 8, 45[3]
GC: ++#213.1.1.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x30 (0x2c), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #213.1.2.hash <size 1, max 1>
  [1] #209.1.2.hash <size 1, max 1>
IP: #203:0x30, type 8, 49[9]
GC: ++#213.1.2.hash
GC: --#213.1.3.hash
GC: --#209.1.2.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x3a (0x30), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x3a, type 8, 59[3]
GC: ++#209.1.1.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.5.mem.ro, ip 0x3e (0x3a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.2.hash <size 1, max 1, parent #213.1.2.hash>
IP: #203:0x3e, type 7, 63[1]
GC: ++#203.1.5.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x40 (0x3e), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #214.1.1.mem.str.ro <#203.1.6.mem.ro, ofs 0x3f, size 1, "x">
  [1] #209.1.2.hash <size 1, max 1, parent #213.1.2.hash>
IP: #203:0x40, type 1, 30 (0x1e)
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x42 (0x40), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #215.1.1.num.int <30 (0x1e)>
  [1] #214.1.1.mem.str.ro <#203.1.6.mem.ro, ofs 0x3f, size 1, "x">
  [2] #209.1.2.hash <size 1, max 1, parent #213.1.2.hash>
IP: #203:0x42, type 8, 67[3]
GC: ++#214.1.1.mem.str.ro
GC: ++#215.1.1.num.int
GC: --#215.1.2.num.int
GC: --#214.1.2.mem.str.ro
GC: --#209.1.2.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x46 (0x42), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
IP: #203:0x46, type 8, 71[3]
GC: ++#209.1.1.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x4a (0x46), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #209.1.2.hash <size 2, max 17, parent #213.1.2.hash>
IP: #203:0x4a, type 7, 75[1]
GC: ++#203.1.6.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.7.mem.ro, ip 0x4c (0x4a), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #216.1.1.mem.str.ro <#203.1.7.mem.ro, ofs 0x4b, size 1, "x">
  [1] #209.1.2.hash <size 2, max 17, parent #213.1.2.hash>
IP: #203:0x4c, type 8, 77[3]
GC: ++#215.1.1.num.int
GC: --#216.1.1.mem.str.ro
GC: --#203.1.7.mem.ro
GC: --#209.1.2.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x50 (0x4c), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #215.1.2.num.int <30 (0x1e)>
IP: #203:0x50, type 8, 81[3]
GC: ++#213.1.2.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x54 (0x50), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #213.1.3.hash <size 1, max 1>
  [1] #215.1.2.num.int <30 (0x1e)>
IP: #203:0x54, type 7, 85[1]
GC: ++#203.1.6.mem.ro
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.7.mem.ro, ip 0x56 (0x54), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #218.1.1.mem.str.ro <#203.1.7.mem.ro, ofs 0x55, size 1, "x">
  [1] #213.1.3.hash <size 1, max 1>
  [2] #215.1.2.num.int <30 (0x1e)>
IP: #203:0x56, type 8, 87[3]
GC: ++#212.1.1.num.int
GC: --#218.1.1.mem.str.ro
GC: --#203.1.7.mem.ro
GC: --#213.1.3.hash
== backtrace ==
  [0] #205.1.1.ctx.func <code #203.1.6.mem.ro, ip 0x5a (0x56), dict #8.1.2.hash>
== stack (#204.1.1.array) ==
  [0] #212.1.2.num.int <20 (0x14)>
  [1] #215.1.2.num.int <30 (0x1e)>
