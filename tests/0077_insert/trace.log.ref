# ---  trace  ---
IP: #217:0x0, type 5, 1[7]
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x8, type 9, 9[5]
GC: ++#217.1.1.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0xe (0x8), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0xe, type 8, 15[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x10 (0xe), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #13.1.2.num.prim <2 (0x2)>
  [1] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x10, type 1, 10 (0xa)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x12 (0x10), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #221.1.1.num.int <10 (0xa)>
  [1] #13.1.2.num.prim <2 (0x2)>
  [2] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x12, type 1, 20 (0x14)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x14 (0x12), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.1.num.int <20 (0x14)>
  [1] #221.1.1.num.int <10 (0xa)>
  [2] #13.1.2.num.prim <2 (0x2)>
  [3] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x14, type 1, 30 (0x1e)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x16 (0x14), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #223.1.1.num.int <30 (0x1e)>
  [1] #222.1.1.num.int <20 (0x14)>
  [2] #221.1.1.num.int <10 (0xa)>
  [3] #13.1.2.num.prim <2 (0x2)>
  [4] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x16, type 1, 40 (0x28)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x18 (0x16), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #224.1.1.num.int <40 (0x28)>
  [1] #223.1.1.num.int <30 (0x1e)>
  [2] #222.1.1.num.int <20 (0x14)>
  [3] #221.1.1.num.int <10 (0xa)>
  [4] #13.1.2.num.prim <2 (0x2)>
  [5] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x18, type 8, 25[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x1a (0x18), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.1.array <size 4, max 4>
  [1] #220.1.1.mem.ref.ro <#217.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #217:0x1a, type 8, 27[3]
GC: ++#220.1.1.mem.ref.ro
GC: ++#225.1.1.array
GC: --#225.1.2.array
GC: --#220.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x1e (0x1a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x1e, type 8, 31[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x24 (0x1e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 4, max 4>
IP: #217:0x24, type 1, 0 (0x0)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x25 (0x24), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #226.1.1.num.int <0 (0x0)>
  [1] #225.1.2.array <size 4, max 4>
IP: #217:0x25, type 1, 100 (0x64)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x27 (0x25), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #227.1.1.num.int <100 (0x64)>
  [1] #226.1.1.num.int <0 (0x0)>
  [2] #225.1.2.array <size 4, max 4>
IP: #217:0x27, type 8, 40[6]
GC: ++#227.1.1.num.int
GC: --#227.1.2.num.int
GC: --#226.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x2e (0x27), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 5, max 20>
IP: #217:0x2e, type 8, 47[3]
GC: --#225.1.2.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x32 (0x2e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x32, type 8, 51[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x38 (0x32), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 5, max 20>
IP: #217:0x38, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x3a (0x38), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #225.1.2.array <size 5, max 20>
IP: #217:0x3a, type 1, 400 (0x190)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x3d (0x3a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #230.1.1.num.int <400 (0x190)>
  [1] #229.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #225.1.2.array <size 5, max 20>
IP: #217:0x3d, type 8, 62[6]
GC: ++#230.1.1.num.int
GC: --#230.1.2.num.int
GC: --#229.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x44 (0x3d), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 6, max 20>
IP: #217:0x44, type 8, 69[3]
GC: --#225.1.2.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x48 (0x44), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x48, type 8, 73[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x4e (0x48), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 6, max 20>
IP: #217:0x4e, type 1, 4 (0x4)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x4f (0x4e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #231.1.1.num.int <4 (0x4)>
  [1] #225.1.2.array <size 6, max 20>
IP: #217:0x4f, type 1, 500 (0x1f4)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x52 (0x4f), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #232.1.1.num.int <500 (0x1f4)>
  [1] #231.1.1.num.int <4 (0x4)>
  [2] #225.1.2.array <size 6, max 20>
IP: #217:0x52, type 8, 83[6]
GC: ++#232.1.1.num.int
GC: --#232.1.2.num.int
GC: --#231.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x59 (0x52), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 7, max 20>
IP: #217:0x59, type 8, 90[3]
GC: --#225.1.2.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x5d (0x59), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x5d, type 8, 94[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x63 (0x5d), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 7, max 20>
IP: #217:0x63, type 1, 10 (0xa)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x65 (0x63), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #233.1.1.num.int <10 (0xa)>
  [1] #225.1.2.array <size 7, max 20>
IP: #217:0x65, type 1, 900 (0x384)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x68 (0x65), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #234.1.1.num.int <900 (0x384)>
  [1] #233.1.1.num.int <10 (0xa)>
  [2] #225.1.2.array <size 7, max 20>
IP: #217:0x68, type 8, 105[6]
GC: ++#234.1.1.num.int
GC: --#234.1.2.num.int
GC: --#233.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x6f (0x68), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 11, max 20>
IP: #217:0x6f, type 8, 112[3]
GC: --#225.1.2.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.2.mem.ro, ip 0x73 (0x6f), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x73, type 9, 116[5]
GC: ++#217.1.2.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.3.mem.ro, ip 0x79 (0x73), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #235.1.1.mem.ref.ro <#217.1.3.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x79, type 8, 122[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.3.mem.ro, ip 0x7b (0x79), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #235.1.1.mem.ref.ro <#217.1.3.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x7b, type 7, 124[2]
GC: ++#217.1.3.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.4.mem.ro, ip 0x7e (0x7b), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #236.1.1.mem.str.ro <#217.1.4.mem.ro, ofs 0x7c, size 2, "aa">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #235.1.1.mem.ref.ro <#217.1.4.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x7e, type 1, 11 (0xb)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.4.mem.ro, ip 0x80 (0x7e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #237.1.1.num.int <11 (0xb)>
  [1] #236.1.1.mem.str.ro <#217.1.4.mem.ro, ofs 0x7c, size 2, "aa">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #235.1.1.mem.ref.ro <#217.1.4.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x80, type 7, 129[2]
GC: ++#217.1.4.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.5.mem.ro, ip 0x83 (0x80), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #238.1.1.mem.str.ro <#217.1.5.mem.ro, ofs 0x81, size 2, "bb">
  [1] #237.1.1.num.int <11 (0xb)>
  [2] #236.1.1.mem.str.ro <#217.1.5.mem.ro, ofs 0x7c, size 2, "aa">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #235.1.1.mem.ref.ro <#217.1.5.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x83, type 1, 22 (0x16)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.5.mem.ro, ip 0x85 (0x83), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #239.1.1.num.int <22 (0x16)>
  [1] #238.1.1.mem.str.ro <#217.1.5.mem.ro, ofs 0x81, size 2, "bb">
  [2] #237.1.1.num.int <11 (0xb)>
  [3] #236.1.1.mem.str.ro <#217.1.5.mem.ro, ofs 0x7c, size 2, "aa">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #235.1.1.mem.ref.ro <#217.1.5.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x85, type 7, 134[2]
GC: ++#217.1.5.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x88 (0x85), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #240.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x86, size 2, "cc">
  [1] #239.1.1.num.int <22 (0x16)>
  [2] #238.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x81, size 2, "bb">
  [3] #237.1.1.num.int <11 (0xb)>
  [4] #236.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x7c, size 2, "aa">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #235.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x88, type 1, 33 (0x21)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x8a (0x88), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.1.1.num.int <33 (0x21)>
  [1] #240.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x86, size 2, "cc">
  [2] #239.1.1.num.int <22 (0x16)>
  [3] #238.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x81, size 2, "bb">
  [4] #237.1.1.num.int <11 (0xb)>
  [5] #236.1.1.mem.str.ro <#217.1.6.mem.ro, ofs 0x7c, size 2, "aa">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #235.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x8a, type 8, 139[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x8c (0x8a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.1.hash <size 3, max 3>
  [1] #235.1.1.mem.ref.ro <#217.1.6.mem.ro, ofs 0x74, size 5, "foo_2">
IP: #217:0x8c, type 8, 141[3]
GC: ++#235.1.1.mem.ref.ro
GC: ++#242.1.1.hash
GC: --#242.1.2.hash
GC: --#235.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x90 (0x8c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x90, type 8, 145[5]
GC: ++#242.1.1.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0x96 (0x90), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.hash <size 3, max 3>
IP: #217:0x96, type 7, 151[2]
GC: ++#217.1.6.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x99 (0x96), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #243.1.1.mem.str.ro <#217.1.7.mem.ro, ofs 0x97, size 2, "bb">
  [1] #242.1.2.hash <size 3, max 3>
IP: #217:0x99, type 1, 222 (0xde)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0x9c (0x99), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.1.num.int <222 (0xde)>
  [1] #243.1.1.mem.str.ro <#217.1.7.mem.ro, ofs 0x97, size 2, "bb">
  [2] #242.1.2.hash <size 3, max 3>
IP: #217:0x9c, type 8, 157[6]
GC: ++#243.1.1.mem.str.ro
GC: ++#244.1.1.num.int
GC: --#238.1.1.mem.str.ro
GC: --#217.1.7.mem.ro
GC: --#239.1.1.num.int
GC: --#244.1.2.num.int
GC: --#243.1.2.mem.str.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0xa3 (0x9c), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.hash <size 3, max 3>
IP: #217:0xa3, type 8, 164[3]
GC: --#242.1.2.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0xa7 (0xa3), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xa7, type 8, 168[5]
GC: ++#242.1.1.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.6.mem.ro, ip 0xad (0xa7), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.hash <size 3, max 3>
IP: #217:0xad, type 7, 174[2]
GC: ++#217.1.6.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0xb0 (0xad), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #245.1.1.mem.str.ro <#217.1.7.mem.ro, ofs 0xae, size 2, "dd">
  [1] #242.1.2.hash <size 3, max 3>
IP: #217:0xb0, type 1, 444 (0x1bc)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0xb3 (0xb0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.1.1.num.int <444 (0x1bc)>
  [1] #245.1.1.mem.str.ro <#217.1.7.mem.ro, ofs 0xae, size 2, "dd">
  [2] #242.1.2.hash <size 3, max 3>
IP: #217:0xb3, type 8, 180[6]
GC: ++#245.1.1.mem.str.ro
GC: ++#246.1.1.num.int
GC: --#246.1.2.num.int
GC: --#245.1.2.mem.str.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0xba (0xb3), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.hash <size 4, max 19>
IP: #217:0xba, type 8, 187[3]
GC: --#242.1.2.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.7.mem.ro, ip 0xbe (0xba), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xbe, type 9, 191[5]
GC: ++#217.1.7.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xc4 (0xbe), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #247.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0xbf, size 5, "foo_3">
IP: #217:0xc4, type 7, 197[2]
GC: ++#217.1.8.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0xc7 (0xc4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #248.1.1.mem.str.ro <#217.1.9.mem.ro, ofs 0xc5, size 2, "12">
  [1] #247.1.1.mem.ref.ro <#217.1.9.mem.ro, ofs 0xbf, size 5, "foo_3">
IP: #217:0xc7, type 7, 200[0]
GC: ++#217.1.9.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.10.mem.ro, ip 0xc8 (0xc7), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #249.1.1.mem.str.ro <#217.1.10.mem.ro, ofs 0xc8, size 0, "">
  [1] #248.1.1.mem.str.ro <#217.1.10.mem.ro, ofs 0xc5, size 2, "12">
  [2] #247.1.1.mem.ref.ro <#217.1.10.mem.ro, ofs 0xbf, size 5, "foo_3">
IP: #217:0xc8, type 8, 201[3]
GC: --#249.1.1.mem.str.ro
GC: --#217.1.10.mem.ro
GC: --#248.1.1.mem.str.ro
GC: --#217.1.9.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xcc (0xc8), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.1.mem.str <size 2, "12">
  [1] #247.1.1.mem.ref.ro <#217.1.8.mem.ro, ofs 0xbf, size 5, "foo_3">
IP: #217:0xcc, type 8, 205[3]
GC: ++#247.1.1.mem.ref.ro
GC: ++#250.1.1.mem.str
GC: --#250.1.2.mem.str
GC: --#247.1.2.mem.ref.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xd0 (0xcc), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xd0, type 8, 209[5]
GC: ++#250.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xd6 (0xd0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 2, "12">
IP: #217:0xd6, type 1, 0 (0x0)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xd7 (0xd6), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #251.1.1.num.int <0 (0x0)>
  [1] #250.1.2.mem.str <size 2, "12">
IP: #217:0xd7, type 1, 65 (0x41)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xd9 (0xd7), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #252.1.1.num.int <65 (0x41)>
  [1] #251.1.1.num.int <0 (0x0)>
  [2] #250.1.2.mem.str <size 2, "12">
IP: #217:0xd9, type 8, 218[6]
GC: --#252.1.1.num.int
GC: --#251.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xe0 (0xd9), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 3, "A12">
IP: #217:0xe0, type 8, 225[3]
GC: --#250.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xe4 (0xe0), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xe4, type 8, 229[5]
GC: ++#250.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xea (0xe4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 3, "A12">
IP: #217:0xea, type 1, 3 (0x3)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xeb (0xea), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #253.1.1.num.int <3 (0x3)>
  [1] #250.1.2.mem.str <size 3, "A12">
IP: #217:0xeb, type 1, 53 (0x35)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xed (0xeb), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #254.1.1.num.int <53 (0x35)>
  [1] #253.1.1.num.int <3 (0x3)>
  [2] #250.1.2.mem.str <size 3, "A12">
IP: #217:0xed, type 8, 238[6]
GC: --#254.1.1.num.int
GC: --#253.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xf4 (0xed), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 4, "A125">
IP: #217:0xf4, type 8, 245[3]
GC: --#250.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xf8 (0xf4), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0xf8, type 8, 249[5]
GC: ++#250.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0xfe (0xf8), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 4, "A125">
IP: #217:0xfe, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x100 (0xfe), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #255.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #250.1.2.mem.str <size 4, "A125">
IP: #217:0x100, type 1, 54 (0x36)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x102 (0x100), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #256.1.1.num.int <54 (0x36)>
  [1] #255.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #250.1.2.mem.str <size 4, "A125">
IP: #217:0x102, type 8, 259[6]
GC: --#256.1.1.num.int
GC: --#255.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 5, "A1265">
IP: #217:0x109, type 8, 266[3]
GC: --#250.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x10d (0x109), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x10d, type 8, 270[5]
GC: ++#250.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x113 (0x10d), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 5, "A1265">
IP: #217:0x113, type 1, 19 (0x13)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x115 (0x113), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #257.1.1.num.int <19 (0x13)>
  [1] #250.1.2.mem.str <size 5, "A1265">
IP: #217:0x115, type 1, 88 (0x58)
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x117 (0x115), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #226.2.1.num.int <88 (0x58)>
  [1] #257.1.1.num.int <19 (0x13)>
  [2] #250.1.2.mem.str <size 5, "A1265">
IP: #217:0x117, type 8, 280[6]
GC: --#226.2.1.num.int
GC: --#257.1.1.num.int
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x11e (0x117), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 20, "A1265              X">
IP: #217:0x11e, type 8, 287[3]
GC: --#250.1.2.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x122 (0x11e), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
IP: #217:0x122, type 8, 291[5]
GC: ++#225.1.1.array
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x128 (0x122), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #225.1.2.array <size 11, max 20>
IP: #217:0x128, type 6, 297[1]
GC: ++#217.1.8.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x12a (0x128), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #229.2.1.mem.code.ro <#217.1.9.mem.ro, ofs 0x129, size 1>
  [1] #225.1.2.array <size 11, max 20>
IP: #217:0x12a, type 8, 299[6]
GC: ++#227.1.1.num.int
GC: ++#229.2.1.mem.code.ro
GC: ++#225.1.2.array
GC: --#229.2.2.mem.code.ro
GC: --#225.1.3.array
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#221.1.1.num.int
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #221.1.2.num.int <10 (0xa)>
  [1] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#222.1.1.num.int
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #222.1.2.num.int <20 (0x14)>
  [1] #221.1.2.num.int <10 (0xa)>
  [2] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#223.1.1.num.int
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #223.1.2.num.int <30 (0x1e)>
  [1] #222.1.2.num.int <20 (0x14)>
  [2] #221.1.2.num.int <10 (0xa)>
  [3] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#232.1.1.num.int
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #232.1.2.num.int <500 (0x1f4)>
  [1] #223.1.2.num.int <30 (0x1e)>
  [2] #222.1.2.num.int <20 (0x14)>
  [3] #221.1.2.num.int <10 (0xa)>
  [4] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#230.1.1.num.int
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 6, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #230.1.2.num.int <400 (0x190)>
  [1] #232.1.2.num.int <500 (0x1f4)>
  [2] #223.1.2.num.int <30 (0x1e)>
  [3] #222.1.2.num.int <20 (0x14)>
  [4] #221.1.2.num.int <10 (0xa)>
  [5] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#224.1.1.num.int
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 7, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #224.1.2.num.int <40 (0x28)>
  [1] #230.1.2.num.int <400 (0x190)>
  [2] #232.1.2.num.int <500 (0x1f4)>
  [3] #223.1.2.num.int <30 (0x1e)>
  [4] #222.1.2.num.int <20 (0x14)>
  [5] #221.1.2.num.int <10 (0xa)>
  [6] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 8, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #224.1.2.num.int <40 (0x28)>
  [2] #230.1.2.num.int <400 (0x190)>
  [3] #232.1.2.num.int <500 (0x1f4)>
  [4] #223.1.2.num.int <30 (0x1e)>
  [5] #222.1.2.num.int <20 (0x14)>
  [6] #221.1.2.num.int <10 (0xa)>
  [7] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 9, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #0.0.nil <nil>
  [2] #224.1.2.num.int <40 (0x28)>
  [3] #230.1.2.num.int <400 (0x190)>
  [4] #232.1.2.num.int <500 (0x1f4)>
  [5] #223.1.2.num.int <30 (0x1e)>
  [6] #222.1.2.num.int <20 (0x14)>
  [7] #221.1.2.num.int <10 (0xa)>
  [8] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 10, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #224.1.2.num.int <40 (0x28)>
  [4] #230.1.2.num.int <400 (0x190)>
  [5] #232.1.2.num.int <500 (0x1f4)>
  [6] #223.1.2.num.int <30 (0x1e)>
  [7] #222.1.2.num.int <20 (0x14)>
  [8] #221.1.2.num.int <10 (0xa)>
  [9] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#234.1.1.num.int
== backtrace ==
  [0] #231.2.1.ctx.forall <code #229.2.1.mem.code.ro, ip 0x0 (0x0), index 11, iterate #225.1.2.array>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #234.1.2.num.int <900 (0x384)>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #224.1.2.num.int <40 (0x28)>
  [5] #230.1.2.num.int <400 (0x190)>
  [6] #232.1.2.num.int <500 (0x1f4)>
  [7] #223.1.2.num.int <30 (0x1e)>
  [8] #222.1.2.num.int <20 (0x14)>
  [9] #221.1.2.num.int <10 (0xa)>
  [10] #227.1.2.num.int <100 (0x64)>
IP: #229:0x0, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#231.2.1.ctx.forall
GC: --#219.1.2.ctx.func
GC: --#229.2.1.mem.code.ro
GC: --#225.1.2.array
GC: --#217.1.9.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x131 (0x12a), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #234.1.2.num.int <900 (0x384)>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #224.1.2.num.int <40 (0x28)>
  [5] #230.1.2.num.int <400 (0x190)>
  [6] #232.1.2.num.int <500 (0x1f4)>
  [7] #223.1.2.num.int <30 (0x1e)>
  [8] #222.1.2.num.int <20 (0x14)>
  [9] #221.1.2.num.int <10 (0xa)>
  [10] #227.1.2.num.int <100 (0x64)>
IP: #217:0x131, type 8, 306[5]
GC: ++#242.1.1.hash
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x137 (0x131), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #242.1.2.hash <size 4, max 19>
  [1] #234.1.2.num.int <900 (0x384)>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #224.1.2.num.int <40 (0x28)>
  [6] #230.1.2.num.int <400 (0x190)>
  [7] #232.1.2.num.int <500 (0x1f4)>
  [8] #223.1.2.num.int <30 (0x1e)>
  [9] #222.1.2.num.int <20 (0x14)>
  [10] #221.1.2.num.int <10 (0xa)>
  [11] #227.1.2.num.int <100 (0x64)>
IP: #217:0x137, type 6, 312[1]
GC: ++#217.1.8.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x139 (0x137), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #233.2.1.mem.code.ro <#217.1.9.mem.ro, ofs 0x138, size 1>
  [1] #242.1.2.hash <size 4, max 19>
  [2] #234.1.2.num.int <900 (0x384)>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #0.0.nil <nil>
  [6] #224.1.2.num.int <40 (0x28)>
  [7] #230.1.2.num.int <400 (0x190)>
  [8] #232.1.2.num.int <500 (0x1f4)>
  [9] #223.1.2.num.int <30 (0x1e)>
  [10] #222.1.2.num.int <20 (0x14)>
  [11] #221.1.2.num.int <10 (0xa)>
  [12] #227.1.2.num.int <100 (0x64)>
IP: #217:0x139, type 8, 314[6]
GC: ++#236.1.1.mem.str.ro
GC: ++#237.1.1.num.int
GC: ++#233.2.1.mem.code.ro
GC: ++#242.1.2.hash
GC: --#233.2.2.mem.code.ro
GC: --#242.1.3.hash
== backtrace ==
  [0] #238.2.1.ctx.forall <code #233.2.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #242.1.2.hash>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x140 (0x139), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #237.1.2.num.int <11 (0xb)>
  [1] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7c, size 2, "aa">
  [2] #234.1.2.num.int <900 (0x384)>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #0.0.nil <nil>
  [6] #224.1.2.num.int <40 (0x28)>
  [7] #230.1.2.num.int <400 (0x190)>
  [8] #232.1.2.num.int <500 (0x1f4)>
  [9] #223.1.2.num.int <30 (0x1e)>
  [10] #222.1.2.num.int <20 (0x14)>
  [11] #221.1.2.num.int <10 (0xa)>
  [12] #227.1.2.num.int <100 (0x64)>
IP: #233:0x0, type 3, 1 (0x1)
GC: ++#243.1.1.mem.str.ro
GC: ++#244.1.1.num.int
== backtrace ==
  [0] #238.2.1.ctx.forall <code #233.2.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #242.1.2.hash>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x140 (0x139), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #244.1.2.num.int <222 (0xde)>
  [1] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x97, size 2, "bb">
  [2] #237.1.2.num.int <11 (0xb)>
  [3] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7c, size 2, "aa">
  [4] #234.1.2.num.int <900 (0x384)>
  [5] #0.0.nil <nil>
  [6] #0.0.nil <nil>
  [7] #0.0.nil <nil>
  [8] #224.1.2.num.int <40 (0x28)>
  [9] #230.1.2.num.int <400 (0x190)>
  [10] #232.1.2.num.int <500 (0x1f4)>
  [11] #223.1.2.num.int <30 (0x1e)>
  [12] #222.1.2.num.int <20 (0x14)>
  [13] #221.1.2.num.int <10 (0xa)>
  [14] #227.1.2.num.int <100 (0x64)>
IP: #233:0x0, type 3, 1 (0x1)
GC: ++#240.1.1.mem.str.ro
GC: ++#241.1.1.num.int
== backtrace ==
  [0] #238.2.1.ctx.forall <code #233.2.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #242.1.2.hash>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x140 (0x139), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #241.1.2.num.int <33 (0x21)>
  [1] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x86, size 2, "cc">
  [2] #244.1.2.num.int <222 (0xde)>
  [3] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x97, size 2, "bb">
  [4] #237.1.2.num.int <11 (0xb)>
  [5] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7c, size 2, "aa">
  [6] #234.1.2.num.int <900 (0x384)>
  [7] #0.0.nil <nil>
  [8] #0.0.nil <nil>
  [9] #0.0.nil <nil>
  [10] #224.1.2.num.int <40 (0x28)>
  [11] #230.1.2.num.int <400 (0x190)>
  [12] #232.1.2.num.int <500 (0x1f4)>
  [13] #223.1.2.num.int <30 (0x1e)>
  [14] #222.1.2.num.int <20 (0x14)>
  [15] #221.1.2.num.int <10 (0xa)>
  [16] #227.1.2.num.int <100 (0x64)>
IP: #233:0x0, type 3, 1 (0x1)
GC: ++#245.1.1.mem.str.ro
GC: ++#246.1.1.num.int
== backtrace ==
  [0] #238.2.1.ctx.forall <code #233.2.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #242.1.2.hash>
  [1] #219.1.1.ctx.func <code #217.1.9.mem.ro, ip 0x140 (0x139), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.1.2.num.int <444 (0x1bc)>
  [1] #245.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0xae, size 2, "dd">
  [2] #241.1.2.num.int <33 (0x21)>
  [3] #240.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x86, size 2, "cc">
  [4] #244.1.2.num.int <222 (0xde)>
  [5] #243.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x97, size 2, "bb">
  [6] #237.1.2.num.int <11 (0xb)>
  [7] #236.1.2.mem.str.ro <#217.1.9.mem.ro, ofs 0x7c, size 2, "aa">
  [8] #234.1.2.num.int <900 (0x384)>
  [9] #0.0.nil <nil>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #224.1.2.num.int <40 (0x28)>
  [13] #230.1.2.num.int <400 (0x190)>
  [14] #232.1.2.num.int <500 (0x1f4)>
  [15] #223.1.2.num.int <30 (0x1e)>
  [16] #222.1.2.num.int <20 (0x14)>
  [17] #221.1.2.num.int <10 (0xa)>
  [18] #227.1.2.num.int <100 (0x64)>
IP: #233:0x0, type 3, 1 (0x1)
GC: ++#219.1.1.ctx.func
GC: --#238.2.1.ctx.forall
GC: --#219.1.2.ctx.func
GC: --#233.2.1.mem.code.ro
GC: --#242.1.2.hash
GC: --#217.1.9.mem.ro
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x140 (0x139), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #246.1.2.num.int <444 (0x1bc)>
  [1] #245.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0xae, size 2, "dd">
  [2] #241.1.2.num.int <33 (0x21)>
  [3] #240.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x86, size 2, "cc">
  [4] #244.1.2.num.int <222 (0xde)>
  [5] #243.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x97, size 2, "bb">
  [6] #237.1.2.num.int <11 (0xb)>
  [7] #236.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x7c, size 2, "aa">
  [8] #234.1.2.num.int <900 (0x384)>
  [9] #0.0.nil <nil>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #224.1.2.num.int <40 (0x28)>
  [13] #230.1.2.num.int <400 (0x190)>
  [14] #232.1.2.num.int <500 (0x1f4)>
  [15] #223.1.2.num.int <30 (0x1e)>
  [16] #222.1.2.num.int <20 (0x14)>
  [17] #221.1.2.num.int <10 (0xa)>
  [18] #227.1.2.num.int <100 (0x64)>
IP: #217:0x140, type 8, 321[5]
GC: ++#250.1.1.mem.str
== backtrace ==
  [0] #219.1.1.ctx.func <code #217.1.8.mem.ro, ip 0x146 (0x140), dict #8.1.2.hash>
== stack (#218.1.1.array) ==
  [0] #250.1.2.mem.str <size 20, "A1265              X">
  [1] #246.1.2.num.int <444 (0x1bc)>
  [2] #245.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0xae, size 2, "dd">
  [3] #241.1.2.num.int <33 (0x21)>
  [4] #240.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x86, size 2, "cc">
  [5] #244.1.2.num.int <222 (0xde)>
  [6] #243.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x97, size 2, "bb">
  [7] #237.1.2.num.int <11 (0xb)>
  [8] #236.1.2.mem.str.ro <#217.1.8.mem.ro, ofs 0x7c, size 2, "aa">
  [9] #234.1.2.num.int <900 (0x384)>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #224.1.2.num.int <40 (0x28)>
  [14] #230.1.2.num.int <400 (0x190)>
  [15] #232.1.2.num.int <500 (0x1f4)>
  [16] #223.1.2.num.int <30 (0x1e)>
  [17] #222.1.2.num.int <20 (0x14)>
  [18] #221.1.2.num.int <10 (0xa)>
  [19] #227.1.2.num.int <100 (0x64)>
