# ---  trace  ---
IP: #215:0x0, type 5, 1[7]
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.1.mem.ro, ip 0x8 (0x0), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x8, type 9, 9[5]
GC: ++#215.1.1.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0xe (0x8), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #215:0xe, type 8, 15[1]
GC: ++#13.1.1.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x10 (0xe), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #13.1.2.num.prim <2 (0x2)>
  [1] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #215:0x10, type 1, 10 (0xa)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x12 (0x10), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #219.1.1.num.int <10 (0xa)>
  [1] #13.1.2.num.prim <2 (0x2)>
  [2] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #215:0x12, type 1, 20 (0x14)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x14 (0x12), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #220.1.1.num.int <20 (0x14)>
  [1] #219.1.1.num.int <10 (0xa)>
  [2] #13.1.2.num.prim <2 (0x2)>
  [3] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #215:0x14, type 1, 30 (0x1e)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x16 (0x14), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #221.1.1.num.int <30 (0x1e)>
  [1] #220.1.1.num.int <20 (0x14)>
  [2] #219.1.1.num.int <10 (0xa)>
  [3] #13.1.2.num.prim <2 (0x2)>
  [4] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #215:0x16, type 1, 40 (0x28)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x18 (0x16), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #222.1.1.num.int <40 (0x28)>
  [1] #221.1.1.num.int <30 (0x1e)>
  [2] #220.1.1.num.int <20 (0x14)>
  [3] #219.1.1.num.int <10 (0xa)>
  [4] #13.1.2.num.prim <2 (0x2)>
  [5] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #215:0x18, type 8, 25[1]
GC: --#13.1.2.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x1a (0x18), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #223.1.1.array <size 4, max 4>
  [1] #218.1.1.mem.ref.ro <#215.1.2.mem.ro, ofs 0x9, size 5, "foo_1">
IP: #215:0x1a, type 8, 27[3]
GC: ++#218.1.1.mem.ref.ro
GC: ++#223.1.1.array
GC: --#223.1.2.array
GC: --#218.1.2.mem.ref.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x1e (0x1a), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x1e, type 8, 31[5]
GC: ++#223.1.1.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x24 (0x1e), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #223.1.2.array <size 4, max 4>
IP: #215:0x24, type 1, 0 (0x0)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x25 (0x24), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #224.1.1.num.int <0 (0x0)>
  [1] #223.1.2.array <size 4, max 4>
IP: #215:0x25, type 1, 100 (0x64)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x27 (0x25), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #225.1.1.num.int <100 (0x64)>
  [1] #224.1.1.num.int <0 (0x0)>
  [2] #223.1.2.array <size 4, max 4>
IP: #215:0x27, type 8, 40[6]
GC: ++#225.1.1.num.int
GC: --#225.1.2.num.int
GC: --#224.1.1.num.int
GC: --#223.1.2.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x2e (0x27), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x2e, type 8, 47[5]
GC: ++#223.1.1.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x34 (0x2e), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #223.1.2.array <size 5, max 20>
IP: #215:0x34, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x36 (0x34), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #227.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #223.1.2.array <size 5, max 20>
IP: #215:0x36, type 1, 400 (0x190)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x39 (0x36), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #228.1.1.num.int <400 (0x190)>
  [1] #227.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #223.1.2.array <size 5, max 20>
IP: #215:0x39, type 8, 58[6]
GC: ++#228.1.1.num.int
GC: --#228.1.2.num.int
GC: --#227.1.1.num.int
GC: --#223.1.2.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x40 (0x39), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x40, type 8, 65[5]
GC: ++#223.1.1.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x46 (0x40), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #223.1.2.array <size 6, max 20>
IP: #215:0x46, type 1, 4 (0x4)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x47 (0x46), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #229.1.1.num.int <4 (0x4)>
  [1] #223.1.2.array <size 6, max 20>
IP: #215:0x47, type 1, 500 (0x1f4)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x4a (0x47), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #230.1.1.num.int <500 (0x1f4)>
  [1] #229.1.1.num.int <4 (0x4)>
  [2] #223.1.2.array <size 6, max 20>
IP: #215:0x4a, type 8, 75[6]
GC: ++#230.1.1.num.int
GC: --#230.1.2.num.int
GC: --#229.1.1.num.int
GC: --#223.1.2.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x51 (0x4a), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x51, type 8, 82[5]
GC: ++#223.1.1.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x57 (0x51), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #223.1.2.array <size 7, max 20>
IP: #215:0x57, type 1, 10 (0xa)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x59 (0x57), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #231.1.1.num.int <10 (0xa)>
  [1] #223.1.2.array <size 7, max 20>
IP: #215:0x59, type 1, 900 (0x384)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x5c (0x59), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #232.1.1.num.int <900 (0x384)>
  [1] #231.1.1.num.int <10 (0xa)>
  [2] #223.1.2.array <size 7, max 20>
IP: #215:0x5c, type 8, 93[6]
GC: ++#232.1.1.num.int
GC: --#232.1.2.num.int
GC: --#231.1.1.num.int
GC: --#223.1.2.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.2.mem.ro, ip 0x63 (0x5c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x63, type 9, 100[5]
GC: ++#215.1.2.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.3.mem.ro, ip 0x69 (0x63), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #233.1.1.mem.ref.ro <#215.1.3.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x69, type 8, 106[1]
GC: ++#17.1.1.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.3.mem.ro, ip 0x6b (0x69), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #17.1.2.num.prim <4 (0x4)>
  [1] #233.1.1.mem.ref.ro <#215.1.3.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x6b, type 7, 108[2]
GC: ++#215.1.3.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.4.mem.ro, ip 0x6e (0x6b), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #234.1.1.mem.str.ro <#215.1.4.mem.ro, ofs 0x6c, size 2, "aa">
  [1] #17.1.2.num.prim <4 (0x4)>
  [2] #233.1.1.mem.ref.ro <#215.1.4.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x6e, type 1, 11 (0xb)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.4.mem.ro, ip 0x70 (0x6e), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #235.1.1.num.int <11 (0xb)>
  [1] #234.1.1.mem.str.ro <#215.1.4.mem.ro, ofs 0x6c, size 2, "aa">
  [2] #17.1.2.num.prim <4 (0x4)>
  [3] #233.1.1.mem.ref.ro <#215.1.4.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x70, type 7, 113[2]
GC: ++#215.1.4.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.5.mem.ro, ip 0x73 (0x70), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #236.1.1.mem.str.ro <#215.1.5.mem.ro, ofs 0x71, size 2, "bb">
  [1] #235.1.1.num.int <11 (0xb)>
  [2] #234.1.1.mem.str.ro <#215.1.5.mem.ro, ofs 0x6c, size 2, "aa">
  [3] #17.1.2.num.prim <4 (0x4)>
  [4] #233.1.1.mem.ref.ro <#215.1.5.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x73, type 1, 22 (0x16)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.5.mem.ro, ip 0x75 (0x73), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #237.1.1.num.int <22 (0x16)>
  [1] #236.1.1.mem.str.ro <#215.1.5.mem.ro, ofs 0x71, size 2, "bb">
  [2] #235.1.1.num.int <11 (0xb)>
  [3] #234.1.1.mem.str.ro <#215.1.5.mem.ro, ofs 0x6c, size 2, "aa">
  [4] #17.1.2.num.prim <4 (0x4)>
  [5] #233.1.1.mem.ref.ro <#215.1.5.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x75, type 7, 118[2]
GC: ++#215.1.5.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x78 (0x75), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #238.1.1.mem.str.ro <#215.1.6.mem.ro, ofs 0x76, size 2, "cc">
  [1] #237.1.1.num.int <22 (0x16)>
  [2] #236.1.1.mem.str.ro <#215.1.6.mem.ro, ofs 0x71, size 2, "bb">
  [3] #235.1.1.num.int <11 (0xb)>
  [4] #234.1.1.mem.str.ro <#215.1.6.mem.ro, ofs 0x6c, size 2, "aa">
  [5] #17.1.2.num.prim <4 (0x4)>
  [6] #233.1.1.mem.ref.ro <#215.1.6.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x78, type 1, 33 (0x21)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x7a (0x78), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #239.1.1.num.int <33 (0x21)>
  [1] #238.1.1.mem.str.ro <#215.1.6.mem.ro, ofs 0x76, size 2, "cc">
  [2] #237.1.1.num.int <22 (0x16)>
  [3] #236.1.1.mem.str.ro <#215.1.6.mem.ro, ofs 0x71, size 2, "bb">
  [4] #235.1.1.num.int <11 (0xb)>
  [5] #234.1.1.mem.str.ro <#215.1.6.mem.ro, ofs 0x6c, size 2, "aa">
  [6] #17.1.2.num.prim <4 (0x4)>
  [7] #233.1.1.mem.ref.ro <#215.1.6.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x7a, type 8, 123[1]
GC: --#17.1.2.num.prim
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x7c (0x7a), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.1.hash <size 3, max 3>
  [1] #233.1.1.mem.ref.ro <#215.1.6.mem.ro, ofs 0x64, size 5, "foo_2">
IP: #215:0x7c, type 8, 125[3]
GC: ++#233.1.1.mem.ref.ro
GC: ++#240.1.1.hash
GC: --#240.1.2.hash
GC: --#233.1.2.mem.ref.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x80 (0x7c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x80, type 8, 129[5]
GC: ++#240.1.1.hash
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x86 (0x80), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash <size 3, max 3>
IP: #215:0x86, type 7, 135[2]
GC: ++#215.1.6.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.7.mem.ro, ip 0x89 (0x86), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #241.1.1.mem.str.ro <#215.1.7.mem.ro, ofs 0x87, size 2, "bb">
  [1] #240.1.2.hash <size 3, max 3>
IP: #215:0x89, type 1, 222 (0xde)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.7.mem.ro, ip 0x8c (0x89), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #242.1.1.num.int <222 (0xde)>
  [1] #241.1.1.mem.str.ro <#215.1.7.mem.ro, ofs 0x87, size 2, "bb">
  [2] #240.1.2.hash <size 3, max 3>
IP: #215:0x8c, type 8, 141[6]
GC: ++#241.1.1.mem.str.ro
GC: ++#242.1.1.num.int
GC: --#236.1.1.mem.str.ro
GC: --#215.1.7.mem.ro
GC: --#237.1.1.num.int
GC: --#242.1.2.num.int
GC: --#241.1.2.mem.str.ro
GC: --#240.1.2.hash
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x93 (0x8c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0x93, type 8, 148[5]
GC: ++#240.1.1.hash
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.6.mem.ro, ip 0x99 (0x93), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash <size 3, max 3>
IP: #215:0x99, type 7, 154[2]
GC: ++#215.1.6.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.7.mem.ro, ip 0x9c (0x99), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #243.1.1.mem.str.ro <#215.1.7.mem.ro, ofs 0x9a, size 2, "dd">
  [1] #240.1.2.hash <size 3, max 3>
IP: #215:0x9c, type 1, 444 (0x1bc)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.7.mem.ro, ip 0x9f (0x9c), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #244.1.1.num.int <444 (0x1bc)>
  [1] #243.1.1.mem.str.ro <#215.1.7.mem.ro, ofs 0x9a, size 2, "dd">
  [2] #240.1.2.hash <size 3, max 3>
IP: #215:0x9f, type 8, 160[6]
GC: ++#243.1.1.mem.str.ro
GC: ++#244.1.1.num.int
GC: --#244.1.2.num.int
GC: --#243.1.2.mem.str.ro
GC: --#240.1.2.hash
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.7.mem.ro, ip 0xa6 (0x9f), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0xa6, type 9, 167[5]
GC: ++#215.1.7.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xac (0xa6), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #245.1.1.mem.ref.ro <#215.1.8.mem.ro, ofs 0xa7, size 5, "foo_3">
IP: #215:0xac, type 7, 173[2]
GC: ++#215.1.8.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0xaf (0xac), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #246.1.1.mem.str.ro <#215.1.9.mem.ro, ofs 0xad, size 2, "12">
  [1] #245.1.1.mem.ref.ro <#215.1.9.mem.ro, ofs 0xa7, size 5, "foo_3">
IP: #215:0xaf, type 7, 176[0]
GC: ++#215.1.9.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.10.mem.ro, ip 0xb0 (0xaf), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #247.1.1.mem.str.ro <#215.1.10.mem.ro, ofs 0xb0, size 0, "">
  [1] #246.1.1.mem.str.ro <#215.1.10.mem.ro, ofs 0xad, size 2, "12">
  [2] #245.1.1.mem.ref.ro <#215.1.10.mem.ro, ofs 0xa7, size 5, "foo_3">
IP: #215:0xb0, type 8, 177[3]
GC: --#247.1.1.mem.str.ro
GC: --#215.1.10.mem.ro
GC: --#246.1.1.mem.str.ro
GC: --#215.1.9.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xb4 (0xb0), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #248.1.1.mem.str <size 2, "12">
  [1] #245.1.1.mem.ref.ro <#215.1.8.mem.ro, ofs 0xa7, size 5, "foo_3">
IP: #215:0xb4, type 8, 181[3]
GC: ++#245.1.1.mem.ref.ro
GC: ++#248.1.1.mem.str
GC: --#248.1.2.mem.str
GC: --#245.1.2.mem.ref.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xb8 (0xb4), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0xb8, type 8, 185[5]
GC: ++#248.1.1.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xbe (0xb8), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #248.1.2.mem.str <size 2, "12">
IP: #215:0xbe, type 1, 0 (0x0)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xbf (0xbe), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #249.1.1.num.int <0 (0x0)>
  [1] #248.1.2.mem.str <size 2, "12">
IP: #215:0xbf, type 1, 65 (0x41)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xc1 (0xbf), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #250.1.1.num.int <65 (0x41)>
  [1] #249.1.1.num.int <0 (0x0)>
  [2] #248.1.2.mem.str <size 2, "12">
IP: #215:0xc1, type 8, 194[6]
GC: --#250.1.1.num.int
GC: --#249.1.1.num.int
GC: --#248.1.2.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xc8 (0xc1), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0xc8, type 8, 201[5]
GC: ++#248.1.1.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xce (0xc8), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #248.1.2.mem.str <size 3, "A12">
IP: #215:0xce, type 1, 3 (0x3)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xcf (0xce), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #251.1.1.num.int <3 (0x3)>
  [1] #248.1.2.mem.str <size 3, "A12">
IP: #215:0xcf, type 1, 53 (0x35)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xd1 (0xcf), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #252.1.1.num.int <53 (0x35)>
  [1] #251.1.1.num.int <3 (0x3)>
  [2] #248.1.2.mem.str <size 3, "A12">
IP: #215:0xd1, type 8, 210[6]
GC: --#252.1.1.num.int
GC: --#251.1.1.num.int
GC: --#248.1.2.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xd8 (0xd1), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0xd8, type 8, 217[5]
GC: ++#248.1.1.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xde (0xd8), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #248.1.2.mem.str <size 4, "A125">
IP: #215:0xde, type 1, -1 (0xffffffffffffffff)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xe0 (0xde), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #253.1.1.num.int <-1 (0xffffffffffffffff)>
  [1] #248.1.2.mem.str <size 4, "A125">
IP: #215:0xe0, type 1, 54 (0x36)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xe2 (0xe0), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #254.1.1.num.int <54 (0x36)>
  [1] #253.1.1.num.int <-1 (0xffffffffffffffff)>
  [2] #248.1.2.mem.str <size 4, "A125">
IP: #215:0xe2, type 8, 227[6]
GC: --#254.1.1.num.int
GC: --#253.1.1.num.int
GC: --#248.1.2.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xe9 (0xe2), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0xe9, type 8, 234[5]
GC: ++#248.1.1.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xef (0xe9), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #248.1.2.mem.str <size 5, "A1265">
IP: #215:0xef, type 1, 19 (0x13)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xf1 (0xef), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #255.1.1.num.int <19 (0x13)>
  [1] #248.1.2.mem.str <size 5, "A1265">
IP: #215:0xf1, type 1, 88 (0x58)
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xf3 (0xf1), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #256.1.1.num.int <88 (0x58)>
  [1] #255.1.1.num.int <19 (0x13)>
  [2] #248.1.2.mem.str <size 5, "A1265">
IP: #215:0xf3, type 8, 244[6]
GC: --#256.1.1.num.int
GC: --#255.1.1.num.int
GC: --#248.1.2.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0xfa (0xf3), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
IP: #215:0xfa, type 8, 251[5]
GC: ++#223.1.1.array
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0x100 (0xfa), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #223.1.2.array <size 11, max 20>
IP: #215:0x100, type 6, 257[1]
GC: ++#215.1.8.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x102 (0x100), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #257.1.1.mem.code.ro <#215.1.9.mem.ro, ofs 0x101, size 1>
  [1] #223.1.2.array <size 11, max 20>
IP: #215:0x102, type 8, 259[6]
GC: ++#225.1.1.num.int
GC: ++#257.1.1.mem.code.ro
GC: ++#223.1.2.array
GC: --#257.1.2.mem.code.ro
GC: --#223.1.3.array
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
GC: ++#219.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #219.1.2.num.int <10 (0xa)>
  [1] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
GC: ++#220.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #220.1.2.num.int <20 (0x14)>
  [1] #219.1.2.num.int <10 (0xa)>
  [2] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
GC: ++#221.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #221.1.2.num.int <30 (0x1e)>
  [1] #220.1.2.num.int <20 (0x14)>
  [2] #219.1.2.num.int <10 (0xa)>
  [3] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
GC: ++#230.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 5, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #230.1.2.num.int <500 (0x1f4)>
  [1] #221.1.2.num.int <30 (0x1e)>
  [2] #220.1.2.num.int <20 (0x14)>
  [3] #219.1.2.num.int <10 (0xa)>
  [4] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
GC: ++#228.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 6, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #228.1.2.num.int <400 (0x190)>
  [1] #230.1.2.num.int <500 (0x1f4)>
  [2] #221.1.2.num.int <30 (0x1e)>
  [3] #220.1.2.num.int <20 (0x14)>
  [4] #219.1.2.num.int <10 (0xa)>
  [5] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
GC: ++#222.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 7, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #222.1.2.num.int <40 (0x28)>
  [1] #228.1.2.num.int <400 (0x190)>
  [2] #230.1.2.num.int <500 (0x1f4)>
  [3] #221.1.2.num.int <30 (0x1e)>
  [4] #220.1.2.num.int <20 (0x14)>
  [5] #219.1.2.num.int <10 (0xa)>
  [6] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 8, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #222.1.2.num.int <40 (0x28)>
  [2] #228.1.2.num.int <400 (0x190)>
  [3] #230.1.2.num.int <500 (0x1f4)>
  [4] #221.1.2.num.int <30 (0x1e)>
  [5] #220.1.2.num.int <20 (0x14)>
  [6] #219.1.2.num.int <10 (0xa)>
  [7] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 9, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #0.0.nil <nil>
  [2] #222.1.2.num.int <40 (0x28)>
  [3] #228.1.2.num.int <400 (0x190)>
  [4] #230.1.2.num.int <500 (0x1f4)>
  [5] #221.1.2.num.int <30 (0x1e)>
  [6] #220.1.2.num.int <20 (0x14)>
  [7] #219.1.2.num.int <10 (0xa)>
  [8] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 10, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #0.0.nil <nil>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #222.1.2.num.int <40 (0x28)>
  [4] #228.1.2.num.int <400 (0x190)>
  [5] #230.1.2.num.int <500 (0x1f4)>
  [6] #221.1.2.num.int <30 (0x1e)>
  [7] #220.1.2.num.int <20 (0x14)>
  [8] #219.1.2.num.int <10 (0xa)>
  [9] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
GC: ++#232.1.1.num.int
== backtrace ==
  [0] #224.2.1.ctx.forall <code #257.1.1.mem.code.ro, ip 0x0 (0x0), index 11, iterate #223.1.2.array>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #232.1.2.num.int <900 (0x384)>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #222.1.2.num.int <40 (0x28)>
  [5] #228.1.2.num.int <400 (0x190)>
  [6] #230.1.2.num.int <500 (0x1f4)>
  [7] #221.1.2.num.int <30 (0x1e)>
  [8] #220.1.2.num.int <20 (0x14)>
  [9] #219.1.2.num.int <10 (0xa)>
  [10] #225.1.2.num.int <100 (0x64)>
IP: #257:0x0, type 3, 1 (0x1)
GC: ++#217.1.1.ctx.func
GC: --#224.2.1.ctx.forall
GC: --#217.1.2.ctx.func
GC: --#257.1.1.mem.code.ro
GC: --#223.1.2.array
GC: --#215.1.9.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0x109 (0x102), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #232.1.2.num.int <900 (0x384)>
  [1] #0.0.nil <nil>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #222.1.2.num.int <40 (0x28)>
  [5] #228.1.2.num.int <400 (0x190)>
  [6] #230.1.2.num.int <500 (0x1f4)>
  [7] #221.1.2.num.int <30 (0x1e)>
  [8] #220.1.2.num.int <20 (0x14)>
  [9] #219.1.2.num.int <10 (0xa)>
  [10] #225.1.2.num.int <100 (0x64)>
IP: #215:0x109, type 8, 266[5]
GC: ++#240.1.1.hash
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0x10f (0x109), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #240.1.2.hash <size 4, max 19>
  [1] #232.1.2.num.int <900 (0x384)>
  [2] #0.0.nil <nil>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #222.1.2.num.int <40 (0x28)>
  [6] #228.1.2.num.int <400 (0x190)>
  [7] #230.1.2.num.int <500 (0x1f4)>
  [8] #221.1.2.num.int <30 (0x1e)>
  [9] #220.1.2.num.int <20 (0x14)>
  [10] #219.1.2.num.int <10 (0xa)>
  [11] #225.1.2.num.int <100 (0x64)>
IP: #215:0x10f, type 6, 272[1]
GC: ++#215.1.8.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x111 (0x10f), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #227.2.1.mem.code.ro <#215.1.9.mem.ro, ofs 0x110, size 1>
  [1] #240.1.2.hash <size 4, max 19>
  [2] #232.1.2.num.int <900 (0x384)>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #0.0.nil <nil>
  [6] #222.1.2.num.int <40 (0x28)>
  [7] #228.1.2.num.int <400 (0x190)>
  [8] #230.1.2.num.int <500 (0x1f4)>
  [9] #221.1.2.num.int <30 (0x1e)>
  [10] #220.1.2.num.int <20 (0x14)>
  [11] #219.1.2.num.int <10 (0xa)>
  [12] #225.1.2.num.int <100 (0x64)>
IP: #215:0x111, type 8, 274[6]
GC: ++#234.1.1.mem.str.ro
GC: ++#235.1.1.num.int
GC: ++#227.2.1.mem.code.ro
GC: ++#240.1.2.hash
GC: --#227.2.2.mem.code.ro
GC: --#240.1.3.hash
== backtrace ==
  [0] #229.2.1.ctx.forall <code #227.2.1.mem.code.ro, ip 0x0 (0x0), index 1, iterate #240.1.2.hash>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x118 (0x111), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #235.1.2.num.int <11 (0xb)>
  [1] #234.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x6c, size 2, "aa">
  [2] #232.1.2.num.int <900 (0x384)>
  [3] #0.0.nil <nil>
  [4] #0.0.nil <nil>
  [5] #0.0.nil <nil>
  [6] #222.1.2.num.int <40 (0x28)>
  [7] #228.1.2.num.int <400 (0x190)>
  [8] #230.1.2.num.int <500 (0x1f4)>
  [9] #221.1.2.num.int <30 (0x1e)>
  [10] #220.1.2.num.int <20 (0x14)>
  [11] #219.1.2.num.int <10 (0xa)>
  [12] #225.1.2.num.int <100 (0x64)>
IP: #227:0x0, type 3, 1 (0x1)
GC: ++#241.1.1.mem.str.ro
GC: ++#242.1.1.num.int
== backtrace ==
  [0] #229.2.1.ctx.forall <code #227.2.1.mem.code.ro, ip 0x0 (0x0), index 2, iterate #240.1.2.hash>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x118 (0x111), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #242.1.2.num.int <222 (0xde)>
  [1] #241.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x87, size 2, "bb">
  [2] #235.1.2.num.int <11 (0xb)>
  [3] #234.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x6c, size 2, "aa">
  [4] #232.1.2.num.int <900 (0x384)>
  [5] #0.0.nil <nil>
  [6] #0.0.nil <nil>
  [7] #0.0.nil <nil>
  [8] #222.1.2.num.int <40 (0x28)>
  [9] #228.1.2.num.int <400 (0x190)>
  [10] #230.1.2.num.int <500 (0x1f4)>
  [11] #221.1.2.num.int <30 (0x1e)>
  [12] #220.1.2.num.int <20 (0x14)>
  [13] #219.1.2.num.int <10 (0xa)>
  [14] #225.1.2.num.int <100 (0x64)>
IP: #227:0x0, type 3, 1 (0x1)
GC: ++#238.1.1.mem.str.ro
GC: ++#239.1.1.num.int
== backtrace ==
  [0] #229.2.1.ctx.forall <code #227.2.1.mem.code.ro, ip 0x0 (0x0), index 3, iterate #240.1.2.hash>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x118 (0x111), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #239.1.2.num.int <33 (0x21)>
  [1] #238.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x76, size 2, "cc">
  [2] #242.1.2.num.int <222 (0xde)>
  [3] #241.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x87, size 2, "bb">
  [4] #235.1.2.num.int <11 (0xb)>
  [5] #234.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x6c, size 2, "aa">
  [6] #232.1.2.num.int <900 (0x384)>
  [7] #0.0.nil <nil>
  [8] #0.0.nil <nil>
  [9] #0.0.nil <nil>
  [10] #222.1.2.num.int <40 (0x28)>
  [11] #228.1.2.num.int <400 (0x190)>
  [12] #230.1.2.num.int <500 (0x1f4)>
  [13] #221.1.2.num.int <30 (0x1e)>
  [14] #220.1.2.num.int <20 (0x14)>
  [15] #219.1.2.num.int <10 (0xa)>
  [16] #225.1.2.num.int <100 (0x64)>
IP: #227:0x0, type 3, 1 (0x1)
GC: ++#243.1.1.mem.str.ro
GC: ++#244.1.1.num.int
== backtrace ==
  [0] #229.2.1.ctx.forall <code #227.2.1.mem.code.ro, ip 0x0 (0x0), index 4, iterate #240.1.2.hash>
  [1] #217.1.1.ctx.func <code #215.1.9.mem.ro, ip 0x118 (0x111), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #244.1.2.num.int <444 (0x1bc)>
  [1] #243.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x9a, size 2, "dd">
  [2] #239.1.2.num.int <33 (0x21)>
  [3] #238.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x76, size 2, "cc">
  [4] #242.1.2.num.int <222 (0xde)>
  [5] #241.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x87, size 2, "bb">
  [6] #235.1.2.num.int <11 (0xb)>
  [7] #234.1.2.mem.str.ro <#215.1.9.mem.ro, ofs 0x6c, size 2, "aa">
  [8] #232.1.2.num.int <900 (0x384)>
  [9] #0.0.nil <nil>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #222.1.2.num.int <40 (0x28)>
  [13] #228.1.2.num.int <400 (0x190)>
  [14] #230.1.2.num.int <500 (0x1f4)>
  [15] #221.1.2.num.int <30 (0x1e)>
  [16] #220.1.2.num.int <20 (0x14)>
  [17] #219.1.2.num.int <10 (0xa)>
  [18] #225.1.2.num.int <100 (0x64)>
IP: #227:0x0, type 3, 1 (0x1)
GC: ++#217.1.1.ctx.func
GC: --#229.2.1.ctx.forall
GC: --#217.1.2.ctx.func
GC: --#227.2.1.mem.code.ro
GC: --#240.1.2.hash
GC: --#215.1.9.mem.ro
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0x118 (0x111), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #244.1.2.num.int <444 (0x1bc)>
  [1] #243.1.2.mem.str.ro <#215.1.8.mem.ro, ofs 0x9a, size 2, "dd">
  [2] #239.1.2.num.int <33 (0x21)>
  [3] #238.1.2.mem.str.ro <#215.1.8.mem.ro, ofs 0x76, size 2, "cc">
  [4] #242.1.2.num.int <222 (0xde)>
  [5] #241.1.2.mem.str.ro <#215.1.8.mem.ro, ofs 0x87, size 2, "bb">
  [6] #235.1.2.num.int <11 (0xb)>
  [7] #234.1.2.mem.str.ro <#215.1.8.mem.ro, ofs 0x6c, size 2, "aa">
  [8] #232.1.2.num.int <900 (0x384)>
  [9] #0.0.nil <nil>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #222.1.2.num.int <40 (0x28)>
  [13] #228.1.2.num.int <400 (0x190)>
  [14] #230.1.2.num.int <500 (0x1f4)>
  [15] #221.1.2.num.int <30 (0x1e)>
  [16] #220.1.2.num.int <20 (0x14)>
  [17] #219.1.2.num.int <10 (0xa)>
  [18] #225.1.2.num.int <100 (0x64)>
IP: #215:0x118, type 8, 281[5]
GC: ++#248.1.1.mem.str
== backtrace ==
  [0] #217.1.1.ctx.func <code #215.1.8.mem.ro, ip 0x11e (0x118), dict #8.1.2.hash>
== stack (#216.1.1.array) ==
  [0] #248.1.2.mem.str <size 20, "A1265              X">
  [1] #244.1.2.num.int <444 (0x1bc)>
  [2] #243.1.2.mem.str.ro <#215.1.8.mem.ro, ofs 0x9a, size 2, "dd">
  [3] #239.1.2.num.int <33 (0x21)>
  [4] #238.1.2.mem.str.ro <#215.1.8.mem.ro, ofs 0x76, size 2, "cc">
  [5] #242.1.2.num.int <222 (0xde)>
  [6] #241.1.2.mem.str.ro <#215.1.8.mem.ro, ofs 0x87, size 2, "bb">
  [7] #235.1.2.num.int <11 (0xb)>
  [8] #234.1.2.mem.str.ro <#215.1.8.mem.ro, ofs 0x6c, size 2, "aa">
  [9] #232.1.2.num.int <900 (0x384)>
  [10] #0.0.nil <nil>
  [11] #0.0.nil <nil>
  [12] #0.0.nil <nil>
  [13] #222.1.2.num.int <40 (0x28)>
  [14] #228.1.2.num.int <400 (0x190)>
  [15] #230.1.2.num.int <500 (0x1f4)>
  [16] #221.1.2.num.int <30 (0x1e)>
  [17] #220.1.2.num.int <20 (0x14)>
  [18] #219.1.2.num.int <10 (0xa)>
  [19] #225.1.2.num.int <100 (0x64)>
